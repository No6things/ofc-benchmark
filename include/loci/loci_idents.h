/* Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University */
/* Copyright (c) 2011, 2012 Open Networking Foundation */
/* Copyright (c) 2012, 2013 Big Switch Networks, Inc. */
/* See the file LICENSE.loci which should have been included in the source distribution */

/****************************************************************
 * File: loci_idents.h
 *
 * DO NOT EDIT
 *
 * This file is automatically generated
 *
 ****************************************************************/


#if !defined(_LOCI_IDENTS_H_)
#define _LOCI_IDENTS_H_


/**
 * For each identifier from an OpenFlow header file, a Loxi version
 * of the identifier is generated.  For example, ofp_port_flood becomes
 * OF_PORT_DEST_FLOOD.  Loxi provides the following macros related to
 * OpenFlow identifiers (using OF_IDENT_ as an example below):
 *     OF_IDENT_BY_VERSION(version) Get the value for the specific version
 *     OF_IDENT_SUPPORTED(version) Boolean: Is OF_IDENT defined for version
 *     OF_IDENT The common value across all versions if defined
 *     OF_IDENT_GENERIC A unique value across all OF identifiers
 *
 * For identifiers marked as flags, the following are also defined
 *     OF_IDENT_SET(flags, version)
 *     OF_IDENT_CLEAR(flags, version)
 *     OF_IDENT_TEST(flags, version)
 *
 * Notes:
 *
 *     OF_IDENT_BY_VERSION(version) returns an undefined value
 * if the passed version does not define OF_IDENT.  It does not generate an
 * error, nor record anything to the log file.  If the value is the same
 * across all defined versions, the version is ignored.
 *
 *     OF_IDENT is only defined if the value is the same across all
 * target LOXI versions FOR WHICH IT IS DEFINED.  No error checking is
 * done.  This allows code to be written without requiring the version
 * to be known or referenced when it doesn't matter.  It does mean
 * that when porting to a new version of OpenFlow, compile errors may
 * occur.  However, this is an indication that the existing code must
 * be updated to account for a change in the semantics with the newly
 * supported OpenFlow version.
 *
 * @fixme Currently we do not handle multi-bit flags or field values; for
 * example, OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER is the meaning for
 * a zero value in the bits indicated by OF_TABLE_CONFIG_TABLE_MISS_MASK.
 *
 * @fixme Need to decide (or make a code gen option) on the requirement
 * for defining OF_IDENT:  Is it that all target versions define it and
 * the agree?  Or only that the versions which define it agree?
 */

/**
 * @brief True for the special case of all versions supported
 */
#define OF_IDENT_IN_ALL_VERSIONS 1 /* Indicates identifier in all versions */

/**
 * @brief General macro to map version to value where values given as params
 *
 * If unknown version is passed, use the latest version's value
 */
#define OF_VALUE_BY_VERSION(version, value_OF_1_0, value_OF_1_1, value_OF_1_2, value_OF_1_3, value_OF_1_4) \
    (((version) == OF_VERSION_1_0) ? (value_OF_1_0) : \
     ((version) == OF_VERSION_1_1) ? (value_OF_1_1) : \
     ((version) == OF_VERSION_1_2) ? (value_OF_1_2) : \
     ((version) == OF_VERSION_1_3) ? (value_OF_1_3) : \
     ((version) == OF_VERSION_1_4) ? (value_OF_1_4) : (value_OF_1_4))

/**
 * @brief Generic set a flag
 */
#define OF_FLAG_SET(flags, mask) (flags) = (flags) | (mask)

/**
 * @brief Generic test if a flag is set
 */
#define OF_FLAG_CLEAR(flags, mask) (flags) = (flags) & ~(mask)

/**
 * @brief Generic test if a flag is set
 */
#define OF_FLAG_TEST(flags, mask) ((flags) & (mask) ? 1 : 0)

/**
 * @brief Set a flag where the value is an enum indication of bit shift
 */
#define OF_FLAG_ENUM_SET(flags, e_val) OF_FLAG_SET(flags, 1 << (e_val))

/**
 * @brief Clear a flag where the value is an enum indication of bit shift
 */
#define OF_FLAG_ENUM_CLEAR(flags, e_val) OF_FLAG_CLEAR(flags, 1 << (e_val))

/**
 * @brief Test a flag where the value is an enum indication of bit shift
 */
#define OF_FLAG_ENUM_TEST(flags, e_val) OF_FLAG_TEST(flags, 1 << (e_val))

/****************************************************************
 * Identifiers from macro_definitions
 *****************************************************************/

/*
 * Defines for OF_BUFFER_ID_NO_BUFFER
 * Original name OFP_NO_BUFFER
 */
#define OF_BUFFER_ID_NO_BUFFER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_BUFFER_ID_NO_BUFFER (0xffffffff)
#define OF_BUFFER_ID_NO_BUFFER_BY_VERSION(version) (0xffffffff)
#define OF_BUFFER_ID_NO_BUFFER_GENERIC 1

/*
 * Defines for OF_DEFAULT_MISS_SEND_LEN
 * Original name OFP_DEFAULT_MISS_SEND_LEN
 */
#define OF_DEFAULT_MISS_SEND_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_DEFAULT_MISS_SEND_LEN (0x80)
#define OF_DEFAULT_MISS_SEND_LEN_BY_VERSION(version) (0x80)
#define OF_DEFAULT_MISS_SEND_LEN_GENERIC 2

/*
 * Defines for OF_DEFAULT_PRIORITY
 * Original name OFP_DEFAULT_PRIORITY
 */
#define OF_DEFAULT_PRIORITY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_DEFAULT_PRIORITY (0x8000)
#define OF_DEFAULT_PRIORITY_BY_VERSION(version) (0x8000)
#define OF_DEFAULT_PRIORITY_GENERIC 3

/*
 * Defines for OF_DESC_STR_LEN
 * Original name DESC_STR_LEN
 */
#define OF_DESC_STR_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_DESC_STR_LEN (0x100)
#define OF_DESC_STR_LEN_BY_VERSION(version) (0x100)
#define OF_DESC_STR_LEN_GENERIC 4

/*
 * Defines for OF_DL_TYPE_ETH2_CUTOFF
 * Original name OFP_DL_TYPE_ETH2_CUTOFF
 */
#define OF_DL_TYPE_ETH2_CUTOFF_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_DL_TYPE_ETH2_CUTOFF (0x600)
#define OF_DL_TYPE_ETH2_CUTOFF_BY_VERSION(version) (0x600)
#define OF_DL_TYPE_ETH2_CUTOFF_GENERIC 5

/*
 * Defines for OF_DL_TYPE_NOT_ETH_TYPE
 * Original name OFP_DL_TYPE_NOT_ETH_TYPE
 */
#define OF_DL_TYPE_NOT_ETH_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_DL_TYPE_NOT_ETH_TYPE (0x5ff)
#define OF_DL_TYPE_NOT_ETH_TYPE_BY_VERSION(version) (0x5ff)
#define OF_DL_TYPE_NOT_ETH_TYPE_GENERIC 6

/*
 * Defines for OF_ETH_ALEN
 * Original name OFP_ETH_ALEN
 */
#define OF_ETH_ALEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ETH_ALEN (0x6)
#define OF_ETH_ALEN_BY_VERSION(version) (0x6)
#define OF_ETH_ALEN_GENERIC 7

/*
 * Defines for OF_FLOW_PERMANENT
 * Original name OFP_FLOW_PERMANENT
 */
#define OF_FLOW_PERMANENT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_PERMANENT (0x0)
#define OF_FLOW_PERMANENT_BY_VERSION(version) (0x0)
#define OF_FLOW_PERMANENT_GENERIC 8

/*
 * Defines for OF_FLOW_WC_V1_ICMP_CODE
 * Original name OFPFW_ICMP_CODE
 */
#define OF_FLOW_WC_V1_ICMP_CODE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_ICMP_CODE (0x80)
#define OF_FLOW_WC_V1_ICMP_CODE_BY_VERSION(version) (0x80)
#define OF_FLOW_WC_V1_ICMP_CODE_GENERIC 9

/*
 * Defines for OF_FLOW_WC_V1_ICMP_TYPE
 * Original name OFPFW_ICMP_TYPE
 */
#define OF_FLOW_WC_V1_ICMP_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_ICMP_TYPE (0x40)
#define OF_FLOW_WC_V1_ICMP_TYPE_BY_VERSION(version) (0x40)
#define OF_FLOW_WC_V1_ICMP_TYPE_GENERIC 10

/*
 * Defines for OF_MATCH_TYPE_STANDARD_LENGTH
 * Original name OFPMT_STANDARD_LENGTH
 */
#define OF_MATCH_TYPE_STANDARD_LENGTH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_MATCH_TYPE_STANDARD_LENGTH (0x58)
#define OF_MATCH_TYPE_STANDARD_LENGTH_BY_VERSION(version) (0x58)
#define OF_MATCH_TYPE_STANDARD_LENGTH_GENERIC 11

/*
 * Defines for OF_MAX_PORT_NAME_LEN
 * Original name OFP_MAX_PORT_NAME_LEN
 */
#define OF_MAX_PORT_NAME_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_MAX_PORT_NAME_LEN (0x10)
#define OF_MAX_PORT_NAME_LEN_BY_VERSION(version) (0x10)
#define OF_MAX_PORT_NAME_LEN_GENERIC 12

/*
 * Defines for OF_MAX_TABLE_NAME_LEN
 * Original name OFP_MAX_TABLE_NAME_LEN
 */
#define OF_MAX_TABLE_NAME_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_MAX_TABLE_NAME_LEN (0x20)
#define OF_MAX_TABLE_NAME_LEN_BY_VERSION(version) (0x20)
#define OF_MAX_TABLE_NAME_LEN_GENERIC 13

/*
 * Defines for OF_QUEUE_ALL
 * Original name OFPQ_ALL
 */
#define OF_QUEUE_ALL_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_QUEUE_ALL (0xffffffff)
#define OF_QUEUE_ALL_BY_VERSION(version) (0xffffffff)
#define OF_QUEUE_ALL_GENERIC 14

/*
 * Defines for OF_QUEUE_MAX_RATE_UNCFG
 * Original name OFPQ_MAX_RATE_UNCFG
 */
#define OF_QUEUE_MAX_RATE_UNCFG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_QUEUE_MAX_RATE_UNCFG (0xffff)
#define OF_QUEUE_MAX_RATE_UNCFG_BY_VERSION(version) (0xffff)
#define OF_QUEUE_MAX_RATE_UNCFG_GENERIC 15

/*
 * Defines for OF_QUEUE_MIN_RATE_UNCFG
 * Original name OFPQ_MIN_RATE_UNCFG
 */
#define OF_QUEUE_MIN_RATE_UNCFG_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_QUEUE_MIN_RATE_UNCFG (0xffff)
#define OF_QUEUE_MIN_RATE_UNCFG_BY_VERSION(version) (0xffff)
#define OF_QUEUE_MIN_RATE_UNCFG_GENERIC 16

/*
 * Defines for OF_SERIAL_NUM_LEN
 * Original name SERIAL_NUM_LEN
 */
#define OF_SERIAL_NUM_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_SERIAL_NUM_LEN (0x20)
#define OF_SERIAL_NUM_LEN_BY_VERSION(version) (0x20)
#define OF_SERIAL_NUM_LEN_GENERIC 17

/*
 * Defines for OF_SSL_PORT
 * Original name OFP_SSL_PORT
 */
#define OF_SSL_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_SSL_PORT (0x19fd)
#define OF_SSL_PORT_BY_VERSION(version) (0x19fd)
#define OF_SSL_PORT_GENERIC 18

/*
 * Defines for OF_TCP_PORT
 * Original name OFP_TCP_PORT
 */
#define OF_TCP_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_TCP_PORT (0x19fd)
#define OF_TCP_PORT_BY_VERSION(version) (0x19fd)
#define OF_TCP_PORT_GENERIC 19

/*
 * Defines for OF_VLAN_UNTAGGED
 * Original name OFP_VLAN_NONE
 */
#define OF_VLAN_UNTAGGED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_VLAN_UNTAGGED_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0xffff, 0x0, 0x0, 0x0, 0x0)
#define OF_VLAN_UNTAGGED_GENERIC 20

/****************************************************************
 * Identifiers from of_bsn_hash_gtp_port_match
 *****************************************************************/

/*
 * Defines for OF_BSN_HASH_GTP_PORT_MATCH_DST
 * Original name OF_BSN_HASH_GTP_PORT_MATCH_DST
 */
#define OF_BSN_HASH_GTP_PORT_MATCH_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_BSN_HASH_GTP_PORT_MATCH_DST (0x2)
#define OF_BSN_HASH_GTP_PORT_MATCH_DST_BY_VERSION(version) (0x2)
#define OF_BSN_HASH_GTP_PORT_MATCH_DST_GENERIC 21

/*
 * Defines for OF_BSN_HASH_GTP_PORT_MATCH_SRC
 * Original name OF_BSN_HASH_GTP_PORT_MATCH_SRC
 */
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC (0x1)
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC_BY_VERSION(version) (0x1)
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC_GENERIC 22

/*
 * Defines for OF_BSN_HASH_GTP_PORT_MATCH_SRC_AND_DST
 * Original name OF_BSN_HASH_GTP_PORT_MATCH_SRC_AND_DST
 */
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC_AND_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC_AND_DST (0x4)
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC_AND_DST_BY_VERSION(version) (0x4)
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC_AND_DST_GENERIC 23

/*
 * Defines for OF_BSN_HASH_GTP_PORT_MATCH_SRC_OR_DST
 * Original name OF_BSN_HASH_GTP_PORT_MATCH_SRC_OR_DST
 */
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC_OR_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC_OR_DST (0x3)
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC_OR_DST_BY_VERSION(version) (0x3)
#define OF_BSN_HASH_GTP_PORT_MATCH_SRC_OR_DST_GENERIC 24

/****************************************************************
 * Identifiers from of_bsn_hash_packet_field
 *****************************************************************/

/*
 * Defines for OFP_BSN_HASH_FIELD_DST_IP
 * Original name OFP_BSN_HASH_FIELD_DST_IP
 */
#define OFP_BSN_HASH_FIELD_DST_IP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_DST_IP (0x100)
#define OFP_BSN_HASH_FIELD_DST_IP_BY_VERSION(version) (0x100)
#define OFP_BSN_HASH_FIELD_DST_IP_GENERIC 25

/*
 * Defines for OFP_BSN_HASH_FIELD_DST_L4_PORT
 * Original name OFP_BSN_HASH_FIELD_DST_L4_PORT
 */
#define OFP_BSN_HASH_FIELD_DST_L4_PORT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_DST_L4_PORT (0x800)
#define OFP_BSN_HASH_FIELD_DST_L4_PORT_BY_VERSION(version) (0x800)
#define OFP_BSN_HASH_FIELD_DST_L4_PORT_GENERIC 26

/*
 * Defines for OFP_BSN_HASH_FIELD_DST_MAC
 * Original name OFP_BSN_HASH_FIELD_DST_MAC
 */
#define OFP_BSN_HASH_FIELD_DST_MAC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_DST_MAC (0x2)
#define OFP_BSN_HASH_FIELD_DST_MAC_BY_VERSION(version) (0x2)
#define OFP_BSN_HASH_FIELD_DST_MAC_GENERIC 27

/*
 * Defines for OFP_BSN_HASH_FIELD_ETH_TYPE
 * Original name OFP_BSN_HASH_FIELD_ETH_TYPE
 */
#define OFP_BSN_HASH_FIELD_ETH_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_ETH_TYPE (0x8)
#define OFP_BSN_HASH_FIELD_ETH_TYPE_BY_VERSION(version) (0x8)
#define OFP_BSN_HASH_FIELD_ETH_TYPE_GENERIC 28

/*
 * Defines for OFP_BSN_HASH_FIELD_INNER_L2
 * Original name OFP_BSN_HASH_FIELD_INNER_L2
 */
#define OFP_BSN_HASH_FIELD_INNER_L2_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_INNER_L2 (0x20)
#define OFP_BSN_HASH_FIELD_INNER_L2_BY_VERSION(version) (0x20)
#define OFP_BSN_HASH_FIELD_INNER_L2_GENERIC 29

/*
 * Defines for OFP_BSN_HASH_FIELD_INNER_L3
 * Original name OFP_BSN_HASH_FIELD_INNER_L3
 */
#define OFP_BSN_HASH_FIELD_INNER_L3_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_INNER_L3 (0x40)
#define OFP_BSN_HASH_FIELD_INNER_L3_BY_VERSION(version) (0x40)
#define OFP_BSN_HASH_FIELD_INNER_L3_GENERIC 30

/*
 * Defines for OFP_BSN_HASH_FIELD_IP_PROTO
 * Original name OFP_BSN_HASH_FIELD_IP_PROTO
 */
#define OFP_BSN_HASH_FIELD_IP_PROTO_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_IP_PROTO (0x200)
#define OFP_BSN_HASH_FIELD_IP_PROTO_BY_VERSION(version) (0x200)
#define OFP_BSN_HASH_FIELD_IP_PROTO_GENERIC 31

/*
 * Defines for OFP_BSN_HASH_FIELD_MPLS_LABEL1
 * Original name OFP_BSN_HASH_FIELD_MPLS_LABEL1
 */
#define OFP_BSN_HASH_FIELD_MPLS_LABEL1_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_MPLS_LABEL1 (0x1000)
#define OFP_BSN_HASH_FIELD_MPLS_LABEL1_BY_VERSION(version) (0x1000)
#define OFP_BSN_HASH_FIELD_MPLS_LABEL1_GENERIC 32

/*
 * Defines for OFP_BSN_HASH_FIELD_MPLS_LABEL2
 * Original name OFP_BSN_HASH_FIELD_MPLS_LABEL2
 */
#define OFP_BSN_HASH_FIELD_MPLS_LABEL2_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_MPLS_LABEL2 (0x2000)
#define OFP_BSN_HASH_FIELD_MPLS_LABEL2_BY_VERSION(version) (0x2000)
#define OFP_BSN_HASH_FIELD_MPLS_LABEL2_GENERIC 33

/*
 * Defines for OFP_BSN_HASH_FIELD_MPLS_LABEL3
 * Original name OFP_BSN_HASH_FIELD_MPLS_LABEL3
 */
#define OFP_BSN_HASH_FIELD_MPLS_LABEL3_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_MPLS_LABEL3 (0x4000)
#define OFP_BSN_HASH_FIELD_MPLS_LABEL3_BY_VERSION(version) (0x4000)
#define OFP_BSN_HASH_FIELD_MPLS_LABEL3_GENERIC 34

/*
 * Defines for OFP_BSN_HASH_FIELD_MPLS_LABEL_HI_BITS
 * Original name OFP_BSN_HASH_FIELD_MPLS_LABEL_HI_BITS
 */
#define OFP_BSN_HASH_FIELD_MPLS_LABEL_HI_BITS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_MPLS_LABEL_HI_BITS (0x8000)
#define OFP_BSN_HASH_FIELD_MPLS_LABEL_HI_BITS_BY_VERSION(version) (0x8000)
#define OFP_BSN_HASH_FIELD_MPLS_LABEL_HI_BITS_GENERIC 35

/*
 * Defines for OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_DST_IP
 * Original name OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_DST_IP
 */
#define OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_DST_IP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_DST_IP (0x20000)
#define OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_DST_IP_BY_VERSION(version) (0x20000)
#define OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_DST_IP_GENERIC 36

/*
 * Defines for OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_SRC_IP
 * Original name OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_SRC_IP
 */
#define OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_SRC_IP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_SRC_IP (0x10000)
#define OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_SRC_IP_BY_VERSION(version) (0x10000)
#define OFP_BSN_HASH_FIELD_MPLS_PAYLOAD_SRC_IP_GENERIC 37

/*
 * Defines for OFP_BSN_HASH_FIELD_SRC_IP
 * Original name OFP_BSN_HASH_FIELD_SRC_IP
 */
#define OFP_BSN_HASH_FIELD_SRC_IP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_SRC_IP (0x80)
#define OFP_BSN_HASH_FIELD_SRC_IP_BY_VERSION(version) (0x80)
#define OFP_BSN_HASH_FIELD_SRC_IP_GENERIC 38

/*
 * Defines for OFP_BSN_HASH_FIELD_SRC_L4_PORT
 * Original name OFP_BSN_HASH_FIELD_SRC_L4_PORT
 */
#define OFP_BSN_HASH_FIELD_SRC_L4_PORT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_SRC_L4_PORT (0x400)
#define OFP_BSN_HASH_FIELD_SRC_L4_PORT_BY_VERSION(version) (0x400)
#define OFP_BSN_HASH_FIELD_SRC_L4_PORT_GENERIC 39

/*
 * Defines for OFP_BSN_HASH_FIELD_SRC_MAC
 * Original name OFP_BSN_HASH_FIELD_SRC_MAC
 */
#define OFP_BSN_HASH_FIELD_SRC_MAC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_SRC_MAC (0x4)
#define OFP_BSN_HASH_FIELD_SRC_MAC_BY_VERSION(version) (0x4)
#define OFP_BSN_HASH_FIELD_SRC_MAC_GENERIC 40

/*
 * Defines for OFP_BSN_HASH_FIELD_SYMMETRIC
 * Original name OFP_BSN_HASH_FIELD_SYMMETRIC
 */
#define OFP_BSN_HASH_FIELD_SYMMETRIC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_SYMMETRIC (0x40000)
#define OFP_BSN_HASH_FIELD_SYMMETRIC_BY_VERSION(version) (0x40000)
#define OFP_BSN_HASH_FIELD_SYMMETRIC_GENERIC 41

/*
 * Defines for OFP_BSN_HASH_FIELD_VLAN_ID
 * Original name OFP_BSN_HASH_FIELD_VLAN_ID
 */
#define OFP_BSN_HASH_FIELD_VLAN_ID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_FIELD_VLAN_ID (0x10)
#define OFP_BSN_HASH_FIELD_VLAN_ID_BY_VERSION(version) (0x10)
#define OFP_BSN_HASH_FIELD_VLAN_ID_GENERIC 42

/****************************************************************
 * Identifiers from of_bsn_hash_packet_type
 *****************************************************************/

/*
 * Defines for OF_BSN_HASH_PACKET_IPV4
 * Original name OF_BSN_HASH_PACKET_IPV4
 */
#define OF_BSN_HASH_PACKET_IPV4_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_BSN_HASH_PACKET_IPV4 (0x3)
#define OF_BSN_HASH_PACKET_IPV4_BY_VERSION(version) (0x3)
#define OF_BSN_HASH_PACKET_IPV4_GENERIC 43

/*
 * Defines for OF_BSN_HASH_PACKET_IPV6
 * Original name OF_BSN_HASH_PACKET_IPV6
 */
#define OF_BSN_HASH_PACKET_IPV6_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_BSN_HASH_PACKET_IPV6 (0x4)
#define OF_BSN_HASH_PACKET_IPV6_BY_VERSION(version) (0x4)
#define OF_BSN_HASH_PACKET_IPV6_GENERIC 44

/*
 * Defines for OF_BSN_HASH_PACKET_L2
 * Original name OF_BSN_HASH_PACKET_L2
 */
#define OF_BSN_HASH_PACKET_L2_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_BSN_HASH_PACKET_L2 (0x0)
#define OF_BSN_HASH_PACKET_L2_BY_VERSION(version) (0x0)
#define OF_BSN_HASH_PACKET_L2_GENERIC 45

/*
 * Defines for OF_BSN_HASH_PACKET_L2GRE
 * Original name OF_BSN_HASH_PACKET_L2GRE
 */
#define OF_BSN_HASH_PACKET_L2GRE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_BSN_HASH_PACKET_L2GRE (0x1)
#define OF_BSN_HASH_PACKET_L2GRE_BY_VERSION(version) (0x1)
#define OF_BSN_HASH_PACKET_L2GRE_GENERIC 46

/*
 * Defines for OF_BSN_HASH_PACKET_MPLS
 * Original name OF_BSN_HASH_PACKET_MPLS
 */
#define OF_BSN_HASH_PACKET_MPLS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_BSN_HASH_PACKET_MPLS (0x5)
#define OF_BSN_HASH_PACKET_MPLS_BY_VERSION(version) (0x5)
#define OF_BSN_HASH_PACKET_MPLS_GENERIC 47

/*
 * Defines for OF_BSN_HASH_PACKET_SYMMETRIC
 * Original name OF_BSN_HASH_PACKET_SYMMETRIC
 */
#define OF_BSN_HASH_PACKET_SYMMETRIC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_BSN_HASH_PACKET_SYMMETRIC (0x6)
#define OF_BSN_HASH_PACKET_SYMMETRIC_BY_VERSION(version) (0x6)
#define OF_BSN_HASH_PACKET_SYMMETRIC_GENERIC 48

/****************************************************************
 * Identifiers from of_bsn_hash_type
 *****************************************************************/

/*
 * Defines for OFP_BSN_HASH_TYPE_ENHANCED
 * Original name OFP_BSN_HASH_TYPE_ENHANCED
 */
#define OFP_BSN_HASH_TYPE_ENHANCED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_TYPE_ENHANCED (0x2)
#define OFP_BSN_HASH_TYPE_ENHANCED_BY_VERSION(version) (0x2)
#define OFP_BSN_HASH_TYPE_ENHANCED_GENERIC 49

/*
 * Defines for OFP_BSN_HASH_TYPE_L2
 * Original name OFP_BSN_HASH_TYPE_L2
 */
#define OFP_BSN_HASH_TYPE_L2_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_TYPE_L2 (0x0)
#define OFP_BSN_HASH_TYPE_L2_BY_VERSION(version) (0x0)
#define OFP_BSN_HASH_TYPE_L2_GENERIC 50

/*
 * Defines for OFP_BSN_HASH_TYPE_L3
 * Original name OFP_BSN_HASH_TYPE_L3
 */
#define OFP_BSN_HASH_TYPE_L3_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_HASH_TYPE_L3 (0x1)
#define OFP_BSN_HASH_TYPE_L3_BY_VERSION(version) (0x1)
#define OFP_BSN_HASH_TYPE_L3_GENERIC 51

/****************************************************************
 * Identifiers from of_bsn_lacp_convergence_status
 *****************************************************************/

/*
 * Defines for LACP_OUT_OF_SYNC
 * Original name LACP_OUT_OF_SYNC
 */
#define LACP_OUT_OF_SYNC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define LACP_OUT_OF_SYNC (0x2)
#define LACP_OUT_OF_SYNC_BY_VERSION(version) (0x2)
#define LACP_OUT_OF_SYNC_GENERIC 52

/*
 * Defines for LACP_SUCCESS
 * Original name LACP_SUCCESS
 */
#define LACP_SUCCESS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define LACP_SUCCESS (0x0)
#define LACP_SUCCESS_BY_VERSION(version) (0x0)
#define LACP_SUCCESS_GENERIC 53

/*
 * Defines for LACP_TIMEDOUT
 * Original name LACP_TIMEDOUT
 */
#define LACP_TIMEDOUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define LACP_TIMEDOUT (0x1)
#define LACP_TIMEDOUT_BY_VERSION(version) (0x1)
#define LACP_TIMEDOUT_GENERIC 54

/****************************************************************
 * Identifiers from of_bsn_pdu_slot_num
 *****************************************************************/

/*
 * Defines for BSN_PDU_SLOT_NUM_ANY
 * Original name BSN_PDU_SLOT_NUM_ANY
 */
#define BSN_PDU_SLOT_NUM_ANY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define BSN_PDU_SLOT_NUM_ANY (0xff)
#define BSN_PDU_SLOT_NUM_ANY_BY_VERSION(version) (0xff)
#define BSN_PDU_SLOT_NUM_ANY_GENERIC 55

/****************************************************************
 * Identifiers from of_bsn_vlan_counter
 *****************************************************************/

/*
 * Defines for OFP_BSN_VLAN_COUNTER_RX_BYTES
 * Original name OFP_BSN_VLAN_COUNTER_RX_BYTES
 */
#define OFP_BSN_VLAN_COUNTER_RX_BYTES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_VLAN_COUNTER_RX_BYTES (0x0)
#define OFP_BSN_VLAN_COUNTER_RX_BYTES_BY_VERSION(version) (0x0)
#define OFP_BSN_VLAN_COUNTER_RX_BYTES_GENERIC 56

/*
 * Defines for OFP_BSN_VLAN_COUNTER_RX_PACKETS
 * Original name OFP_BSN_VLAN_COUNTER_RX_PACKETS
 */
#define OFP_BSN_VLAN_COUNTER_RX_PACKETS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_VLAN_COUNTER_RX_PACKETS (0x1)
#define OFP_BSN_VLAN_COUNTER_RX_PACKETS_BY_VERSION(version) (0x1)
#define OFP_BSN_VLAN_COUNTER_RX_PACKETS_GENERIC 57

/*
 * Defines for OFP_BSN_VLAN_COUNTER_TX_BYTES
 * Original name OFP_BSN_VLAN_COUNTER_TX_BYTES
 */
#define OFP_BSN_VLAN_COUNTER_TX_BYTES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_VLAN_COUNTER_TX_BYTES (0x2)
#define OFP_BSN_VLAN_COUNTER_TX_BYTES_BY_VERSION(version) (0x2)
#define OFP_BSN_VLAN_COUNTER_TX_BYTES_GENERIC 58

/*
 * Defines for OFP_BSN_VLAN_COUNTER_TX_PACKETS
 * Original name OFP_BSN_VLAN_COUNTER_TX_PACKETS
 */
#define OFP_BSN_VLAN_COUNTER_TX_PACKETS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_VLAN_COUNTER_TX_PACKETS (0x3)
#define OFP_BSN_VLAN_COUNTER_TX_PACKETS_BY_VERSION(version) (0x3)
#define OFP_BSN_VLAN_COUNTER_TX_PACKETS_GENERIC 59

/****************************************************************
 * Identifiers from of_bsn_vrf_counter
 *****************************************************************/

/*
 * Defines for OFP_BSN_VRF_COUNTER_BYTES
 * Original name OFP_BSN_VRF_COUNTER_BYTES
 */
#define OFP_BSN_VRF_COUNTER_BYTES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_VRF_COUNTER_BYTES (0x0)
#define OFP_BSN_VRF_COUNTER_BYTES_BY_VERSION(version) (0x0)
#define OFP_BSN_VRF_COUNTER_BYTES_GENERIC 60

/*
 * Defines for OFP_BSN_VRF_COUNTER_PACKETS
 * Original name OFP_BSN_VRF_COUNTER_PACKETS
 */
#define OFP_BSN_VRF_COUNTER_PACKETS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_VRF_COUNTER_PACKETS (0x1)
#define OFP_BSN_VRF_COUNTER_PACKETS_BY_VERSION(version) (0x1)
#define OFP_BSN_VRF_COUNTER_PACKETS_GENERIC 61

/****************************************************************
 * Identifiers from ofp_action_type
 *****************************************************************/

/*
 * Defines for OF_ACTION_TYPE_COPY_TTL_IN
 * Original name OFPAT_COPY_TTL_IN
 */
#define OF_ACTION_TYPE_COPY_TTL_IN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_COPY_TTL_IN (0xc)
#define OF_ACTION_TYPE_COPY_TTL_IN_BY_VERSION(version) (0xc)
#define OF_ACTION_TYPE_COPY_TTL_IN_GENERIC 62

/*
 * Defines for OF_ACTION_TYPE_COPY_TTL_OUT
 * Original name OFPAT_COPY_TTL_OUT
 */
#define OF_ACTION_TYPE_COPY_TTL_OUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_COPY_TTL_OUT (0xb)
#define OF_ACTION_TYPE_COPY_TTL_OUT_BY_VERSION(version) (0xb)
#define OF_ACTION_TYPE_COPY_TTL_OUT_GENERIC 63

/*
 * Defines for OF_ACTION_TYPE_DEC_MPLS_TTL
 * Original name OFPAT_DEC_MPLS_TTL
 */
#define OF_ACTION_TYPE_DEC_MPLS_TTL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_DEC_MPLS_TTL (0x10)
#define OF_ACTION_TYPE_DEC_MPLS_TTL_BY_VERSION(version) (0x10)
#define OF_ACTION_TYPE_DEC_MPLS_TTL_GENERIC 64

/*
 * Defines for OF_ACTION_TYPE_DEC_NW_TTL
 * Original name OFPAT_DEC_NW_TTL
 */
#define OF_ACTION_TYPE_DEC_NW_TTL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_DEC_NW_TTL (0x18)
#define OF_ACTION_TYPE_DEC_NW_TTL_BY_VERSION(version) (0x18)
#define OF_ACTION_TYPE_DEC_NW_TTL_GENERIC 65

/*
 * Defines for OF_ACTION_TYPE_ENQUEUE
 * Original name OFPAT_ENQUEUE
 */
#define OF_ACTION_TYPE_ENQUEUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_ACTION_TYPE_ENQUEUE (0xb)
#define OF_ACTION_TYPE_ENQUEUE_BY_VERSION(version) (0xb)
#define OF_ACTION_TYPE_ENQUEUE_GENERIC 66

/*
 * Defines for OF_ACTION_TYPE_EXPERIMENTER
 * Original name OFPAT_EXPERIMENTER
 */
#define OF_ACTION_TYPE_EXPERIMENTER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_TYPE_EXPERIMENTER (0xffff)
#define OF_ACTION_TYPE_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_ACTION_TYPE_EXPERIMENTER_GENERIC 67

/*
 * Defines for OF_ACTION_TYPE_GROUP
 * Original name OFPAT_GROUP
 */
#define OF_ACTION_TYPE_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_GROUP (0x16)
#define OF_ACTION_TYPE_GROUP_BY_VERSION(version) (0x16)
#define OF_ACTION_TYPE_GROUP_GENERIC 68

/*
 * Defines for OF_ACTION_TYPE_OUTPUT
 * Original name OFPAT_OUTPUT
 */
#define OF_ACTION_TYPE_OUTPUT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_TYPE_OUTPUT (0x0)
#define OF_ACTION_TYPE_OUTPUT_BY_VERSION(version) (0x0)
#define OF_ACTION_TYPE_OUTPUT_GENERIC 69

/*
 * Defines for OF_ACTION_TYPE_POP_MPLS
 * Original name OFPAT_POP_MPLS
 */
#define OF_ACTION_TYPE_POP_MPLS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_POP_MPLS (0x14)
#define OF_ACTION_TYPE_POP_MPLS_BY_VERSION(version) (0x14)
#define OF_ACTION_TYPE_POP_MPLS_GENERIC 70

/*
 * Defines for OF_ACTION_TYPE_POP_PBB
 * Original name OFPAT_POP_PBB
 */
#define OF_ACTION_TYPE_POP_PBB_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_POP_PBB (0x1b)
#define OF_ACTION_TYPE_POP_PBB_BY_VERSION(version) (0x1b)
#define OF_ACTION_TYPE_POP_PBB_GENERIC 71

/*
 * Defines for OF_ACTION_TYPE_POP_VLAN
 * Original name OFPAT_POP_VLAN
 */
#define OF_ACTION_TYPE_POP_VLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_POP_VLAN (0x12)
#define OF_ACTION_TYPE_POP_VLAN_BY_VERSION(version) (0x12)
#define OF_ACTION_TYPE_POP_VLAN_GENERIC 72

/*
 * Defines for OF_ACTION_TYPE_PUSH_MPLS
 * Original name OFPAT_PUSH_MPLS
 */
#define OF_ACTION_TYPE_PUSH_MPLS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_PUSH_MPLS (0x13)
#define OF_ACTION_TYPE_PUSH_MPLS_BY_VERSION(version) (0x13)
#define OF_ACTION_TYPE_PUSH_MPLS_GENERIC 73

/*
 * Defines for OF_ACTION_TYPE_PUSH_PBB
 * Original name OFPAT_PUSH_PBB
 */
#define OF_ACTION_TYPE_PUSH_PBB_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_PUSH_PBB (0x1a)
#define OF_ACTION_TYPE_PUSH_PBB_BY_VERSION(version) (0x1a)
#define OF_ACTION_TYPE_PUSH_PBB_GENERIC 74

/*
 * Defines for OF_ACTION_TYPE_PUSH_VLAN
 * Original name OFPAT_PUSH_VLAN
 */
#define OF_ACTION_TYPE_PUSH_VLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_PUSH_VLAN (0x11)
#define OF_ACTION_TYPE_PUSH_VLAN_BY_VERSION(version) (0x11)
#define OF_ACTION_TYPE_PUSH_VLAN_GENERIC 75

/*
 * Defines for OF_ACTION_TYPE_SET_DL_DST
 * Original name OFPAT_SET_DL_DST
 */
#define OF_ACTION_TYPE_SET_DL_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_DL_DST_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x5, 0x4, 0x0, 0x0, 0x0)
#define OF_ACTION_TYPE_SET_DL_DST_GENERIC 76

/*
 * Defines for OF_ACTION_TYPE_SET_DL_SRC
 * Original name OFPAT_SET_DL_SRC
 */
#define OF_ACTION_TYPE_SET_DL_SRC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_DL_SRC_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x4, 0x3, 0x0, 0x0, 0x0)
#define OF_ACTION_TYPE_SET_DL_SRC_GENERIC 77

/*
 * Defines for OF_ACTION_TYPE_SET_FIELD
 * Original name OFPAT_SET_FIELD
 */
#define OF_ACTION_TYPE_SET_FIELD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_SET_FIELD (0x19)
#define OF_ACTION_TYPE_SET_FIELD_BY_VERSION(version) (0x19)
#define OF_ACTION_TYPE_SET_FIELD_GENERIC 78

/*
 * Defines for OF_ACTION_TYPE_SET_MPLS_LABEL
 * Original name OFPAT_SET_MPLS_LABEL
 */
#define OF_ACTION_TYPE_SET_MPLS_LABEL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_MPLS_LABEL (0xd)
#define OF_ACTION_TYPE_SET_MPLS_LABEL_BY_VERSION(version) (0xd)
#define OF_ACTION_TYPE_SET_MPLS_LABEL_GENERIC 79

/*
 * Defines for OF_ACTION_TYPE_SET_MPLS_TC
 * Original name OFPAT_SET_MPLS_TC
 */
#define OF_ACTION_TYPE_SET_MPLS_TC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_MPLS_TC (0xe)
#define OF_ACTION_TYPE_SET_MPLS_TC_BY_VERSION(version) (0xe)
#define OF_ACTION_TYPE_SET_MPLS_TC_GENERIC 80

/*
 * Defines for OF_ACTION_TYPE_SET_MPLS_TTL
 * Original name OFPAT_SET_MPLS_TTL
 */
#define OF_ACTION_TYPE_SET_MPLS_TTL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_SET_MPLS_TTL (0xf)
#define OF_ACTION_TYPE_SET_MPLS_TTL_BY_VERSION(version) (0xf)
#define OF_ACTION_TYPE_SET_MPLS_TTL_GENERIC 81

/*
 * Defines for OF_ACTION_TYPE_SET_NW_DST
 * Original name OFPAT_SET_NW_DST
 */
#define OF_ACTION_TYPE_SET_NW_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_NW_DST_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x7, 0x6, 0x0, 0x0, 0x0)
#define OF_ACTION_TYPE_SET_NW_DST_GENERIC 82

/*
 * Defines for OF_ACTION_TYPE_SET_NW_ECN
 * Original name OFPAT_SET_NW_ECN
 */
#define OF_ACTION_TYPE_SET_NW_ECN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_NW_ECN (0x8)
#define OF_ACTION_TYPE_SET_NW_ECN_BY_VERSION(version) (0x8)
#define OF_ACTION_TYPE_SET_NW_ECN_GENERIC 83

/*
 * Defines for OF_ACTION_TYPE_SET_NW_SRC
 * Original name OFPAT_SET_NW_SRC
 */
#define OF_ACTION_TYPE_SET_NW_SRC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_NW_SRC_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x6, 0x5, 0x0, 0x0, 0x0)
#define OF_ACTION_TYPE_SET_NW_SRC_GENERIC 84

/*
 * Defines for OF_ACTION_TYPE_SET_NW_TOS
 * Original name OFPAT_SET_NW_TOS
 */
#define OF_ACTION_TYPE_SET_NW_TOS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_NW_TOS_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x8, 0x7, 0x0, 0x0, 0x0)
#define OF_ACTION_TYPE_SET_NW_TOS_GENERIC 85

/*
 * Defines for OF_ACTION_TYPE_SET_NW_TTL
 * Original name OFPAT_SET_NW_TTL
 */
#define OF_ACTION_TYPE_SET_NW_TTL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_SET_NW_TTL (0x17)
#define OF_ACTION_TYPE_SET_NW_TTL_BY_VERSION(version) (0x17)
#define OF_ACTION_TYPE_SET_NW_TTL_GENERIC 86

/*
 * Defines for OF_ACTION_TYPE_SET_QUEUE
 * Original name OFPAT_SET_QUEUE
 */
#define OF_ACTION_TYPE_SET_QUEUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_TYPE_SET_QUEUE (0x15)
#define OF_ACTION_TYPE_SET_QUEUE_BY_VERSION(version) (0x15)
#define OF_ACTION_TYPE_SET_QUEUE_GENERIC 87

/*
 * Defines for OF_ACTION_TYPE_SET_TP_DST
 * Original name OFPAT_SET_TP_DST
 */
#define OF_ACTION_TYPE_SET_TP_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_TP_DST (0xa)
#define OF_ACTION_TYPE_SET_TP_DST_BY_VERSION(version) (0xa)
#define OF_ACTION_TYPE_SET_TP_DST_GENERIC 88

/*
 * Defines for OF_ACTION_TYPE_SET_TP_SRC
 * Original name OFPAT_SET_TP_SRC
 */
#define OF_ACTION_TYPE_SET_TP_SRC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_TP_SRC (0x9)
#define OF_ACTION_TYPE_SET_TP_SRC_BY_VERSION(version) (0x9)
#define OF_ACTION_TYPE_SET_TP_SRC_GENERIC 89

/*
 * Defines for OF_ACTION_TYPE_SET_VLAN_PCP
 * Original name OFPAT_SET_VLAN_PCP
 */
#define OF_ACTION_TYPE_SET_VLAN_PCP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_VLAN_PCP (0x2)
#define OF_ACTION_TYPE_SET_VLAN_PCP_BY_VERSION(version) (0x2)
#define OF_ACTION_TYPE_SET_VLAN_PCP_GENERIC 90

/*
 * Defines for OF_ACTION_TYPE_SET_VLAN_VID
 * Original name OFPAT_SET_VLAN_VID
 */
#define OF_ACTION_TYPE_SET_VLAN_VID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_ACTION_TYPE_SET_VLAN_VID (0x1)
#define OF_ACTION_TYPE_SET_VLAN_VID_BY_VERSION(version) (0x1)
#define OF_ACTION_TYPE_SET_VLAN_VID_GENERIC 91

/*
 * Defines for OF_ACTION_TYPE_STRIP_VLAN
 * Original name OFPAT_STRIP_VLAN
 */
#define OF_ACTION_TYPE_STRIP_VLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_ACTION_TYPE_STRIP_VLAN (0x3)
#define OF_ACTION_TYPE_STRIP_VLAN_BY_VERSION(version) (0x3)
#define OF_ACTION_TYPE_STRIP_VLAN_GENERIC 92

/****************************************************************
 * Identifiers from ofp_async_config_failed_code
 *****************************************************************/

/*
 * Defines for OFPACFC_EPERM
 * Original name OFPACFC_EPERM
 */
#define OFPACFC_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPACFC_EPERM (0x2)
#define OFPACFC_EPERM_BY_VERSION(version) (0x2)
#define OFPACFC_EPERM_GENERIC 93

/*
 * Defines for OFPACFC_INVALID
 * Original name OFPACFC_INVALID
 */
#define OFPACFC_INVALID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPACFC_INVALID (0x0)
#define OFPACFC_INVALID_BY_VERSION(version) (0x0)
#define OFPACFC_INVALID_GENERIC 94

/*
 * Defines for OFPACFC_UNSUPPORTED
 * Original name OFPACFC_UNSUPPORTED
 */
#define OFPACFC_UNSUPPORTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPACFC_UNSUPPORTED (0x1)
#define OFPACFC_UNSUPPORTED_BY_VERSION(version) (0x1)
#define OFPACFC_UNSUPPORTED_GENERIC 95

/****************************************************************
 * Identifiers from ofp_bad_action_code
 *****************************************************************/

/*
 * Defines for OF_ACTION_FAILED_BAD_ARGUMENT
 * Original name OFPBAC_BAD_ARGUMENT
 */
#define OF_ACTION_FAILED_BAD_ARGUMENT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_ARGUMENT (0x5)
#define OF_ACTION_FAILED_BAD_ARGUMENT_BY_VERSION(version) (0x5)
#define OF_ACTION_FAILED_BAD_ARGUMENT_GENERIC 96

/*
 * Defines for OF_ACTION_FAILED_BAD_EXPERIMENTER
 * Original name OFPBAC_BAD_EXPERIMENTER
 */
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_EXPERIMENTER (0x2)
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_BY_VERSION(version) (0x2)
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_GENERIC 97

/*
 * Defines for OF_ACTION_FAILED_BAD_EXPERIMENTER_TYPE
 * Original name OFPBAC_BAD_EXPERIMENTER_TYPE
 */
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_TYPE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_TYPE (0x3)
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_TYPE_BY_VERSION(version) (0x3)
#define OF_ACTION_FAILED_BAD_EXPERIMENTER_TYPE_GENERIC 98

/*
 * Defines for OF_ACTION_FAILED_BAD_LEN
 * Original name OFPBAC_BAD_LEN
 */
#define OF_ACTION_FAILED_BAD_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_LEN (0x1)
#define OF_ACTION_FAILED_BAD_LEN_BY_VERSION(version) (0x1)
#define OF_ACTION_FAILED_BAD_LEN_GENERIC 99

/*
 * Defines for OF_ACTION_FAILED_BAD_OUT_GROUP
 * Original name OFPBAC_BAD_OUT_GROUP
 */
#define OF_ACTION_FAILED_BAD_OUT_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_FAILED_BAD_OUT_GROUP (0x9)
#define OF_ACTION_FAILED_BAD_OUT_GROUP_BY_VERSION(version) (0x9)
#define OF_ACTION_FAILED_BAD_OUT_GROUP_GENERIC 100

/*
 * Defines for OF_ACTION_FAILED_BAD_OUT_PORT
 * Original name OFPBAC_BAD_OUT_PORT
 */
#define OF_ACTION_FAILED_BAD_OUT_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_OUT_PORT (0x4)
#define OF_ACTION_FAILED_BAD_OUT_PORT_BY_VERSION(version) (0x4)
#define OF_ACTION_FAILED_BAD_OUT_PORT_GENERIC 101

/*
 * Defines for OF_ACTION_FAILED_BAD_QUEUE
 * Original name OFPBAC_BAD_QUEUE
 */
#define OF_ACTION_FAILED_BAD_QUEUE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_QUEUE (0x8)
#define OF_ACTION_FAILED_BAD_QUEUE_BY_VERSION(version) (0x8)
#define OF_ACTION_FAILED_BAD_QUEUE_GENERIC 102

/*
 * Defines for OF_ACTION_FAILED_BAD_SET_ARGUMENT
 * Original name OFPBAC_BAD_SET_ARGUMENT
 */
#define OF_ACTION_FAILED_BAD_SET_ARGUMENT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_FAILED_BAD_SET_ARGUMENT (0xf)
#define OF_ACTION_FAILED_BAD_SET_ARGUMENT_BY_VERSION(version) (0xf)
#define OF_ACTION_FAILED_BAD_SET_ARGUMENT_GENERIC 103

/*
 * Defines for OF_ACTION_FAILED_BAD_SET_LEN
 * Original name OFPBAC_BAD_SET_LEN
 */
#define OF_ACTION_FAILED_BAD_SET_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_FAILED_BAD_SET_LEN (0xe)
#define OF_ACTION_FAILED_BAD_SET_LEN_BY_VERSION(version) (0xe)
#define OF_ACTION_FAILED_BAD_SET_LEN_GENERIC 104

/*
 * Defines for OF_ACTION_FAILED_BAD_SET_TYPE
 * Original name OFPBAC_BAD_SET_TYPE
 */
#define OF_ACTION_FAILED_BAD_SET_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_FAILED_BAD_SET_TYPE (0xd)
#define OF_ACTION_FAILED_BAD_SET_TYPE_BY_VERSION(version) (0xd)
#define OF_ACTION_FAILED_BAD_SET_TYPE_GENERIC 105

/*
 * Defines for OF_ACTION_FAILED_BAD_TAG
 * Original name OFPBAC_BAD_TAG
 */
#define OF_ACTION_FAILED_BAD_TAG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_FAILED_BAD_TAG (0xc)
#define OF_ACTION_FAILED_BAD_TAG_BY_VERSION(version) (0xc)
#define OF_ACTION_FAILED_BAD_TAG_GENERIC 106

/*
 * Defines for OF_ACTION_FAILED_BAD_TYPE
 * Original name OFPBAC_BAD_TYPE
 */
#define OF_ACTION_FAILED_BAD_TYPE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_BAD_TYPE (0x0)
#define OF_ACTION_FAILED_BAD_TYPE_BY_VERSION(version) (0x0)
#define OF_ACTION_FAILED_BAD_TYPE_GENERIC 107

/*
 * Defines for OF_ACTION_FAILED_EPERM
 * Original name OFPBAC_EPERM
 */
#define OF_ACTION_FAILED_EPERM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_EPERM (0x6)
#define OF_ACTION_FAILED_EPERM_BY_VERSION(version) (0x6)
#define OF_ACTION_FAILED_EPERM_GENERIC 108

/*
 * Defines for OF_ACTION_FAILED_MATCH_INCONSISTENT
 * Original name OFPBAC_MATCH_INCONSISTENT
 */
#define OF_ACTION_FAILED_MATCH_INCONSISTENT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_FAILED_MATCH_INCONSISTENT (0xa)
#define OF_ACTION_FAILED_MATCH_INCONSISTENT_BY_VERSION(version) (0xa)
#define OF_ACTION_FAILED_MATCH_INCONSISTENT_GENERIC 109

/*
 * Defines for OF_ACTION_FAILED_TOO_MANY
 * Original name OFPBAC_TOO_MANY
 */
#define OF_ACTION_FAILED_TOO_MANY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ACTION_FAILED_TOO_MANY (0x7)
#define OF_ACTION_FAILED_TOO_MANY_BY_VERSION(version) (0x7)
#define OF_ACTION_FAILED_TOO_MANY_GENERIC 110

/*
 * Defines for OF_ACTION_FAILED_UNSUPPORTED_ORDER
 * Original name OFPBAC_UNSUPPORTED_ORDER
 */
#define OF_ACTION_FAILED_UNSUPPORTED_ORDER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ACTION_FAILED_UNSUPPORTED_ORDER (0xb)
#define OF_ACTION_FAILED_UNSUPPORTED_ORDER_BY_VERSION(version) (0xb)
#define OF_ACTION_FAILED_UNSUPPORTED_ORDER_GENERIC 111

/****************************************************************
 * Identifiers from ofp_bad_instruction_code
 *****************************************************************/

/*
 * Defines for OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER
 * Original name OFPBIC_BAD_EXPERIMENTER
 */
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER (0x5)
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_BY_VERSION(version) (0x5)
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_GENERIC 112

/*
 * Defines for OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_TYPE
 * Original name OFPBIC_BAD_EXPERIMENTER_TYPE
 */
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_TYPE (0x6)
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_TYPE_BY_VERSION(version) (0x6)
#define OF_INSTRUCTION_FAILED_BAD_EXPERIMENTER_TYPE_GENERIC 113

/*
 * Defines for OF_INSTRUCTION_FAILED_BAD_LEN
 * Original name OFPBIC_BAD_LEN
 */
#define OF_INSTRUCTION_FAILED_BAD_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_FAILED_BAD_LEN (0x7)
#define OF_INSTRUCTION_FAILED_BAD_LEN_BY_VERSION(version) (0x7)
#define OF_INSTRUCTION_FAILED_BAD_LEN_GENERIC 114

/*
 * Defines for OF_INSTRUCTION_FAILED_BAD_TABLE_ID
 * Original name OFPBIC_BAD_TABLE_ID
 */
#define OF_INSTRUCTION_FAILED_BAD_TABLE_ID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_FAILED_BAD_TABLE_ID (0x2)
#define OF_INSTRUCTION_FAILED_BAD_TABLE_ID_BY_VERSION(version) (0x2)
#define OF_INSTRUCTION_FAILED_BAD_TABLE_ID_GENERIC 115

/*
 * Defines for OF_INSTRUCTION_FAILED_DUP_INST
 * Original name OFPBIC_DUP_INST
 */
#define OF_INSTRUCTION_FAILED_DUP_INST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_FAILED_DUP_INST (0x9)
#define OF_INSTRUCTION_FAILED_DUP_INST_BY_VERSION(version) (0x9)
#define OF_INSTRUCTION_FAILED_DUP_INST_GENERIC 116

/*
 * Defines for OF_INSTRUCTION_FAILED_EPERM
 * Original name OFPBIC_EPERM
 */
#define OF_INSTRUCTION_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_FAILED_EPERM (0x8)
#define OF_INSTRUCTION_FAILED_EPERM_BY_VERSION(version) (0x8)
#define OF_INSTRUCTION_FAILED_EPERM_GENERIC 117

/*
 * Defines for OF_INSTRUCTION_FAILED_UNKNOWN_INST
 * Original name OFPBIC_UNKNOWN_INST
 */
#define OF_INSTRUCTION_FAILED_UNKNOWN_INST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_FAILED_UNKNOWN_INST (0x0)
#define OF_INSTRUCTION_FAILED_UNKNOWN_INST_BY_VERSION(version) (0x0)
#define OF_INSTRUCTION_FAILED_UNKNOWN_INST_GENERIC 118

/*
 * Defines for OF_INSTRUCTION_FAILED_UNSUP_EXP_INST
 * Original name OFPBIC_UNSUP_EXP_INST
 */
#define OF_INSTRUCTION_FAILED_UNSUP_EXP_INST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_INSTRUCTION_FAILED_UNSUP_EXP_INST (0x5)
#define OF_INSTRUCTION_FAILED_UNSUP_EXP_INST_BY_VERSION(version) (0x5)
#define OF_INSTRUCTION_FAILED_UNSUP_EXP_INST_GENERIC 119

/*
 * Defines for OF_INSTRUCTION_FAILED_UNSUP_INST
 * Original name OFPBIC_UNSUP_INST
 */
#define OF_INSTRUCTION_FAILED_UNSUP_INST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_FAILED_UNSUP_INST (0x1)
#define OF_INSTRUCTION_FAILED_UNSUP_INST_BY_VERSION(version) (0x1)
#define OF_INSTRUCTION_FAILED_UNSUP_INST_GENERIC 120

/*
 * Defines for OF_INSTRUCTION_FAILED_UNSUP_METADATA
 * Original name OFPBIC_UNSUP_METADATA
 */
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA (0x3)
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_BY_VERSION(version) (0x3)
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_GENERIC 121

/*
 * Defines for OF_INSTRUCTION_FAILED_UNSUP_METADATA_MASK
 * Original name OFPBIC_UNSUP_METADATA_MASK
 */
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_MASK (0x4)
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_MASK_BY_VERSION(version) (0x4)
#define OF_INSTRUCTION_FAILED_UNSUP_METADATA_MASK_GENERIC 122

/****************************************************************
 * Identifiers from ofp_bad_match_code
 *****************************************************************/

/*
 * Defines for OF_MATCH_FAILED_BAD_DL_ADDR_MASK
 * Original name OFPBMC_BAD_DL_ADDR_MASK
 */
#define OF_MATCH_FAILED_BAD_DL_ADDR_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_BAD_DL_ADDR_MASK (0x3)
#define OF_MATCH_FAILED_BAD_DL_ADDR_MASK_BY_VERSION(version) (0x3)
#define OF_MATCH_FAILED_BAD_DL_ADDR_MASK_GENERIC 123

/*
 * Defines for OF_MATCH_FAILED_BAD_FIELD
 * Original name OFPBMC_BAD_FIELD
 */
#define OF_MATCH_FAILED_BAD_FIELD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_BAD_FIELD (0x6)
#define OF_MATCH_FAILED_BAD_FIELD_BY_VERSION(version) (0x6)
#define OF_MATCH_FAILED_BAD_FIELD_GENERIC 124

/*
 * Defines for OF_MATCH_FAILED_BAD_LEN
 * Original name OFPBMC_BAD_LEN
 */
#define OF_MATCH_FAILED_BAD_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_BAD_LEN (0x1)
#define OF_MATCH_FAILED_BAD_LEN_BY_VERSION(version) (0x1)
#define OF_MATCH_FAILED_BAD_LEN_GENERIC 125

/*
 * Defines for OF_MATCH_FAILED_BAD_MASK
 * Original name OFPBMC_BAD_MASK
 */
#define OF_MATCH_FAILED_BAD_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_BAD_MASK (0x8)
#define OF_MATCH_FAILED_BAD_MASK_BY_VERSION(version) (0x8)
#define OF_MATCH_FAILED_BAD_MASK_GENERIC 126

/*
 * Defines for OF_MATCH_FAILED_BAD_NW_ADDR_MASK
 * Original name OFPBMC_BAD_NW_ADDR_MASK
 */
#define OF_MATCH_FAILED_BAD_NW_ADDR_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_BAD_NW_ADDR_MASK (0x4)
#define OF_MATCH_FAILED_BAD_NW_ADDR_MASK_BY_VERSION(version) (0x4)
#define OF_MATCH_FAILED_BAD_NW_ADDR_MASK_GENERIC 127

/*
 * Defines for OF_MATCH_FAILED_BAD_PREREQ
 * Original name OFPBMC_BAD_PREREQ
 */
#define OF_MATCH_FAILED_BAD_PREREQ_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_BAD_PREREQ (0x9)
#define OF_MATCH_FAILED_BAD_PREREQ_BY_VERSION(version) (0x9)
#define OF_MATCH_FAILED_BAD_PREREQ_GENERIC 128

/*
 * Defines for OF_MATCH_FAILED_BAD_TAG
 * Original name OFPBMC_BAD_TAG
 */
#define OF_MATCH_FAILED_BAD_TAG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_BAD_TAG (0x2)
#define OF_MATCH_FAILED_BAD_TAG_BY_VERSION(version) (0x2)
#define OF_MATCH_FAILED_BAD_TAG_GENERIC 129

/*
 * Defines for OF_MATCH_FAILED_BAD_TYPE
 * Original name OFPBMC_BAD_TYPE
 */
#define OF_MATCH_FAILED_BAD_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_BAD_TYPE (0x0)
#define OF_MATCH_FAILED_BAD_TYPE_BY_VERSION(version) (0x0)
#define OF_MATCH_FAILED_BAD_TYPE_GENERIC 130

/*
 * Defines for OF_MATCH_FAILED_BAD_VALUE
 * Original name OFPBMC_BAD_VALUE
 */
#define OF_MATCH_FAILED_BAD_VALUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_BAD_VALUE (0x7)
#define OF_MATCH_FAILED_BAD_VALUE_BY_VERSION(version) (0x7)
#define OF_MATCH_FAILED_BAD_VALUE_GENERIC 131

/*
 * Defines for OF_MATCH_FAILED_BAD_WILDCARDS
 * Original name OFPBMC_BAD_WILDCARDS
 */
#define OF_MATCH_FAILED_BAD_WILDCARDS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_BAD_WILDCARDS (0x5)
#define OF_MATCH_FAILED_BAD_WILDCARDS_BY_VERSION(version) (0x5)
#define OF_MATCH_FAILED_BAD_WILDCARDS_GENERIC 132

/*
 * Defines for OF_MATCH_FAILED_DUP_FIELD
 * Original name OFPBMC_DUP_FIELD
 */
#define OF_MATCH_FAILED_DUP_FIELD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_DUP_FIELD (0xa)
#define OF_MATCH_FAILED_DUP_FIELD_BY_VERSION(version) (0xa)
#define OF_MATCH_FAILED_DUP_FIELD_GENERIC 133

/*
 * Defines for OF_MATCH_FAILED_EPERM
 * Original name OFPBMC_EPERM
 */
#define OF_MATCH_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_FAILED_EPERM (0xb)
#define OF_MATCH_FAILED_EPERM_BY_VERSION(version) (0xb)
#define OF_MATCH_FAILED_EPERM_GENERIC 134

/****************************************************************
 * Identifiers from ofp_bad_property_code
 *****************************************************************/

/*
 * Defines for OFPBPC_BAD_EXPERIMENTER
 * Original name OFPBPC_BAD_EXPERIMENTER
 */
#define OFPBPC_BAD_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBPC_BAD_EXPERIMENTER (0x5)
#define OFPBPC_BAD_EXPERIMENTER_BY_VERSION(version) (0x5)
#define OFPBPC_BAD_EXPERIMENTER_GENERIC 135

/*
 * Defines for OFPBPC_BAD_EXP_TYPE
 * Original name OFPBPC_BAD_EXP_TYPE
 */
#define OFPBPC_BAD_EXP_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBPC_BAD_EXP_TYPE (0x6)
#define OFPBPC_BAD_EXP_TYPE_BY_VERSION(version) (0x6)
#define OFPBPC_BAD_EXP_TYPE_GENERIC 136

/*
 * Defines for OFPBPC_BAD_EXP_VALUE
 * Original name OFPBPC_BAD_EXP_VALUE
 */
#define OFPBPC_BAD_EXP_VALUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBPC_BAD_EXP_VALUE (0x7)
#define OFPBPC_BAD_EXP_VALUE_BY_VERSION(version) (0x7)
#define OFPBPC_BAD_EXP_VALUE_GENERIC 137

/*
 * Defines for OFPBPC_BAD_LEN
 * Original name OFPBPC_BAD_LEN
 */
#define OFPBPC_BAD_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBPC_BAD_LEN (0x1)
#define OFPBPC_BAD_LEN_BY_VERSION(version) (0x1)
#define OFPBPC_BAD_LEN_GENERIC 138

/*
 * Defines for OFPBPC_BAD_TYPE
 * Original name OFPBPC_BAD_TYPE
 */
#define OFPBPC_BAD_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBPC_BAD_TYPE (0x0)
#define OFPBPC_BAD_TYPE_BY_VERSION(version) (0x0)
#define OFPBPC_BAD_TYPE_GENERIC 139

/*
 * Defines for OFPBPC_BAD_VALUE
 * Original name OFPBPC_BAD_VALUE
 */
#define OFPBPC_BAD_VALUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBPC_BAD_VALUE (0x2)
#define OFPBPC_BAD_VALUE_BY_VERSION(version) (0x2)
#define OFPBPC_BAD_VALUE_GENERIC 140

/*
 * Defines for OFPBPC_DUP_TYPE
 * Original name OFPBPC_DUP_TYPE
 */
#define OFPBPC_DUP_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBPC_DUP_TYPE (0x4)
#define OFPBPC_DUP_TYPE_BY_VERSION(version) (0x4)
#define OFPBPC_DUP_TYPE_GENERIC 141

/*
 * Defines for OFPBPC_EPERM
 * Original name OFPBPC_EPERM
 */
#define OFPBPC_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBPC_EPERM (0x8)
#define OFPBPC_EPERM_BY_VERSION(version) (0x8)
#define OFPBPC_EPERM_GENERIC 142

/*
 * Defines for OFPBPC_TOO_MANY
 * Original name OFPBPC_TOO_MANY
 */
#define OFPBPC_TOO_MANY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBPC_TOO_MANY (0x3)
#define OFPBPC_TOO_MANY_BY_VERSION(version) (0x3)
#define OFPBPC_TOO_MANY_GENERIC 143

/****************************************************************
 * Identifiers from ofp_bad_request_code
 *****************************************************************/

/*
 * Defines for OF_REQUEST_FAILED_BAD_EXPERIMENTER
 * Original name OFPBRC_BAD_EXPERIMENTER
 */
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER (0x3)
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_BY_VERSION(version) (0x3)
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_GENERIC 144

/*
 * Defines for OF_REQUEST_FAILED_BAD_EXPERIMENTER_TYPE
 * Original name OFPBRC_BAD_EXPERIMENTER_TYPE
 */
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_TYPE (0x4)
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_TYPE_BY_VERSION(version) (0x4)
#define OF_REQUEST_FAILED_BAD_EXPERIMENTER_TYPE_GENERIC 145

/*
 * Defines for OF_REQUEST_FAILED_BAD_LEN
 * Original name OFPBRC_BAD_LEN
 */
#define OF_REQUEST_FAILED_BAD_LEN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BAD_LEN (0x6)
#define OF_REQUEST_FAILED_BAD_LEN_BY_VERSION(version) (0x6)
#define OF_REQUEST_FAILED_BAD_LEN_GENERIC 146

/*
 * Defines for OF_REQUEST_FAILED_BAD_PACKET
 * Original name OFPBRC_BAD_PACKET
 */
#define OF_REQUEST_FAILED_BAD_PACKET_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_REQUEST_FAILED_BAD_PACKET (0xc)
#define OF_REQUEST_FAILED_BAD_PACKET_BY_VERSION(version) (0xc)
#define OF_REQUEST_FAILED_BAD_PACKET_GENERIC 147

/*
 * Defines for OF_REQUEST_FAILED_BAD_PORT
 * Original name OFPBRC_BAD_PORT
 */
#define OF_REQUEST_FAILED_BAD_PORT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_REQUEST_FAILED_BAD_PORT (0xb)
#define OF_REQUEST_FAILED_BAD_PORT_BY_VERSION(version) (0xb)
#define OF_REQUEST_FAILED_BAD_PORT_GENERIC 148

/*
 * Defines for OF_REQUEST_FAILED_BAD_STAT
 * Original name OFPBRC_BAD_STAT
 */
#define OF_REQUEST_FAILED_BAD_STAT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BAD_STAT (0x2)
#define OF_REQUEST_FAILED_BAD_STAT_BY_VERSION(version) (0x2)
#define OF_REQUEST_FAILED_BAD_STAT_GENERIC 149

/*
 * Defines for OF_REQUEST_FAILED_BAD_SUBTYPE
 * Original name OFPBRC_BAD_SUBTYPE
 */
#define OF_REQUEST_FAILED_BAD_SUBTYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_REQUEST_FAILED_BAD_SUBTYPE (0x4)
#define OF_REQUEST_FAILED_BAD_SUBTYPE_BY_VERSION(version) (0x4)
#define OF_REQUEST_FAILED_BAD_SUBTYPE_GENERIC 150

/*
 * Defines for OF_REQUEST_FAILED_BAD_TABLE_ID
 * Original name OFPBRC_BAD_TABLE_ID
 */
#define OF_REQUEST_FAILED_BAD_TABLE_ID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_REQUEST_FAILED_BAD_TABLE_ID (0x9)
#define OF_REQUEST_FAILED_BAD_TABLE_ID_BY_VERSION(version) (0x9)
#define OF_REQUEST_FAILED_BAD_TABLE_ID_GENERIC 151

/*
 * Defines for OF_REQUEST_FAILED_BAD_TYPE
 * Original name OFPBRC_BAD_TYPE
 */
#define OF_REQUEST_FAILED_BAD_TYPE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BAD_TYPE (0x1)
#define OF_REQUEST_FAILED_BAD_TYPE_BY_VERSION(version) (0x1)
#define OF_REQUEST_FAILED_BAD_TYPE_GENERIC 152

/*
 * Defines for OF_REQUEST_FAILED_BAD_VERSION
 * Original name OFPBRC_BAD_VERSION
 */
#define OF_REQUEST_FAILED_BAD_VERSION_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BAD_VERSION (0x0)
#define OF_REQUEST_FAILED_BAD_VERSION_BY_VERSION(version) (0x0)
#define OF_REQUEST_FAILED_BAD_VERSION_GENERIC 153

/*
 * Defines for OF_REQUEST_FAILED_BUFFER_EMPTY
 * Original name OFPBRC_BUFFER_EMPTY
 */
#define OF_REQUEST_FAILED_BUFFER_EMPTY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BUFFER_EMPTY (0x7)
#define OF_REQUEST_FAILED_BUFFER_EMPTY_BY_VERSION(version) (0x7)
#define OF_REQUEST_FAILED_BUFFER_EMPTY_GENERIC 154

/*
 * Defines for OF_REQUEST_FAILED_BUFFER_UNKNOWN
 * Original name OFPBRC_BUFFER_UNKNOWN
 */
#define OF_REQUEST_FAILED_BUFFER_UNKNOWN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_BUFFER_UNKNOWN (0x8)
#define OF_REQUEST_FAILED_BUFFER_UNKNOWN_BY_VERSION(version) (0x8)
#define OF_REQUEST_FAILED_BUFFER_UNKNOWN_GENERIC 155

/*
 * Defines for OF_REQUEST_FAILED_EPERM
 * Original name OFPBRC_EPERM
 */
#define OF_REQUEST_FAILED_EPERM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_REQUEST_FAILED_EPERM (0x5)
#define OF_REQUEST_FAILED_EPERM_BY_VERSION(version) (0x5)
#define OF_REQUEST_FAILED_EPERM_GENERIC 156

/*
 * Defines for OF_REQUEST_FAILED_IS_SLAVE
 * Original name OFPBRC_IS_SLAVE
 */
#define OF_REQUEST_FAILED_IS_SLAVE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_REQUEST_FAILED_IS_SLAVE (0xa)
#define OF_REQUEST_FAILED_IS_SLAVE_BY_VERSION(version) (0xa)
#define OF_REQUEST_FAILED_IS_SLAVE_GENERIC 157

/*
 * Defines for OF_REQUEST_FAILED_MULTIPART_BUFFER_OVERFLOW
 * Original name OFPBRC_MULTIPART_BUFFER_OVERFLOW
 */
#define OF_REQUEST_FAILED_MULTIPART_BUFFER_OVERFLOW_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_REQUEST_FAILED_MULTIPART_BUFFER_OVERFLOW (0xd)
#define OF_REQUEST_FAILED_MULTIPART_BUFFER_OVERFLOW_BY_VERSION(version) (0xd)
#define OF_REQUEST_FAILED_MULTIPART_BUFFER_OVERFLOW_GENERIC 158

/*
 * Defines for OF_REQUEST_FAILED_MULTIPART_REPLY_TIMEOUT
 * Original name OFPBRC_MULTIPART_REPLY_TIMEOUT
 */
#define OF_REQUEST_FAILED_MULTIPART_REPLY_TIMEOUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_REQUEST_FAILED_MULTIPART_REPLY_TIMEOUT (0xf)
#define OF_REQUEST_FAILED_MULTIPART_REPLY_TIMEOUT_BY_VERSION(version) (0xf)
#define OF_REQUEST_FAILED_MULTIPART_REPLY_TIMEOUT_GENERIC 159

/*
 * Defines for OF_REQUEST_FAILED_MULTIPART_REQUEST_TIMEOUT
 * Original name OFPBRC_MULTIPART_REQUEST_TIMEOUT
 */
#define OF_REQUEST_FAILED_MULTIPART_REQUEST_TIMEOUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_REQUEST_FAILED_MULTIPART_REQUEST_TIMEOUT (0xe)
#define OF_REQUEST_FAILED_MULTIPART_REQUEST_TIMEOUT_BY_VERSION(version) (0xe)
#define OF_REQUEST_FAILED_MULTIPART_REQUEST_TIMEOUT_GENERIC 160

/****************************************************************
 * Identifiers from ofp_bsn_anchor
 *****************************************************************/

/*
 * Defines for OFP_BSN_ANCHOR_L3_HEADER_START
 * Original name OFP_BSN_ANCHOR_L3_HEADER_START
 */
#define OFP_BSN_ANCHOR_L3_HEADER_START_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_ANCHOR_L3_HEADER_START (0x1)
#define OFP_BSN_ANCHOR_L3_HEADER_START_BY_VERSION(version) (0x1)
#define OFP_BSN_ANCHOR_L3_HEADER_START_GENERIC 161

/*
 * Defines for OFP_BSN_ANCHOR_L4_HEADER_START
 * Original name OFP_BSN_ANCHOR_L4_HEADER_START
 */
#define OFP_BSN_ANCHOR_L4_HEADER_START_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_ANCHOR_L4_HEADER_START (0x2)
#define OFP_BSN_ANCHOR_L4_HEADER_START_BY_VERSION(version) (0x2)
#define OFP_BSN_ANCHOR_L4_HEADER_START_GENERIC 162

/*
 * Defines for OFP_BSN_ANCHOR_L4_PAYLOAD_START
 * Original name OFP_BSN_ANCHOR_L4_PAYLOAD_START
 */
#define OFP_BSN_ANCHOR_L4_PAYLOAD_START_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_ANCHOR_L4_PAYLOAD_START (0x3)
#define OFP_BSN_ANCHOR_L4_PAYLOAD_START_BY_VERSION(version) (0x3)
#define OFP_BSN_ANCHOR_L4_PAYLOAD_START_GENERIC 163

/*
 * Defines for OFP_BSN_ANCHOR_PACKET_START
 * Original name OFP_BSN_ANCHOR_PACKET_START
 */
#define OFP_BSN_ANCHOR_PACKET_START_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_ANCHOR_PACKET_START (0x0)
#define OFP_BSN_ANCHOR_PACKET_START_BY_VERSION(version) (0x0)
#define OFP_BSN_ANCHOR_PACKET_START_GENERIC 164

/****************************************************************
 * Identifiers from ofp_bsn_controller_connection_state
 *****************************************************************/

/*
 * Defines for OFP_BSN_CONTROLLER_CONNECTION_STATE_CONNECTED
 * Original name OFP_BSN_CONTROLLER_CONNECTION_STATE_CONNECTED
 */
#define OFP_BSN_CONTROLLER_CONNECTION_STATE_CONNECTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_CONTROLLER_CONNECTION_STATE_CONNECTED (0x1)
#define OFP_BSN_CONTROLLER_CONNECTION_STATE_CONNECTED_BY_VERSION(version) (0x1)
#define OFP_BSN_CONTROLLER_CONNECTION_STATE_CONNECTED_GENERIC 165

/*
 * Defines for OFP_BSN_CONTROLLER_CONNECTION_STATE_DISCONNECTED
 * Original name OFP_BSN_CONTROLLER_CONNECTION_STATE_DISCONNECTED
 */
#define OFP_BSN_CONTROLLER_CONNECTION_STATE_DISCONNECTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_CONTROLLER_CONNECTION_STATE_DISCONNECTED (0x0)
#define OFP_BSN_CONTROLLER_CONNECTION_STATE_DISCONNECTED_BY_VERSION(version) (0x0)
#define OFP_BSN_CONTROLLER_CONNECTION_STATE_DISCONNECTED_GENERIC 166

/****************************************************************
 * Identifiers from ofp_bsn_controller_role_reason
 *****************************************************************/

/*
 * Defines for OFP_BSN_CONTROLLER_ROLE_REASON_CONFIG
 * Original name OFP_BSN_CONTROLLER_ROLE_REASON_CONFIG
 */
#define OFP_BSN_CONTROLLER_ROLE_REASON_CONFIG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OFP_BSN_CONTROLLER_ROLE_REASON_CONFIG (0x1)
#define OFP_BSN_CONTROLLER_ROLE_REASON_CONFIG_BY_VERSION(version) (0x1)
#define OFP_BSN_CONTROLLER_ROLE_REASON_CONFIG_GENERIC 167

/*
 * Defines for OFP_BSN_CONTROLLER_ROLE_REASON_EXPERIMENTER
 * Original name OFP_BSN_CONTROLLER_ROLE_REASON_EXPERIMENTER
 */
#define OFP_BSN_CONTROLLER_ROLE_REASON_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OFP_BSN_CONTROLLER_ROLE_REASON_EXPERIMENTER (0x2)
#define OFP_BSN_CONTROLLER_ROLE_REASON_EXPERIMENTER_BY_VERSION(version) (0x2)
#define OFP_BSN_CONTROLLER_ROLE_REASON_EXPERIMENTER_GENERIC 168

/*
 * Defines for OFP_BSN_CONTROLLER_ROLE_REASON_MASTER_REQUEST
 * Original name OFP_BSN_CONTROLLER_ROLE_REASON_MASTER_REQUEST
 */
#define OFP_BSN_CONTROLLER_ROLE_REASON_MASTER_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OFP_BSN_CONTROLLER_ROLE_REASON_MASTER_REQUEST (0x0)
#define OFP_BSN_CONTROLLER_ROLE_REASON_MASTER_REQUEST_BY_VERSION(version) (0x0)
#define OFP_BSN_CONTROLLER_ROLE_REASON_MASTER_REQUEST_GENERIC 169

/****************************************************************
 * Identifiers from ofp_bsn_decap
 *****************************************************************/

/*
 * Defines for OFP_BSN_DECAP_CAPWAP
 * Original name OFP_BSN_DECAP_CAPWAP
 */
#define OFP_BSN_DECAP_CAPWAP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_DECAP_CAPWAP (0x4)
#define OFP_BSN_DECAP_CAPWAP_BY_VERSION(version) (0x4)
#define OFP_BSN_DECAP_CAPWAP_GENERIC 170

/*
 * Defines for OFP_BSN_DECAP_ERSPAN
 * Original name OFP_BSN_DECAP_ERSPAN
 */
#define OFP_BSN_DECAP_ERSPAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_DECAP_ERSPAN (0x1)
#define OFP_BSN_DECAP_ERSPAN_BY_VERSION(version) (0x1)
#define OFP_BSN_DECAP_ERSPAN_GENERIC 171

/*
 * Defines for OFP_BSN_DECAP_GTP
 * Original name OFP_BSN_DECAP_GTP
 */
#define OFP_BSN_DECAP_GTP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_DECAP_GTP (0x7)
#define OFP_BSN_DECAP_GTP_BY_VERSION(version) (0x7)
#define OFP_BSN_DECAP_GTP_GENERIC 172

/*
 * Defines for OFP_BSN_DECAP_L2_GRE
 * Original name OFP_BSN_DECAP_L2_GRE
 */
#define OFP_BSN_DECAP_L2_GRE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_DECAP_L2_GRE (0x2)
#define OFP_BSN_DECAP_L2_GRE_BY_VERSION(version) (0x2)
#define OFP_BSN_DECAP_L2_GRE_GENERIC 173

/*
 * Defines for OFP_BSN_DECAP_L2_MPLS
 * Original name OFP_BSN_DECAP_L2_MPLS
 */
#define OFP_BSN_DECAP_L2_MPLS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_DECAP_L2_MPLS (0x5)
#define OFP_BSN_DECAP_L2_MPLS_BY_VERSION(version) (0x5)
#define OFP_BSN_DECAP_L2_MPLS_GENERIC 174

/*
 * Defines for OFP_BSN_DECAP_L3_GRE
 * Original name OFP_BSN_DECAP_L3_GRE
 */
#define OFP_BSN_DECAP_L3_GRE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_DECAP_L3_GRE (0x6)
#define OFP_BSN_DECAP_L3_GRE_BY_VERSION(version) (0x6)
#define OFP_BSN_DECAP_L3_GRE_GENERIC 175

/*
 * Defines for OFP_BSN_DECAP_L3_MPLS
 * Original name OFP_BSN_DECAP_L3_MPLS
 */
#define OFP_BSN_DECAP_L3_MPLS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_DECAP_L3_MPLS (0x8)
#define OFP_BSN_DECAP_L3_MPLS_BY_VERSION(version) (0x8)
#define OFP_BSN_DECAP_L3_MPLS_GENERIC 176

/*
 * Defines for OFP_BSN_DECAP_NVGRE
 * Original name OFP_BSN_DECAP_NVGRE
 */
#define OFP_BSN_DECAP_NVGRE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_DECAP_NVGRE (0x3)
#define OFP_BSN_DECAP_NVGRE_BY_VERSION(version) (0x3)
#define OFP_BSN_DECAP_NVGRE_GENERIC 177

/*
 * Defines for OFP_BSN_DECAP_VXLAN
 * Original name OFP_BSN_DECAP_VXLAN
 */
#define OFP_BSN_DECAP_VXLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_DECAP_VXLAN (0x0)
#define OFP_BSN_DECAP_VXLAN_BY_VERSION(version) (0x0)
#define OFP_BSN_DECAP_VXLAN_GENERIC 178

/****************************************************************
 * Identifiers from ofp_bsn_lacp_state
 *****************************************************************/

/*
 * Defines for OFP_BSN_LACP_STATE_ACTIVITY
 * Original name OFP_BSN_LACP_STATE_ACTIVITY
 */
#define OFP_BSN_LACP_STATE_ACTIVITY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LACP_STATE_ACTIVITY (0x1)
#define OFP_BSN_LACP_STATE_ACTIVITY_BY_VERSION(version) (0x1)
#define OFP_BSN_LACP_STATE_ACTIVITY_GENERIC 179

/*
 * Defines for OFP_BSN_LACP_STATE_AGGREGATION
 * Original name OFP_BSN_LACP_STATE_AGGREGATION
 */
#define OFP_BSN_LACP_STATE_AGGREGATION_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LACP_STATE_AGGREGATION (0x4)
#define OFP_BSN_LACP_STATE_AGGREGATION_BY_VERSION(version) (0x4)
#define OFP_BSN_LACP_STATE_AGGREGATION_GENERIC 180

/*
 * Defines for OFP_BSN_LACP_STATE_COLLECTING
 * Original name OFP_BSN_LACP_STATE_COLLECTING
 */
#define OFP_BSN_LACP_STATE_COLLECTING_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LACP_STATE_COLLECTING (0x10)
#define OFP_BSN_LACP_STATE_COLLECTING_BY_VERSION(version) (0x10)
#define OFP_BSN_LACP_STATE_COLLECTING_GENERIC 181

/*
 * Defines for OFP_BSN_LACP_STATE_DEFAULTED
 * Original name OFP_BSN_LACP_STATE_DEFAULTED
 */
#define OFP_BSN_LACP_STATE_DEFAULTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LACP_STATE_DEFAULTED (0x40)
#define OFP_BSN_LACP_STATE_DEFAULTED_BY_VERSION(version) (0x40)
#define OFP_BSN_LACP_STATE_DEFAULTED_GENERIC 182

/*
 * Defines for OFP_BSN_LACP_STATE_DISTRIBUTING
 * Original name OFP_BSN_LACP_STATE_DISTRIBUTING
 */
#define OFP_BSN_LACP_STATE_DISTRIBUTING_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LACP_STATE_DISTRIBUTING (0x20)
#define OFP_BSN_LACP_STATE_DISTRIBUTING_BY_VERSION(version) (0x20)
#define OFP_BSN_LACP_STATE_DISTRIBUTING_GENERIC 183

/*
 * Defines for OFP_BSN_LACP_STATE_EXPIRED
 * Original name OFP_BSN_LACP_STATE_EXPIRED
 */
#define OFP_BSN_LACP_STATE_EXPIRED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LACP_STATE_EXPIRED (0x80)
#define OFP_BSN_LACP_STATE_EXPIRED_BY_VERSION(version) (0x80)
#define OFP_BSN_LACP_STATE_EXPIRED_GENERIC 184

/*
 * Defines for OFP_BSN_LACP_STATE_SYNCHRONIZATION
 * Original name OFP_BSN_LACP_STATE_SYNCHRONIZATION
 */
#define OFP_BSN_LACP_STATE_SYNCHRONIZATION_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LACP_STATE_SYNCHRONIZATION (0x8)
#define OFP_BSN_LACP_STATE_SYNCHRONIZATION_BY_VERSION(version) (0x8)
#define OFP_BSN_LACP_STATE_SYNCHRONIZATION_GENERIC 185

/*
 * Defines for OFP_BSN_LACP_STATE_TIMEOUT
 * Original name OFP_BSN_LACP_STATE_TIMEOUT
 */
#define OFP_BSN_LACP_STATE_TIMEOUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LACP_STATE_TIMEOUT (0x2)
#define OFP_BSN_LACP_STATE_TIMEOUT_BY_VERSION(version) (0x2)
#define OFP_BSN_LACP_STATE_TIMEOUT_GENERIC 186

/****************************************************************
 * Identifiers from ofp_bsn_loglevel
 *****************************************************************/

/*
 * Defines for OFP_BSN_LOGLEVEL_ERROR
 * Original name OFP_BSN_LOGLEVEL_ERROR
 */
#define OFP_BSN_LOGLEVEL_ERROR_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LOGLEVEL_ERROR (0x1)
#define OFP_BSN_LOGLEVEL_ERROR_BY_VERSION(version) (0x1)
#define OFP_BSN_LOGLEVEL_ERROR_GENERIC 187

/*
 * Defines for OFP_BSN_LOGLEVEL_INFO
 * Original name OFP_BSN_LOGLEVEL_INFO
 */
#define OFP_BSN_LOGLEVEL_INFO_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LOGLEVEL_INFO (0x3)
#define OFP_BSN_LOGLEVEL_INFO_BY_VERSION(version) (0x3)
#define OFP_BSN_LOGLEVEL_INFO_GENERIC 188

/*
 * Defines for OFP_BSN_LOGLEVEL_MSG
 * Original name OFP_BSN_LOGLEVEL_MSG
 */
#define OFP_BSN_LOGLEVEL_MSG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LOGLEVEL_MSG (0x0)
#define OFP_BSN_LOGLEVEL_MSG_BY_VERSION(version) (0x0)
#define OFP_BSN_LOGLEVEL_MSG_GENERIC 189

/*
 * Defines for OFP_BSN_LOGLEVEL_TRACE
 * Original name OFP_BSN_LOGLEVEL_TRACE
 */
#define OFP_BSN_LOGLEVEL_TRACE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LOGLEVEL_TRACE (0x5)
#define OFP_BSN_LOGLEVEL_TRACE_BY_VERSION(version) (0x5)
#define OFP_BSN_LOGLEVEL_TRACE_GENERIC 190

/*
 * Defines for OFP_BSN_LOGLEVEL_VERBOSE
 * Original name OFP_BSN_LOGLEVEL_VERBOSE
 */
#define OFP_BSN_LOGLEVEL_VERBOSE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LOGLEVEL_VERBOSE (0x4)
#define OFP_BSN_LOGLEVEL_VERBOSE_BY_VERSION(version) (0x4)
#define OFP_BSN_LOGLEVEL_VERBOSE_GENERIC 191

/*
 * Defines for OFP_BSN_LOGLEVEL_WARN
 * Original name OFP_BSN_LOGLEVEL_WARN
 */
#define OFP_BSN_LOGLEVEL_WARN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LOGLEVEL_WARN (0x2)
#define OFP_BSN_LOGLEVEL_WARN_BY_VERSION(version) (0x2)
#define OFP_BSN_LOGLEVEL_WARN_GENERIC 192

/****************************************************************
 * Identifiers from ofp_bsn_lua_upload_flags
 *****************************************************************/

/*
 * Defines for OFP_BSN_LUA_UPLOAD_FORCE
 * Original name OFP_BSN_LUA_UPLOAD_FORCE
 */
#define OFP_BSN_LUA_UPLOAD_FORCE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LUA_UPLOAD_FORCE (0x2)
#define OFP_BSN_LUA_UPLOAD_FORCE_BY_VERSION(version) (0x2)
#define OFP_BSN_LUA_UPLOAD_FORCE_GENERIC 193

/*
 * Defines for OFP_BSN_LUA_UPLOAD_MORE
 * Original name OFP_BSN_LUA_UPLOAD_MORE
 */
#define OFP_BSN_LUA_UPLOAD_MORE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_LUA_UPLOAD_MORE (0x1)
#define OFP_BSN_LUA_UPLOAD_MORE_BY_VERSION(version) (0x1)
#define OFP_BSN_LUA_UPLOAD_MORE_GENERIC 194

/****************************************************************
 * Identifiers from ofp_bsn_pktin_flag
 *****************************************************************/

/*
 * Defines for OFP_BSN_PKTIN_FLAG_ANALYTICS
 * Original name OFP_BSN_PKTIN_FLAG_ANALYTICS
 */
#define OFP_BSN_PKTIN_FLAG_ANALYTICS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_ANALYTICS (0x40000)
#define OFP_BSN_PKTIN_FLAG_ANALYTICS_BY_VERSION(version) (0x40000)

#define OFP_BSN_PKTIN_FLAG_ANALYTICS_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_ANALYTICS_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ANALYTICS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_ANALYTICS_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ANALYTICS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_ANALYTICS_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ANALYTICS_GENERIC 195

/*
 * Defines for OFP_BSN_PKTIN_FLAG_ARP
 * Original name OFP_BSN_PKTIN_FLAG_ARP
 */
#define OFP_BSN_PKTIN_FLAG_ARP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_ARP (0x8)
#define OFP_BSN_PKTIN_FLAG_ARP_BY_VERSION(version) (0x8)

#define OFP_BSN_PKTIN_FLAG_ARP_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_ARP_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ARP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_ARP_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ARP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_ARP_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ARP_GENERIC 196

/*
 * Defines for OFP_BSN_PKTIN_FLAG_ARP_CACHE
 * Original name OFP_BSN_PKTIN_FLAG_ARP_CACHE
 */
#define OFP_BSN_PKTIN_FLAG_ARP_CACHE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_ARP_CACHE (0x1000)
#define OFP_BSN_PKTIN_FLAG_ARP_CACHE_BY_VERSION(version) (0x1000)

#define OFP_BSN_PKTIN_FLAG_ARP_CACHE_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_ARP_CACHE_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ARP_CACHE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_ARP_CACHE_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ARP_CACHE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_ARP_CACHE_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ARP_CACHE_GENERIC 197

/*
 * Defines for OFP_BSN_PKTIN_FLAG_ARP_TARGET
 * Original name OFP_BSN_PKTIN_FLAG_ARP_TARGET
 */
#define OFP_BSN_PKTIN_FLAG_ARP_TARGET_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_ARP_TARGET (0x2000)
#define OFP_BSN_PKTIN_FLAG_ARP_TARGET_BY_VERSION(version) (0x2000)

#define OFP_BSN_PKTIN_FLAG_ARP_TARGET_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_ARP_TARGET_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ARP_TARGET_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_ARP_TARGET_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ARP_TARGET_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_ARP_TARGET_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ARP_TARGET_GENERIC 198

/*
 * Defines for OFP_BSN_PKTIN_FLAG_DEBUG
 * Original name OFP_BSN_PKTIN_FLAG_DEBUG
 */
#define OFP_BSN_PKTIN_FLAG_DEBUG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_DEBUG (0x40)
#define OFP_BSN_PKTIN_FLAG_DEBUG_BY_VERSION(version) (0x40)

#define OFP_BSN_PKTIN_FLAG_DEBUG_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_DEBUG_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_DEBUG_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_DEBUG_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_DEBUG_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_DEBUG_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_DEBUG_GENERIC 199

/*
 * Defines for OFP_BSN_PKTIN_FLAG_DHCP
 * Original name OFP_BSN_PKTIN_FLAG_DHCP
 */
#define OFP_BSN_PKTIN_FLAG_DHCP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_DHCP (0x10)
#define OFP_BSN_PKTIN_FLAG_DHCP_BY_VERSION(version) (0x10)

#define OFP_BSN_PKTIN_FLAG_DHCP_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_DHCP_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_DHCP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_DHCP_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_DHCP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_DHCP_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_DHCP_GENERIC 200

/*
 * Defines for OFP_BSN_PKTIN_FLAG_ICMPV6
 * Original name OFP_BSN_PKTIN_FLAG_ICMPV6
 */
#define OFP_BSN_PKTIN_FLAG_ICMPV6_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_ICMPV6 (0x80000)
#define OFP_BSN_PKTIN_FLAG_ICMPV6_BY_VERSION(version) (0x80000)

#define OFP_BSN_PKTIN_FLAG_ICMPV6_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_ICMPV6_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ICMPV6_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_ICMPV6_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ICMPV6_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_ICMPV6_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_ICMPV6_GENERIC 201

/*
 * Defines for OFP_BSN_PKTIN_FLAG_IGMP
 * Original name OFP_BSN_PKTIN_FLAG_IGMP
 */
#define OFP_BSN_PKTIN_FLAG_IGMP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_IGMP (0x4000)
#define OFP_BSN_PKTIN_FLAG_IGMP_BY_VERSION(version) (0x4000)

#define OFP_BSN_PKTIN_FLAG_IGMP_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_IGMP_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_IGMP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_IGMP_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_IGMP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_IGMP_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_IGMP_GENERIC 202

/*
 * Defines for OFP_BSN_PKTIN_FLAG_INGRESS_ACL
 * Original name OFP_BSN_PKTIN_FLAG_INGRESS_ACL
 */
#define OFP_BSN_PKTIN_FLAG_INGRESS_ACL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_INGRESS_ACL (0x400)
#define OFP_BSN_PKTIN_FLAG_INGRESS_ACL_BY_VERSION(version) (0x400)

#define OFP_BSN_PKTIN_FLAG_INGRESS_ACL_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_INGRESS_ACL_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_INGRESS_ACL_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_INGRESS_ACL_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_INGRESS_ACL_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_INGRESS_ACL_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_INGRESS_ACL_GENERIC 203

/*
 * Defines for OFP_BSN_PKTIN_FLAG_L2_CPU
 * Original name OFP_BSN_PKTIN_FLAG_L2_CPU
 */
#define OFP_BSN_PKTIN_FLAG_L2_CPU_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_L2_CPU (0x20)
#define OFP_BSN_PKTIN_FLAG_L2_CPU_BY_VERSION(version) (0x20)

#define OFP_BSN_PKTIN_FLAG_L2_CPU_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_L2_CPU_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_L2_CPU_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_L2_CPU_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_L2_CPU_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_L2_CPU_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_L2_CPU_GENERIC 204

/*
 * Defines for OFP_BSN_PKTIN_FLAG_L3_CPU
 * Original name OFP_BSN_PKTIN_FLAG_L3_CPU
 */
#define OFP_BSN_PKTIN_FLAG_L3_CPU_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_L3_CPU (0x200)
#define OFP_BSN_PKTIN_FLAG_L3_CPU_BY_VERSION(version) (0x200)

#define OFP_BSN_PKTIN_FLAG_L3_CPU_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_L3_CPU_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_L3_CPU_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_L3_CPU_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_L3_CPU_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_L3_CPU_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_L3_CPU_GENERIC 205

/*
 * Defines for OFP_BSN_PKTIN_FLAG_L3_MISS
 * Original name OFP_BSN_PKTIN_FLAG_L3_MISS
 */
#define OFP_BSN_PKTIN_FLAG_L3_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_L3_MISS (0x100)
#define OFP_BSN_PKTIN_FLAG_L3_MISS_BY_VERSION(version) (0x100)

#define OFP_BSN_PKTIN_FLAG_L3_MISS_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_L3_MISS_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_L3_MISS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_L3_MISS_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_L3_MISS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_L3_MISS_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_L3_MISS_GENERIC 206

/*
 * Defines for OFP_BSN_PKTIN_FLAG_MC_RESERVED
 * Original name OFP_BSN_PKTIN_FLAG_MC_RESERVED
 */
#define OFP_BSN_PKTIN_FLAG_MC_RESERVED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_MC_RESERVED (0x20000)
#define OFP_BSN_PKTIN_FLAG_MC_RESERVED_BY_VERSION(version) (0x20000)

#define OFP_BSN_PKTIN_FLAG_MC_RESERVED_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_MC_RESERVED_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_MC_RESERVED_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_MC_RESERVED_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_MC_RESERVED_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_MC_RESERVED_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_MC_RESERVED_GENERIC 207

/*
 * Defines for OFP_BSN_PKTIN_FLAG_NEW_HOST
 * Original name OFP_BSN_PKTIN_FLAG_NEW_HOST
 */
#define OFP_BSN_PKTIN_FLAG_NEW_HOST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_NEW_HOST (0x2)
#define OFP_BSN_PKTIN_FLAG_NEW_HOST_BY_VERSION(version) (0x2)

#define OFP_BSN_PKTIN_FLAG_NEW_HOST_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_NEW_HOST_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_NEW_HOST_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_NEW_HOST_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_NEW_HOST_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_NEW_HOST_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_NEW_HOST_GENERIC 208

/*
 * Defines for OFP_BSN_PKTIN_FLAG_PDU
 * Original name OFP_BSN_PKTIN_FLAG_PDU
 */
#define OFP_BSN_PKTIN_FLAG_PDU_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_PDU (0x1)
#define OFP_BSN_PKTIN_FLAG_PDU_BY_VERSION(version) (0x1)

#define OFP_BSN_PKTIN_FLAG_PDU_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_PDU_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_PDU_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_PDU_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_PDU_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_PDU_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_PDU_GENERIC 209

/*
 * Defines for OFP_BSN_PKTIN_FLAG_PIM
 * Original name OFP_BSN_PKTIN_FLAG_PIM
 */
#define OFP_BSN_PKTIN_FLAG_PIM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_PIM (0x8000)
#define OFP_BSN_PKTIN_FLAG_PIM_BY_VERSION(version) (0x8000)

#define OFP_BSN_PKTIN_FLAG_PIM_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_PIM_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_PIM_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_PIM_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_PIM_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_PIM_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_PIM_GENERIC 210

/*
 * Defines for OFP_BSN_PKTIN_FLAG_SFLOW
 * Original name OFP_BSN_PKTIN_FLAG_SFLOW
 */
#define OFP_BSN_PKTIN_FLAG_SFLOW_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_SFLOW (0x800)
#define OFP_BSN_PKTIN_FLAG_SFLOW_BY_VERSION(version) (0x800)

#define OFP_BSN_PKTIN_FLAG_SFLOW_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_SFLOW_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_SFLOW_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_SFLOW_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_SFLOW_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_SFLOW_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_SFLOW_GENERIC 211

/*
 * Defines for OFP_BSN_PKTIN_FLAG_STATION_MOVE
 * Original name OFP_BSN_PKTIN_FLAG_STATION_MOVE
 */
#define OFP_BSN_PKTIN_FLAG_STATION_MOVE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_STATION_MOVE (0x4)
#define OFP_BSN_PKTIN_FLAG_STATION_MOVE_BY_VERSION(version) (0x4)

#define OFP_BSN_PKTIN_FLAG_STATION_MOVE_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_STATION_MOVE_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_STATION_MOVE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_STATION_MOVE_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_STATION_MOVE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_STATION_MOVE_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_STATION_MOVE_GENERIC 212

/*
 * Defines for OFP_BSN_PKTIN_FLAG_TTL_EXPIRED
 * Original name OFP_BSN_PKTIN_FLAG_TTL_EXPIRED
 */
#define OFP_BSN_PKTIN_FLAG_TTL_EXPIRED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_TTL_EXPIRED (0x80)
#define OFP_BSN_PKTIN_FLAG_TTL_EXPIRED_BY_VERSION(version) (0x80)

#define OFP_BSN_PKTIN_FLAG_TTL_EXPIRED_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_TTL_EXPIRED_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_TTL_EXPIRED_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_TTL_EXPIRED_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_TTL_EXPIRED_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_TTL_EXPIRED_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_TTL_EXPIRED_GENERIC 213

/*
 * Defines for OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS
 * Original name OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS
 */
#define OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS (0x10000)
#define OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS_BY_VERSION(version) (0x10000)

#define OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS_BY_VERSION(version))
#define OFP_BSN_PKTIN_FLAG_VXLAN_SIP_MISS_GENERIC 214

/****************************************************************
 * Identifiers from ofp_bsn_port_counter
 *****************************************************************/

/*
 * Defines for OFP_BSN_PORT_COUNTER_LINK_DOWN
 * Original name OFP_BSN_PORT_COUNTER_LINK_DOWN
 */
#define OFP_BSN_PORT_COUNTER_LINK_DOWN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_LINK_DOWN (0x1d)
#define OFP_BSN_PORT_COUNTER_LINK_DOWN_BY_VERSION(version) (0x1d)
#define OFP_BSN_PORT_COUNTER_LINK_DOWN_GENERIC 215

/*
 * Defines for OFP_BSN_PORT_COUNTER_LINK_UP
 * Original name OFP_BSN_PORT_COUNTER_LINK_UP
 */
#define OFP_BSN_PORT_COUNTER_LINK_UP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_LINK_UP (0x1c)
#define OFP_BSN_PORT_COUNTER_LINK_UP_BY_VERSION(version) (0x1c)
#define OFP_BSN_PORT_COUNTER_LINK_UP_GENERIC 216

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_ALIGNMENT_ERRORS
 * Original name OFP_BSN_PORT_COUNTER_RX_ALIGNMENT_ERRORS
 */
#define OFP_BSN_PORT_COUNTER_RX_ALIGNMENT_ERRORS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_ALIGNMENT_ERRORS (0xf)
#define OFP_BSN_PORT_COUNTER_RX_ALIGNMENT_ERRORS_BY_VERSION(version) (0xf)
#define OFP_BSN_PORT_COUNTER_RX_ALIGNMENT_ERRORS_GENERIC 217

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_BYTES
 * Original name OFP_BSN_PORT_COUNTER_RX_BYTES
 */
#define OFP_BSN_PORT_COUNTER_RX_BYTES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_BYTES (0x0)
#define OFP_BSN_PORT_COUNTER_RX_BYTES_BY_VERSION(version) (0x0)
#define OFP_BSN_PORT_COUNTER_RX_BYTES_GENERIC 218

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_CRC_ERRORS
 * Original name OFP_BSN_PORT_COUNTER_RX_CRC_ERRORS
 */
#define OFP_BSN_PORT_COUNTER_RX_CRC_ERRORS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_CRC_ERRORS (0xe)
#define OFP_BSN_PORT_COUNTER_RX_CRC_ERRORS_BY_VERSION(version) (0xe)
#define OFP_BSN_PORT_COUNTER_RX_CRC_ERRORS_GENERIC 219

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_DROPPED
 * Original name OFP_BSN_PORT_COUNTER_RX_DROPPED
 */
#define OFP_BSN_PORT_COUNTER_RX_DROPPED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_DROPPED (0x4)
#define OFP_BSN_PORT_COUNTER_RX_DROPPED_BY_VERSION(version) (0x4)
#define OFP_BSN_PORT_COUNTER_RX_DROPPED_GENERIC 220

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_ERRORS
 * Original name OFP_BSN_PORT_COUNTER_RX_ERRORS
 */
#define OFP_BSN_PORT_COUNTER_RX_ERRORS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_ERRORS (0x5)
#define OFP_BSN_PORT_COUNTER_RX_ERRORS_BY_VERSION(version) (0x5)
#define OFP_BSN_PORT_COUNTER_RX_ERRORS_GENERIC 221

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_GIANTS
 * Original name OFP_BSN_PORT_COUNTER_RX_GIANTS
 */
#define OFP_BSN_PORT_COUNTER_RX_GIANTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_GIANTS (0xd)
#define OFP_BSN_PORT_COUNTER_RX_GIANTS_BY_VERSION(version) (0xd)
#define OFP_BSN_PORT_COUNTER_RX_GIANTS_GENERIC 222

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_LENGTH_ERRORS
 * Original name OFP_BSN_PORT_COUNTER_RX_LENGTH_ERRORS
 */
#define OFP_BSN_PORT_COUNTER_RX_LENGTH_ERRORS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_LENGTH_ERRORS (0x18)
#define OFP_BSN_PORT_COUNTER_RX_LENGTH_ERRORS_BY_VERSION(version) (0x18)
#define OFP_BSN_PORT_COUNTER_RX_LENGTH_ERRORS_GENERIC 223

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_OVERFLOW_ERRORS
 * Original name OFP_BSN_PORT_COUNTER_RX_OVERFLOW_ERRORS
 */
#define OFP_BSN_PORT_COUNTER_RX_OVERFLOW_ERRORS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_OVERFLOW_ERRORS (0x19)
#define OFP_BSN_PORT_COUNTER_RX_OVERFLOW_ERRORS_BY_VERSION(version) (0x19)
#define OFP_BSN_PORT_COUNTER_RX_OVERFLOW_ERRORS_GENERIC 224

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PACKETS
 * Original name OFP_BSN_PORT_COUNTER_RX_PACKETS
 */
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PACKETS (0x16)
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_BY_VERSION(version) (0x16)
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_GENERIC 225

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PACKETS_BAD_VLAN
 * Original name OFP_BSN_PORT_COUNTER_RX_PACKETS_BAD_VLAN
 */
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_BAD_VLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_BAD_VLAN (0x1b)
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_BAD_VLAN_BY_VERSION(version) (0x1b)
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_BAD_VLAN_GENERIC 226

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PACKETS_BROADCAST
 * Original name OFP_BSN_PORT_COUNTER_RX_PACKETS_BROADCAST
 */
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_BROADCAST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_BROADCAST (0x2)
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_BROADCAST_BY_VERSION(version) (0x2)
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_BROADCAST_GENERIC 227

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PACKETS_MULTICAST
 * Original name OFP_BSN_PORT_COUNTER_RX_PACKETS_MULTICAST
 */
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_MULTICAST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_MULTICAST (0x3)
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_MULTICAST_BY_VERSION(version) (0x3)
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_MULTICAST_GENERIC 228

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PACKETS_UNICAST
 * Original name OFP_BSN_PORT_COUNTER_RX_PACKETS_UNICAST
 */
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_UNICAST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_UNICAST (0x1)
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_UNICAST_BY_VERSION(version) (0x1)
#define OFP_BSN_PORT_COUNTER_RX_PACKETS_UNICAST_GENERIC 229

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PAUSE_INPUT
 * Original name OFP_BSN_PORT_COUNTER_RX_PAUSE_INPUT
 */
#define OFP_BSN_PORT_COUNTER_RX_PAUSE_INPUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PAUSE_INPUT (0x11)
#define OFP_BSN_PORT_COUNTER_RX_PAUSE_INPUT_BY_VERSION(version) (0x11)
#define OFP_BSN_PORT_COUNTER_RX_PAUSE_INPUT_GENERIC 230

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_CONTROL_FRAME
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_CONTROL_FRAME
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_CONTROL_FRAME_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_CONTROL_FRAME (0x1e)
#define OFP_BSN_PORT_COUNTER_RX_PFC_CONTROL_FRAME_BY_VERSION(version) (0x1e)
#define OFP_BSN_PORT_COUNTER_RX_PFC_CONTROL_FRAME_GENERIC 231

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_0
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_0
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_0_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_0 (0x28)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_0_BY_VERSION(version) (0x28)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_0_GENERIC 232

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_1
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_1
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_1_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_1 (0x29)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_1_BY_VERSION(version) (0x29)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_1_GENERIC 233

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_2
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_2
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_2_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_2 (0x2a)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_2_BY_VERSION(version) (0x2a)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_2_GENERIC 234

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_3
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_3
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_3_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_3 (0x2b)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_3_BY_VERSION(version) (0x2b)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_3_GENERIC 235

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_4
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_4
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_4_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_4 (0x2c)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_4_BY_VERSION(version) (0x2c)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_4_GENERIC 236

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_5
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_5
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_5_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_5 (0x2d)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_5_BY_VERSION(version) (0x2d)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_5_GENERIC 237

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_6
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_6
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_6_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_6 (0x2e)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_6_BY_VERSION(version) (0x2e)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_6_GENERIC 238

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_7
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_7
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_7_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_7 (0x2f)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_7_BY_VERSION(version) (0x2f)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_PRIORITY_7_GENERIC 239

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_0
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_0
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_0_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_0 (0x20)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_0_BY_VERSION(version) (0x20)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_0_GENERIC 240

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_1
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_1
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_1_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_1 (0x21)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_1_BY_VERSION(version) (0x21)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_1_GENERIC 241

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_2
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_2
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_2_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_2 (0x22)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_2_BY_VERSION(version) (0x22)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_2_GENERIC 242

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_3
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_3
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_3_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_3 (0x23)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_3_BY_VERSION(version) (0x23)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_3_GENERIC 243

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_4
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_4
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_4_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_4 (0x24)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_4_BY_VERSION(version) (0x24)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_4_GENERIC 244

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_5
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_5
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_5_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_5 (0x25)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_5_BY_VERSION(version) (0x25)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_5_GENERIC 245

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_6
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_6
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_6_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_6 (0x26)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_6_BY_VERSION(version) (0x26)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_6_GENERIC 246

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_7
 * Original name OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_7
 */
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_7_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_7 (0x27)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_7_BY_VERSION(version) (0x27)
#define OFP_BSN_PORT_COUNTER_RX_PFC_FRAME_XON_PRIORITY_7_GENERIC 247

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_RUNTS
 * Original name OFP_BSN_PORT_COUNTER_RX_RUNTS
 */
#define OFP_BSN_PORT_COUNTER_RX_RUNTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_RUNTS (0xc)
#define OFP_BSN_PORT_COUNTER_RX_RUNTS_BY_VERSION(version) (0xc)
#define OFP_BSN_PORT_COUNTER_RX_RUNTS_GENERIC 248

/*
 * Defines for OFP_BSN_PORT_COUNTER_RX_SYMBOL_ERRORS
 * Original name OFP_BSN_PORT_COUNTER_RX_SYMBOL_ERRORS
 */
#define OFP_BSN_PORT_COUNTER_RX_SYMBOL_ERRORS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_RX_SYMBOL_ERRORS (0x10)
#define OFP_BSN_PORT_COUNTER_RX_SYMBOL_ERRORS_BY_VERSION(version) (0x10)
#define OFP_BSN_PORT_COUNTER_RX_SYMBOL_ERRORS_GENERIC 249

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_BYTES
 * Original name OFP_BSN_PORT_COUNTER_TX_BYTES
 */
#define OFP_BSN_PORT_COUNTER_TX_BYTES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_BYTES (0x6)
#define OFP_BSN_PORT_COUNTER_TX_BYTES_BY_VERSION(version) (0x6)
#define OFP_BSN_PORT_COUNTER_TX_BYTES_GENERIC 250

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_CARRIER_ERRORS
 * Original name OFP_BSN_PORT_COUNTER_TX_CARRIER_ERRORS
 */
#define OFP_BSN_PORT_COUNTER_TX_CARRIER_ERRORS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_CARRIER_ERRORS (0x1a)
#define OFP_BSN_PORT_COUNTER_TX_CARRIER_ERRORS_BY_VERSION(version) (0x1a)
#define OFP_BSN_PORT_COUNTER_TX_CARRIER_ERRORS_GENERIC 251

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_COLLISIONS
 * Original name OFP_BSN_PORT_COUNTER_TX_COLLISIONS
 */
#define OFP_BSN_PORT_COUNTER_TX_COLLISIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_COLLISIONS (0x12)
#define OFP_BSN_PORT_COUNTER_TX_COLLISIONS_BY_VERSION(version) (0x12)
#define OFP_BSN_PORT_COUNTER_TX_COLLISIONS_GENERIC 252

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_DEFERRED
 * Original name OFP_BSN_PORT_COUNTER_TX_DEFERRED
 */
#define OFP_BSN_PORT_COUNTER_TX_DEFERRED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_DEFERRED (0x14)
#define OFP_BSN_PORT_COUNTER_TX_DEFERRED_BY_VERSION(version) (0x14)
#define OFP_BSN_PORT_COUNTER_TX_DEFERRED_GENERIC 253

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_DROPPED
 * Original name OFP_BSN_PORT_COUNTER_TX_DROPPED
 */
#define OFP_BSN_PORT_COUNTER_TX_DROPPED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_DROPPED (0xa)
#define OFP_BSN_PORT_COUNTER_TX_DROPPED_BY_VERSION(version) (0xa)
#define OFP_BSN_PORT_COUNTER_TX_DROPPED_GENERIC 254

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_ERRORS
 * Original name OFP_BSN_PORT_COUNTER_TX_ERRORS
 */
#define OFP_BSN_PORT_COUNTER_TX_ERRORS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_ERRORS (0xb)
#define OFP_BSN_PORT_COUNTER_TX_ERRORS_BY_VERSION(version) (0xb)
#define OFP_BSN_PORT_COUNTER_TX_ERRORS_GENERIC 255

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_LATE_COLLISIONS
 * Original name OFP_BSN_PORT_COUNTER_TX_LATE_COLLISIONS
 */
#define OFP_BSN_PORT_COUNTER_TX_LATE_COLLISIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_LATE_COLLISIONS (0x13)
#define OFP_BSN_PORT_COUNTER_TX_LATE_COLLISIONS_BY_VERSION(version) (0x13)
#define OFP_BSN_PORT_COUNTER_TX_LATE_COLLISIONS_GENERIC 256

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PACKETS
 * Original name OFP_BSN_PORT_COUNTER_TX_PACKETS
 */
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PACKETS (0x17)
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_BY_VERSION(version) (0x17)
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_GENERIC 257

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PACKETS_BROADCAST
 * Original name OFP_BSN_PORT_COUNTER_TX_PACKETS_BROADCAST
 */
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_BROADCAST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_BROADCAST (0x8)
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_BROADCAST_BY_VERSION(version) (0x8)
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_BROADCAST_GENERIC 258

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PACKETS_MULTICAST
 * Original name OFP_BSN_PORT_COUNTER_TX_PACKETS_MULTICAST
 */
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_MULTICAST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_MULTICAST (0x9)
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_MULTICAST_BY_VERSION(version) (0x9)
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_MULTICAST_GENERIC 259

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PACKETS_UNICAST
 * Original name OFP_BSN_PORT_COUNTER_TX_PACKETS_UNICAST
 */
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_UNICAST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_UNICAST (0x7)
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_UNICAST_BY_VERSION(version) (0x7)
#define OFP_BSN_PORT_COUNTER_TX_PACKETS_UNICAST_GENERIC 260

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PAUSE_OUTPUT
 * Original name OFP_BSN_PORT_COUNTER_TX_PAUSE_OUTPUT
 */
#define OFP_BSN_PORT_COUNTER_TX_PAUSE_OUTPUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PAUSE_OUTPUT (0x15)
#define OFP_BSN_PORT_COUNTER_TX_PAUSE_OUTPUT_BY_VERSION(version) (0x15)
#define OFP_BSN_PORT_COUNTER_TX_PAUSE_OUTPUT_GENERIC 261

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PFC_CONTROL_FRAME
 * Original name OFP_BSN_PORT_COUNTER_TX_PFC_CONTROL_FRAME
 */
#define OFP_BSN_PORT_COUNTER_TX_PFC_CONTROL_FRAME_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PFC_CONTROL_FRAME (0x1f)
#define OFP_BSN_PORT_COUNTER_TX_PFC_CONTROL_FRAME_BY_VERSION(version) (0x1f)
#define OFP_BSN_PORT_COUNTER_TX_PFC_CONTROL_FRAME_GENERIC 262

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_0
 * Original name OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_0
 */
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_0_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_0 (0x30)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_0_BY_VERSION(version) (0x30)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_0_GENERIC 263

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_1
 * Original name OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_1
 */
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_1_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_1 (0x31)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_1_BY_VERSION(version) (0x31)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_1_GENERIC 264

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_2
 * Original name OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_2
 */
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_2_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_2 (0x32)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_2_BY_VERSION(version) (0x32)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_2_GENERIC 265

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_3
 * Original name OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_3
 */
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_3_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_3 (0x33)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_3_BY_VERSION(version) (0x33)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_3_GENERIC 266

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_4
 * Original name OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_4
 */
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_4_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_4 (0x34)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_4_BY_VERSION(version) (0x34)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_4_GENERIC 267

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_5
 * Original name OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_5
 */
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_5_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_5 (0x35)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_5_BY_VERSION(version) (0x35)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_5_GENERIC 268

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_6
 * Original name OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_6
 */
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_6_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_6 (0x36)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_6_BY_VERSION(version) (0x36)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_6_GENERIC 269

/*
 * Defines for OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_7
 * Original name OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_7
 */
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_7_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_7 (0x37)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_7_BY_VERSION(version) (0x37)
#define OFP_BSN_PORT_COUNTER_TX_PFC_FRAME_PRIORITY_7_GENERIC 270

/****************************************************************
 * Identifiers from ofp_bsn_port_vxlan_mode
 *****************************************************************/

/*
 * Defines for OFP_BSN_PORT_VXLAN_RECIRCULATION_ENABLE
 * Original name OFP_BSN_PORT_VXLAN_RECIRCULATION_ENABLE
 */
#define OFP_BSN_PORT_VXLAN_RECIRCULATION_ENABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_VXLAN_RECIRCULATION_ENABLE (0x0)
#define OFP_BSN_PORT_VXLAN_RECIRCULATION_ENABLE_BY_VERSION(version) (0x0)
#define OFP_BSN_PORT_VXLAN_RECIRCULATION_ENABLE_GENERIC 271

/*
 * Defines for OFP_BSN_PORT_VXLAN_TERMINATION_ENABLE
 * Original name OFP_BSN_PORT_VXLAN_TERMINATION_ENABLE
 */
#define OFP_BSN_PORT_VXLAN_TERMINATION_ENABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_PORT_VXLAN_TERMINATION_ENABLE (0x1)
#define OFP_BSN_PORT_VXLAN_TERMINATION_ENABLE_BY_VERSION(version) (0x1)
#define OFP_BSN_PORT_VXLAN_TERMINATION_ENABLE_GENERIC 272

/****************************************************************
 * Identifiers from ofp_bsn_rate_unit
 *****************************************************************/

/*
 * Defines for OFP_BSN_RATE_UNIT_KBITPS
 * Original name OFP_BSN_RATE_UNIT_KBITPS
 */
#define OFP_BSN_RATE_UNIT_KBITPS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_RATE_UNIT_KBITPS (0x1)
#define OFP_BSN_RATE_UNIT_KBITPS_BY_VERSION(version) (0x1)
#define OFP_BSN_RATE_UNIT_KBITPS_GENERIC 273

/*
 * Defines for OFP_BSN_RATE_UNIT_PPS
 * Original name OFP_BSN_RATE_UNIT_PPS
 */
#define OFP_BSN_RATE_UNIT_PPS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_RATE_UNIT_PPS (0x0)
#define OFP_BSN_RATE_UNIT_PPS_BY_VERSION(version) (0x0)
#define OFP_BSN_RATE_UNIT_PPS_GENERIC 274

/****************************************************************
 * Identifiers from ofp_bsn_status
 *****************************************************************/

/*
 * Defines for OFP_BSN_STATUS_DISABLE
 * Original name OFP_BSN_STATUS_DISABLE
 */
#define OFP_BSN_STATUS_DISABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_STATUS_DISABLE (0x0)
#define OFP_BSN_STATUS_DISABLE_BY_VERSION(version) (0x0)
#define OFP_BSN_STATUS_DISABLE_GENERIC 275

/*
 * Defines for OFP_BSN_STATUS_ENABLE
 * Original name OFP_BSN_STATUS_ENABLE
 */
#define OFP_BSN_STATUS_ENABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_STATUS_ENABLE (0x1)
#define OFP_BSN_STATUS_ENABLE_BY_VERSION(version) (0x1)
#define OFP_BSN_STATUS_ENABLE_GENERIC 276

/****************************************************************
 * Identifiers from ofp_bsn_tcp_flag
 *****************************************************************/

/*
 * Defines for OFP_BSN_TCP_FLAG_ACK
 * Original name OFP_BSN_TCP_FLAG_ACK
 */
#define OFP_BSN_TCP_FLAG_ACK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_TCP_FLAG_ACK (0x10)
#define OFP_BSN_TCP_FLAG_ACK_BY_VERSION(version) (0x10)

#define OFP_BSN_TCP_FLAG_ACK_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_TCP_FLAG_ACK_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_ACK_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_TCP_FLAG_ACK_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_ACK_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_TCP_FLAG_ACK_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_ACK_GENERIC 277

/*
 * Defines for OFP_BSN_TCP_FLAG_CWR
 * Original name OFP_BSN_TCP_FLAG_CWR
 */
#define OFP_BSN_TCP_FLAG_CWR_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_TCP_FLAG_CWR (0x80)
#define OFP_BSN_TCP_FLAG_CWR_BY_VERSION(version) (0x80)

#define OFP_BSN_TCP_FLAG_CWR_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_TCP_FLAG_CWR_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_CWR_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_TCP_FLAG_CWR_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_CWR_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_TCP_FLAG_CWR_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_CWR_GENERIC 278

/*
 * Defines for OFP_BSN_TCP_FLAG_ECE
 * Original name OFP_BSN_TCP_FLAG_ECE
 */
#define OFP_BSN_TCP_FLAG_ECE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_TCP_FLAG_ECE (0x40)
#define OFP_BSN_TCP_FLAG_ECE_BY_VERSION(version) (0x40)

#define OFP_BSN_TCP_FLAG_ECE_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_TCP_FLAG_ECE_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_ECE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_TCP_FLAG_ECE_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_ECE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_TCP_FLAG_ECE_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_ECE_GENERIC 279

/*
 * Defines for OFP_BSN_TCP_FLAG_FIN
 * Original name OFP_BSN_TCP_FLAG_FIN
 */
#define OFP_BSN_TCP_FLAG_FIN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_TCP_FLAG_FIN (0x1)
#define OFP_BSN_TCP_FLAG_FIN_BY_VERSION(version) (0x1)

#define OFP_BSN_TCP_FLAG_FIN_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_TCP_FLAG_FIN_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_FIN_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_TCP_FLAG_FIN_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_FIN_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_TCP_FLAG_FIN_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_FIN_GENERIC 280

/*
 * Defines for OFP_BSN_TCP_FLAG_NS
 * Original name OFP_BSN_TCP_FLAG_NS
 */
#define OFP_BSN_TCP_FLAG_NS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_TCP_FLAG_NS (0x100)
#define OFP_BSN_TCP_FLAG_NS_BY_VERSION(version) (0x100)

#define OFP_BSN_TCP_FLAG_NS_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_TCP_FLAG_NS_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_NS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_TCP_FLAG_NS_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_NS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_TCP_FLAG_NS_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_NS_GENERIC 281

/*
 * Defines for OFP_BSN_TCP_FLAG_PSH
 * Original name OFP_BSN_TCP_FLAG_PSH
 */
#define OFP_BSN_TCP_FLAG_PSH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_TCP_FLAG_PSH (0x8)
#define OFP_BSN_TCP_FLAG_PSH_BY_VERSION(version) (0x8)

#define OFP_BSN_TCP_FLAG_PSH_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_TCP_FLAG_PSH_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_PSH_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_TCP_FLAG_PSH_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_PSH_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_TCP_FLAG_PSH_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_PSH_GENERIC 282

/*
 * Defines for OFP_BSN_TCP_FLAG_RST
 * Original name OFP_BSN_TCP_FLAG_RST
 */
#define OFP_BSN_TCP_FLAG_RST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_TCP_FLAG_RST (0x4)
#define OFP_BSN_TCP_FLAG_RST_BY_VERSION(version) (0x4)

#define OFP_BSN_TCP_FLAG_RST_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_TCP_FLAG_RST_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_RST_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_TCP_FLAG_RST_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_RST_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_TCP_FLAG_RST_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_RST_GENERIC 283

/*
 * Defines for OFP_BSN_TCP_FLAG_SYN
 * Original name OFP_BSN_TCP_FLAG_SYN
 */
#define OFP_BSN_TCP_FLAG_SYN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_TCP_FLAG_SYN (0x2)
#define OFP_BSN_TCP_FLAG_SYN_BY_VERSION(version) (0x2)

#define OFP_BSN_TCP_FLAG_SYN_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_TCP_FLAG_SYN_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_SYN_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_TCP_FLAG_SYN_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_SYN_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_TCP_FLAG_SYN_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_SYN_GENERIC 284

/*
 * Defines for OFP_BSN_TCP_FLAG_URG
 * Original name OFP_BSN_TCP_FLAG_URG
 */
#define OFP_BSN_TCP_FLAG_URG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_TCP_FLAG_URG (0x20)
#define OFP_BSN_TCP_FLAG_URG_BY_VERSION(version) (0x20)

#define OFP_BSN_TCP_FLAG_URG_SET(flags, version)     \
    OF_FLAG_SET(flags, OFP_BSN_TCP_FLAG_URG_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_URG_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFP_BSN_TCP_FLAG_URG_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_URG_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFP_BSN_TCP_FLAG_URG_BY_VERSION(version))
#define OFP_BSN_TCP_FLAG_URG_GENERIC 285

/****************************************************************
 * Identifiers from ofp_bsn_udf_anchor
 *****************************************************************/

/*
 * Defines for OFP_BSN_UDF_ANCHOR_L3_HEADER_START
 * Original name OFP_BSN_UDF_ANCHOR_L3_HEADER_START
 */
#define OFP_BSN_UDF_ANCHOR_L3_HEADER_START_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_UDF_ANCHOR_L3_HEADER_START (0x1)
#define OFP_BSN_UDF_ANCHOR_L3_HEADER_START_BY_VERSION(version) (0x1)
#define OFP_BSN_UDF_ANCHOR_L3_HEADER_START_GENERIC 286

/*
 * Defines for OFP_BSN_UDF_ANCHOR_L4_HEADER_START
 * Original name OFP_BSN_UDF_ANCHOR_L4_HEADER_START
 */
#define OFP_BSN_UDF_ANCHOR_L4_HEADER_START_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_UDF_ANCHOR_L4_HEADER_START (0x2)
#define OFP_BSN_UDF_ANCHOR_L4_HEADER_START_BY_VERSION(version) (0x2)
#define OFP_BSN_UDF_ANCHOR_L4_HEADER_START_GENERIC 287

/*
 * Defines for OFP_BSN_UDF_ANCHOR_PACKET_START
 * Original name OFP_BSN_UDF_ANCHOR_PACKET_START
 */
#define OFP_BSN_UDF_ANCHOR_PACKET_START_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_UDF_ANCHOR_PACKET_START (0x0)
#define OFP_BSN_UDF_ANCHOR_PACKET_START_BY_VERSION(version) (0x0)
#define OFP_BSN_UDF_ANCHOR_PACKET_START_GENERIC 288

/****************************************************************
 * Identifiers from ofp_bsn_vlan_counter_constants
 *****************************************************************/

/*
 * Defines for OFP_BSN_VLAN_ALL
 * Original name OFP_BSN_VLAN_ALL
 */
#define OFP_BSN_VLAN_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_VLAN_ALL (0xffff)
#define OFP_BSN_VLAN_ALL_BY_VERSION(version) (0xffff)
#define OFP_BSN_VLAN_ALL_GENERIC 289

/****************************************************************
 * Identifiers from ofp_bsn_vport_l2gre_flags
 *****************************************************************/

/*
 * Defines for OF_BSN_VPORT_L2GRE_DSCP_ASSIGN
 * Original name OF_BSN_VPORT_L2GRE_DSCP_ASSIGN
 */
#define OF_BSN_VPORT_L2GRE_DSCP_ASSIGN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_BSN_VPORT_L2GRE_DSCP_ASSIGN (0x2)
#define OF_BSN_VPORT_L2GRE_DSCP_ASSIGN_BY_VERSION(version) (0x2)
#define OF_BSN_VPORT_L2GRE_DSCP_ASSIGN_GENERIC 290

/*
 * Defines for OF_BSN_VPORT_L2GRE_DSCP_COPY
 * Original name OF_BSN_VPORT_L2GRE_DSCP_COPY
 */
#define OF_BSN_VPORT_L2GRE_DSCP_COPY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_BSN_VPORT_L2GRE_DSCP_COPY (0x4)
#define OF_BSN_VPORT_L2GRE_DSCP_COPY_BY_VERSION(version) (0x4)
#define OF_BSN_VPORT_L2GRE_DSCP_COPY_GENERIC 291

/*
 * Defines for OF_BSN_VPORT_L2GRE_LOCAL_MAC_IS_VALID
 * Original name OF_BSN_VPORT_L2GRE_LOCAL_MAC_IS_VALID
 */
#define OF_BSN_VPORT_L2GRE_LOCAL_MAC_IS_VALID_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_BSN_VPORT_L2GRE_LOCAL_MAC_IS_VALID (0x1)
#define OF_BSN_VPORT_L2GRE_LOCAL_MAC_IS_VALID_BY_VERSION(version) (0x1)
#define OF_BSN_VPORT_L2GRE_LOCAL_MAC_IS_VALID_GENERIC 292

/*
 * Defines for OF_BSN_VPORT_L2GRE_LOOPBACK_IS_VALID
 * Original name OF_BSN_VPORT_L2GRE_LOOPBACK_IS_VALID
 */
#define OF_BSN_VPORT_L2GRE_LOOPBACK_IS_VALID_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_BSN_VPORT_L2GRE_LOOPBACK_IS_VALID (0x8)
#define OF_BSN_VPORT_L2GRE_LOOPBACK_IS_VALID_BY_VERSION(version) (0x8)
#define OF_BSN_VPORT_L2GRE_LOOPBACK_IS_VALID_GENERIC 293

/*
 * Defines for OF_BSN_VPORT_L2GRE_RATE_LIMIT_IS_VALID
 * Original name OF_BSN_VPORT_L2GRE_RATE_LIMIT_IS_VALID
 */
#define OF_BSN_VPORT_L2GRE_RATE_LIMIT_IS_VALID_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_BSN_VPORT_L2GRE_RATE_LIMIT_IS_VALID (0x10)
#define OF_BSN_VPORT_L2GRE_RATE_LIMIT_IS_VALID_BY_VERSION(version) (0x10)
#define OF_BSN_VPORT_L2GRE_RATE_LIMIT_IS_VALID_GENERIC 294

/****************************************************************
 * Identifiers from ofp_bsn_vport_q_in_q_untagged
 *****************************************************************/

/*
 * Defines for OF_BSN_VPORT_Q_IN_Q_UNTAGGED
 * Original name OF_BSN_VPORT_Q_IN_Q_UNTAGGED
 */
#define OF_BSN_VPORT_Q_IN_Q_UNTAGGED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_BSN_VPORT_Q_IN_Q_UNTAGGED (0xffff)
#define OF_BSN_VPORT_Q_IN_Q_UNTAGGED_BY_VERSION(version) (0xffff)
#define OF_BSN_VPORT_Q_IN_Q_UNTAGGED_GENERIC 295

/****************************************************************
 * Identifiers from ofp_bsn_vport_status
 *****************************************************************/

/*
 * Defines for OF_BSN_VPORT_STATUS_FAILED
 * Original name OF_BSN_VPORT_STATUS_FAILED
 */
#define OF_BSN_VPORT_STATUS_FAILED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_BSN_VPORT_STATUS_FAILED (0x1)
#define OF_BSN_VPORT_STATUS_FAILED_BY_VERSION(version) (0x1)
#define OF_BSN_VPORT_STATUS_FAILED_GENERIC 296

/*
 * Defines for OF_BSN_VPORT_STATUS_OK
 * Original name OF_BSN_VPORT_STATUS_OK
 */
#define OF_BSN_VPORT_STATUS_OK_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_BSN_VPORT_STATUS_OK (0x0)
#define OF_BSN_VPORT_STATUS_OK_BY_VERSION(version) (0x0)
#define OF_BSN_VPORT_STATUS_OK_GENERIC 297

/****************************************************************
 * Identifiers from ofp_bsn_vrf_counter_constants
 *****************************************************************/

/*
 * Defines for OFP_BSN_VRF_ALL
 * Original name OFP_BSN_VRF_ALL
 */
#define OFP_BSN_VRF_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OFP_BSN_VRF_ALL (0xffffffff)
#define OFP_BSN_VRF_ALL_BY_VERSION(version) (0xffffffff)
#define OFP_BSN_VRF_ALL_GENERIC 298

/****************************************************************
 * Identifiers from ofp_bundle_ctrl_type
 *****************************************************************/

/*
 * Defines for OFPBCT_CLOSE_REPLY
 * Original name OFPBCT_CLOSE_REPLY
 */
#define OFPBCT_CLOSE_REPLY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBCT_CLOSE_REPLY (0x3)
#define OFPBCT_CLOSE_REPLY_BY_VERSION(version) (0x3)
#define OFPBCT_CLOSE_REPLY_GENERIC 299

/*
 * Defines for OFPBCT_CLOSE_REQUEST
 * Original name OFPBCT_CLOSE_REQUEST
 */
#define OFPBCT_CLOSE_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBCT_CLOSE_REQUEST (0x2)
#define OFPBCT_CLOSE_REQUEST_BY_VERSION(version) (0x2)
#define OFPBCT_CLOSE_REQUEST_GENERIC 300

/*
 * Defines for OFPBCT_COMMIT_REPLY
 * Original name OFPBCT_COMMIT_REPLY
 */
#define OFPBCT_COMMIT_REPLY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBCT_COMMIT_REPLY (0x5)
#define OFPBCT_COMMIT_REPLY_BY_VERSION(version) (0x5)
#define OFPBCT_COMMIT_REPLY_GENERIC 301

/*
 * Defines for OFPBCT_COMMIT_REQUEST
 * Original name OFPBCT_COMMIT_REQUEST
 */
#define OFPBCT_COMMIT_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBCT_COMMIT_REQUEST (0x4)
#define OFPBCT_COMMIT_REQUEST_BY_VERSION(version) (0x4)
#define OFPBCT_COMMIT_REQUEST_GENERIC 302

/*
 * Defines for OFPBCT_DISCARD_REPLY
 * Original name OFPBCT_DISCARD_REPLY
 */
#define OFPBCT_DISCARD_REPLY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBCT_DISCARD_REPLY (0x7)
#define OFPBCT_DISCARD_REPLY_BY_VERSION(version) (0x7)
#define OFPBCT_DISCARD_REPLY_GENERIC 303

/*
 * Defines for OFPBCT_DISCARD_REQUEST
 * Original name OFPBCT_DISCARD_REQUEST
 */
#define OFPBCT_DISCARD_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBCT_DISCARD_REQUEST (0x6)
#define OFPBCT_DISCARD_REQUEST_BY_VERSION(version) (0x6)
#define OFPBCT_DISCARD_REQUEST_GENERIC 304

/*
 * Defines for OFPBCT_OPEN_REPLY
 * Original name OFPBCT_OPEN_REPLY
 */
#define OFPBCT_OPEN_REPLY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBCT_OPEN_REPLY (0x1)
#define OFPBCT_OPEN_REPLY_BY_VERSION(version) (0x1)
#define OFPBCT_OPEN_REPLY_GENERIC 305

/*
 * Defines for OFPBCT_OPEN_REQUEST
 * Original name OFPBCT_OPEN_REQUEST
 */
#define OFPBCT_OPEN_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBCT_OPEN_REQUEST (0x0)
#define OFPBCT_OPEN_REQUEST_BY_VERSION(version) (0x0)
#define OFPBCT_OPEN_REQUEST_GENERIC 306

/****************************************************************
 * Identifiers from ofp_bundle_failed_code
 *****************************************************************/

/*
 * Defines for OFPBFC_BAD_FLAGS
 * Original name OFPBFC_BAD_FLAGS
 */
#define OFPBFC_BAD_FLAGS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_BAD_FLAGS (0x7)
#define OFPBFC_BAD_FLAGS_BY_VERSION(version) (0x7)

#define OFPBFC_BAD_FLAGS_SET(flags, version)     \
    OF_FLAG_SET(flags, OFPBFC_BAD_FLAGS_BY_VERSION(version))
#define OFPBFC_BAD_FLAGS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFPBFC_BAD_FLAGS_BY_VERSION(version))
#define OFPBFC_BAD_FLAGS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFPBFC_BAD_FLAGS_BY_VERSION(version))
#define OFPBFC_BAD_FLAGS_GENERIC 307

/*
 * Defines for OFPBFC_BAD_ID
 * Original name OFPBFC_BAD_ID
 */
#define OFPBFC_BAD_ID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_BAD_ID (0x2)
#define OFPBFC_BAD_ID_BY_VERSION(version) (0x2)
#define OFPBFC_BAD_ID_GENERIC 308

/*
 * Defines for OFPBFC_BAD_TYPE
 * Original name OFPBFC_BAD_TYPE
 */
#define OFPBFC_BAD_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_BAD_TYPE (0x6)
#define OFPBFC_BAD_TYPE_BY_VERSION(version) (0x6)
#define OFPBFC_BAD_TYPE_GENERIC 309

/*
 * Defines for OFPBFC_BUNDLE_CLOSED
 * Original name OFPBFC_BUNDLE_CLOSED
 */
#define OFPBFC_BUNDLE_CLOSED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_BUNDLE_CLOSED (0x4)
#define OFPBFC_BUNDLE_CLOSED_BY_VERSION(version) (0x4)
#define OFPBFC_BUNDLE_CLOSED_GENERIC 310

/*
 * Defines for OFPBFC_BUNDLE_EXIST
 * Original name OFPBFC_BUNDLE_EXIST
 */
#define OFPBFC_BUNDLE_EXIST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_BUNDLE_EXIST (0x3)
#define OFPBFC_BUNDLE_EXIST_BY_VERSION(version) (0x3)
#define OFPBFC_BUNDLE_EXIST_GENERIC 311

/*
 * Defines for OFPBFC_BUNDLE_IN_PROGRESS
 * Original name OFPBFC_BUNDLE_IN_PROGRESS
 */
#define OFPBFC_BUNDLE_IN_PROGRESS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_BUNDLE_IN_PROGRESS (0xf)
#define OFPBFC_BUNDLE_IN_PROGRESS_BY_VERSION(version) (0xf)
#define OFPBFC_BUNDLE_IN_PROGRESS_GENERIC 312

/*
 * Defines for OFPBFC_EPERM
 * Original name OFPBFC_EPERM
 */
#define OFPBFC_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_EPERM (0x1)
#define OFPBFC_EPERM_BY_VERSION(version) (0x1)
#define OFPBFC_EPERM_GENERIC 313

/*
 * Defines for OFPBFC_MSG_BAD_LEN
 * Original name OFPBFC_MSG_BAD_LEN
 */
#define OFPBFC_MSG_BAD_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_MSG_BAD_LEN (0x8)
#define OFPBFC_MSG_BAD_LEN_BY_VERSION(version) (0x8)
#define OFPBFC_MSG_BAD_LEN_GENERIC 314

/*
 * Defines for OFPBFC_MSG_BAD_XID
 * Original name OFPBFC_MSG_BAD_XID
 */
#define OFPBFC_MSG_BAD_XID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_MSG_BAD_XID (0x9)
#define OFPBFC_MSG_BAD_XID_BY_VERSION(version) (0x9)
#define OFPBFC_MSG_BAD_XID_GENERIC 315

/*
 * Defines for OFPBFC_MSG_CONFLICT
 * Original name OFPBFC_MSG_CONFLICT
 */
#define OFPBFC_MSG_CONFLICT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_MSG_CONFLICT (0xb)
#define OFPBFC_MSG_CONFLICT_BY_VERSION(version) (0xb)
#define OFPBFC_MSG_CONFLICT_GENERIC 316

/*
 * Defines for OFPBFC_MSG_FAILED
 * Original name OFPBFC_MSG_FAILED
 */
#define OFPBFC_MSG_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_MSG_FAILED (0xd)
#define OFPBFC_MSG_FAILED_BY_VERSION(version) (0xd)
#define OFPBFC_MSG_FAILED_GENERIC 317

/*
 * Defines for OFPBFC_MSG_TOO_MANY
 * Original name OFPBFC_MSG_TOO_MANY
 */
#define OFPBFC_MSG_TOO_MANY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_MSG_TOO_MANY (0xc)
#define OFPBFC_MSG_TOO_MANY_BY_VERSION(version) (0xc)
#define OFPBFC_MSG_TOO_MANY_GENERIC 318

/*
 * Defines for OFPBFC_MSG_UNSUP
 * Original name OFPBFC_MSG_UNSUP
 */
#define OFPBFC_MSG_UNSUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_MSG_UNSUP (0xa)
#define OFPBFC_MSG_UNSUP_BY_VERSION(version) (0xa)
#define OFPBFC_MSG_UNSUP_GENERIC 319

/*
 * Defines for OFPBFC_OUT_OF_BUNDLES
 * Original name OFPBFC_OUT_OF_BUNDLES
 */
#define OFPBFC_OUT_OF_BUNDLES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_OUT_OF_BUNDLES (0x5)
#define OFPBFC_OUT_OF_BUNDLES_BY_VERSION(version) (0x5)
#define OFPBFC_OUT_OF_BUNDLES_GENERIC 320

/*
 * Defines for OFPBFC_TIMEOUT
 * Original name OFPBFC_TIMEOUT
 */
#define OFPBFC_TIMEOUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_TIMEOUT (0xe)
#define OFPBFC_TIMEOUT_BY_VERSION(version) (0xe)
#define OFPBFC_TIMEOUT_GENERIC 321

/*
 * Defines for OFPBFC_UNKNOWN
 * Original name OFPBFC_UNKNOWN
 */
#define OFPBFC_UNKNOWN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBFC_UNKNOWN (0x0)
#define OFPBFC_UNKNOWN_BY_VERSION(version) (0x0)
#define OFPBFC_UNKNOWN_GENERIC 322

/****************************************************************
 * Identifiers from ofp_bundle_flags
 *****************************************************************/

/*
 * Defines for OFPBF_ATOMIC
 * Original name OFPBF_ATOMIC
 */
#define OFPBF_ATOMIC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBF_ATOMIC (0x1)
#define OFPBF_ATOMIC_BY_VERSION(version) (0x1)
#define OFPBF_ATOMIC_GENERIC 323

/*
 * Defines for OFPBF_ORDERED
 * Original name OFPBF_ORDERED
 */
#define OFPBF_ORDERED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPBF_ORDERED (0x2)
#define OFPBF_ORDERED_BY_VERSION(version) (0x2)
#define OFPBF_ORDERED_GENERIC 324

/****************************************************************
 * Identifiers from ofp_capabilities
 *****************************************************************/

/*
 * Defines for OF_CAPABILITIES_FLAG_ARP_MATCH_IP
 * Original name OFPC_ARP_MATCH_IP
 */
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP (0x80)
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_BY_VERSION(version) (0x80)

#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_ARP_MATCH_IP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_ARP_MATCH_IP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_ARP_MATCH_IP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_ARP_MATCH_IP_GENERIC 325

/*
 * Defines for OF_CAPABILITIES_FLAG_FLOW_STATS
 * Original name OFPC_FLOW_STATS
 */
#define OF_CAPABILITIES_FLAG_FLOW_STATS_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CAPABILITIES_FLAG_FLOW_STATS (0x1)
#define OF_CAPABILITIES_FLAG_FLOW_STATS_BY_VERSION(version) (0x1)

#define OF_CAPABILITIES_FLAG_FLOW_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_FLOW_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_FLOW_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_FLOW_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_FLOW_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_FLOW_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_FLOW_STATS_GENERIC 326

/*
 * Defines for OF_CAPABILITIES_FLAG_GROUP_STATS
 * Original name OFPC_GROUP_STATS
 */
#define OF_CAPABILITIES_FLAG_GROUP_STATS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_CAPABILITIES_FLAG_GROUP_STATS (0x8)
#define OF_CAPABILITIES_FLAG_GROUP_STATS_BY_VERSION(version) (0x8)

#define OF_CAPABILITIES_FLAG_GROUP_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_GROUP_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_GROUP_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_GROUP_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_GROUP_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_GROUP_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_GROUP_STATS_GENERIC 327

/*
 * Defines for OF_CAPABILITIES_FLAG_IP_REASM
 * Original name OFPC_IP_REASM
 */
#define OF_CAPABILITIES_FLAG_IP_REASM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CAPABILITIES_FLAG_IP_REASM (0x20)
#define OF_CAPABILITIES_FLAG_IP_REASM_BY_VERSION(version) (0x20)

#define OF_CAPABILITIES_FLAG_IP_REASM_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_IP_REASM_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_IP_REASM_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_IP_REASM_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_IP_REASM_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_IP_REASM_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_IP_REASM_GENERIC 328

/*
 * Defines for OF_CAPABILITIES_FLAG_PORT_BLOCKED
 * Original name OFPC_PORT_BLOCKED
 */
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED (0x100)
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_BY_VERSION(version) (0x100)

#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_PORT_BLOCKED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_PORT_BLOCKED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_PORT_BLOCKED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_BLOCKED_GENERIC 329

/*
 * Defines for OF_CAPABILITIES_FLAG_PORT_STATS
 * Original name OFPC_PORT_STATS
 */
#define OF_CAPABILITIES_FLAG_PORT_STATS_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CAPABILITIES_FLAG_PORT_STATS (0x4)
#define OF_CAPABILITIES_FLAG_PORT_STATS_BY_VERSION(version) (0x4)

#define OF_CAPABILITIES_FLAG_PORT_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_PORT_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_PORT_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_PORT_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_PORT_STATS_GENERIC 330

/*
 * Defines for OF_CAPABILITIES_FLAG_QUEUE_STATS
 * Original name OFPC_QUEUE_STATS
 */
#define OF_CAPABILITIES_FLAG_QUEUE_STATS_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CAPABILITIES_FLAG_QUEUE_STATS (0x40)
#define OF_CAPABILITIES_FLAG_QUEUE_STATS_BY_VERSION(version) (0x40)

#define OF_CAPABILITIES_FLAG_QUEUE_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_QUEUE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_QUEUE_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_QUEUE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_QUEUE_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_QUEUE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_QUEUE_STATS_GENERIC 331

/*
 * Defines for OF_CAPABILITIES_FLAG_RESERVED
 * Original name OFPC_RESERVED
 */
#define OF_CAPABILITIES_FLAG_RESERVED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_CAPABILITIES_FLAG_RESERVED (0x10)
#define OF_CAPABILITIES_FLAG_RESERVED_BY_VERSION(version) (0x10)

#define OF_CAPABILITIES_FLAG_RESERVED_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_RESERVED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_RESERVED_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_RESERVED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_RESERVED_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_RESERVED_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_RESERVED_GENERIC 332

/*
 * Defines for OF_CAPABILITIES_FLAG_STP
 * Original name OFPC_STP
 */
#define OF_CAPABILITIES_FLAG_STP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_CAPABILITIES_FLAG_STP (0x8)
#define OF_CAPABILITIES_FLAG_STP_BY_VERSION(version) (0x8)

#define OF_CAPABILITIES_FLAG_STP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_STP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_STP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_STP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_STP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_STP_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_STP_GENERIC 333

/*
 * Defines for OF_CAPABILITIES_FLAG_TABLE_STATS
 * Original name OFPC_TABLE_STATS
 */
#define OF_CAPABILITIES_FLAG_TABLE_STATS_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CAPABILITIES_FLAG_TABLE_STATS (0x2)
#define OF_CAPABILITIES_FLAG_TABLE_STATS_BY_VERSION(version) (0x2)

#define OF_CAPABILITIES_FLAG_TABLE_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CAPABILITIES_FLAG_TABLE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_TABLE_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CAPABILITIES_FLAG_TABLE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_TABLE_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CAPABILITIES_FLAG_TABLE_STATS_BY_VERSION(version))
#define OF_CAPABILITIES_FLAG_TABLE_STATS_GENERIC 334

/****************************************************************
 * Identifiers from ofp_config_flags
 *****************************************************************/

/*
 * Defines for OF_CONFIG_FRAG_DROP
 * Original name OFPC_FRAG_DROP
 */
#define OF_CONFIG_FRAG_DROP_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CONFIG_FRAG_DROP (0x1)
#define OF_CONFIG_FRAG_DROP_BY_VERSION(version) (0x1)

#define OF_CONFIG_FRAG_DROP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CONFIG_FRAG_DROP_BY_VERSION(version))
#define OF_CONFIG_FRAG_DROP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CONFIG_FRAG_DROP_BY_VERSION(version))
#define OF_CONFIG_FRAG_DROP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CONFIG_FRAG_DROP_BY_VERSION(version))
#define OF_CONFIG_FRAG_DROP_GENERIC 335

/*
 * Defines for OF_CONFIG_FRAG_MASK
 * Original name OFPC_FRAG_MASK
 */
#define OF_CONFIG_FRAG_MASK_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CONFIG_FRAG_MASK (0x3)
#define OF_CONFIG_FRAG_MASK_BY_VERSION(version) (0x3)

#define OF_CONFIG_FRAG_MASK_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CONFIG_FRAG_MASK_BY_VERSION(version))
#define OF_CONFIG_FRAG_MASK_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CONFIG_FRAG_MASK_BY_VERSION(version))
#define OF_CONFIG_FRAG_MASK_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CONFIG_FRAG_MASK_BY_VERSION(version))
#define OF_CONFIG_FRAG_MASK_GENERIC 336

/*
 * Defines for OF_CONFIG_FRAG_NORMAL
 * Original name OFPC_FRAG_NORMAL
 */
#define OF_CONFIG_FRAG_NORMAL_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CONFIG_FRAG_NORMAL (0x0)
#define OF_CONFIG_FRAG_NORMAL_BY_VERSION(version) (0x0)
#define OF_CONFIG_FRAG_NORMAL_GENERIC 337

/*
 * Defines for OF_CONFIG_FRAG_REASM
 * Original name OFPC_FRAG_REASM
 */
#define OF_CONFIG_FRAG_REASM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_CONFIG_FRAG_REASM (0x2)
#define OF_CONFIG_FRAG_REASM_BY_VERSION(version) (0x2)

#define OF_CONFIG_FRAG_REASM_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CONFIG_FRAG_REASM_BY_VERSION(version))
#define OF_CONFIG_FRAG_REASM_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CONFIG_FRAG_REASM_BY_VERSION(version))
#define OF_CONFIG_FRAG_REASM_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CONFIG_FRAG_REASM_BY_VERSION(version))
#define OF_CONFIG_FRAG_REASM_GENERIC 338

/*
 * Defines for OF_CONFIG_INVALID_TTL_TO_CONTROLLER
 * Original name OFPC_INVALID_TTL_TO_CONTROLLER
 */
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2))
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER (0x4)
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_BY_VERSION(version) (0x4)

#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_CONFIG_INVALID_TTL_TO_CONTROLLER_BY_VERSION(version))
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_CONFIG_INVALID_TTL_TO_CONTROLLER_BY_VERSION(version))
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_CONFIG_INVALID_TTL_TO_CONTROLLER_BY_VERSION(version))
#define OF_CONFIG_INVALID_TTL_TO_CONTROLLER_GENERIC 339

/****************************************************************
 * Identifiers from ofp_controller_max_len
 *****************************************************************/

/*
 * Defines for OF_CONTROLLER_PKT_MAX
 * Original name OFPCML_MAX
 */
#define OF_CONTROLLER_PKT_MAX_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_CONTROLLER_PKT_MAX (0xffe5)
#define OF_CONTROLLER_PKT_MAX_BY_VERSION(version) (0xffe5)
#define OF_CONTROLLER_PKT_MAX_GENERIC 340

/*
 * Defines for OF_CONTROLLER_PKT_NO_BUFFER
 * Original name OFPCML_NO_BUFFER
 */
#define OF_CONTROLLER_PKT_NO_BUFFER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_CONTROLLER_PKT_NO_BUFFER (0xffff)
#define OF_CONTROLLER_PKT_NO_BUFFER_BY_VERSION(version) (0xffff)
#define OF_CONTROLLER_PKT_NO_BUFFER_GENERIC 341

/****************************************************************
 * Identifiers from ofp_controller_role
 *****************************************************************/

/*
 * Defines for OF_CONTROLLER_ROLE_EQUAL
 * Original name OFPCR_ROLE_EQUAL
 */
#define OF_CONTROLLER_ROLE_EQUAL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_CONTROLLER_ROLE_EQUAL (0x1)
#define OF_CONTROLLER_ROLE_EQUAL_BY_VERSION(version) (0x1)
#define OF_CONTROLLER_ROLE_EQUAL_GENERIC 342

/*
 * Defines for OF_CONTROLLER_ROLE_MASTER
 * Original name OFPCR_ROLE_MASTER
 */
#define OF_CONTROLLER_ROLE_MASTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_CONTROLLER_ROLE_MASTER (0x2)
#define OF_CONTROLLER_ROLE_MASTER_BY_VERSION(version) (0x2)
#define OF_CONTROLLER_ROLE_MASTER_GENERIC 343

/*
 * Defines for OF_CONTROLLER_ROLE_NOCHANGE
 * Original name OFPCR_ROLE_NOCHANGE
 */
#define OF_CONTROLLER_ROLE_NOCHANGE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_CONTROLLER_ROLE_NOCHANGE (0x0)
#define OF_CONTROLLER_ROLE_NOCHANGE_BY_VERSION(version) (0x0)
#define OF_CONTROLLER_ROLE_NOCHANGE_GENERIC 344

/*
 * Defines for OF_CONTROLLER_ROLE_SLAVE
 * Original name OFPCR_ROLE_SLAVE
 */
#define OF_CONTROLLER_ROLE_SLAVE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_CONTROLLER_ROLE_SLAVE (0x3)
#define OF_CONTROLLER_ROLE_SLAVE_BY_VERSION(version) (0x3)
#define OF_CONTROLLER_ROLE_SLAVE_GENERIC 345

/****************************************************************
 * Identifiers from ofp_controller_role_reason
 *****************************************************************/

/*
 * Defines for OFPCRR_CONFIG
 * Original name OFPCRR_CONFIG
 */
#define OFPCRR_CONFIG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPCRR_CONFIG (0x1)
#define OFPCRR_CONFIG_BY_VERSION(version) (0x1)
#define OFPCRR_CONFIG_GENERIC 346

/*
 * Defines for OFPCRR_EXPERIMENTER
 * Original name OFPCRR_EXPERIMENTER
 */
#define OFPCRR_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPCRR_EXPERIMENTER (0x2)
#define OFPCRR_EXPERIMENTER_BY_VERSION(version) (0x2)
#define OFPCRR_EXPERIMENTER_GENERIC 347

/*
 * Defines for OFPCRR_MASTER_REQUEST
 * Original name OFPCRR_MASTER_REQUEST
 */
#define OFPCRR_MASTER_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPCRR_MASTER_REQUEST (0x0)
#define OFPCRR_MASTER_REQUEST_BY_VERSION(version) (0x0)
#define OFPCRR_MASTER_REQUEST_GENERIC 348

/****************************************************************
 * Identifiers from ofp_error_type
 *****************************************************************/

/*
 * Defines for OF_ERROR_TYPE_ASYNC_CONFIG_FAILED
 * Original name OFPET_ASYNC_CONFIG_FAILED
 */
#define OF_ERROR_TYPE_ASYNC_CONFIG_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_ASYNC_CONFIG_FAILED (0xf)
#define OF_ERROR_TYPE_ASYNC_CONFIG_FAILED_BY_VERSION(version) (0xf)
#define OF_ERROR_TYPE_ASYNC_CONFIG_FAILED_GENERIC 349

/*
 * Defines for OF_ERROR_TYPE_BAD_ACTION
 * Original name OFPET_BAD_ACTION
 */
#define OF_ERROR_TYPE_BAD_ACTION_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_BAD_ACTION (0x2)
#define OF_ERROR_TYPE_BAD_ACTION_BY_VERSION(version) (0x2)
#define OF_ERROR_TYPE_BAD_ACTION_GENERIC 350

/*
 * Defines for OF_ERROR_TYPE_BAD_INSTRUCTION
 * Original name OFPET_BAD_INSTRUCTION
 */
#define OF_ERROR_TYPE_BAD_INSTRUCTION_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_BAD_INSTRUCTION (0x3)
#define OF_ERROR_TYPE_BAD_INSTRUCTION_BY_VERSION(version) (0x3)
#define OF_ERROR_TYPE_BAD_INSTRUCTION_GENERIC 351

/*
 * Defines for OF_ERROR_TYPE_BAD_MATCH
 * Original name OFPET_BAD_MATCH
 */
#define OF_ERROR_TYPE_BAD_MATCH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_BAD_MATCH (0x4)
#define OF_ERROR_TYPE_BAD_MATCH_BY_VERSION(version) (0x4)
#define OF_ERROR_TYPE_BAD_MATCH_GENERIC 352

/*
 * Defines for OF_ERROR_TYPE_BAD_PROPERTY
 * Original name OFPET_BAD_PROPERTY
 */
#define OF_ERROR_TYPE_BAD_PROPERTY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_BAD_PROPERTY (0xe)
#define OF_ERROR_TYPE_BAD_PROPERTY_BY_VERSION(version) (0xe)
#define OF_ERROR_TYPE_BAD_PROPERTY_GENERIC 353

/*
 * Defines for OF_ERROR_TYPE_BAD_REQUEST
 * Original name OFPET_BAD_REQUEST
 */
#define OF_ERROR_TYPE_BAD_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_BAD_REQUEST (0x1)
#define OF_ERROR_TYPE_BAD_REQUEST_BY_VERSION(version) (0x1)
#define OF_ERROR_TYPE_BAD_REQUEST_GENERIC 354

/*
 * Defines for OF_ERROR_TYPE_BUNDLE_FAILED
 * Original name OFPET_BUNDLE_FAILED
 */
#define OF_ERROR_TYPE_BUNDLE_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_BUNDLE_FAILED (0x11)
#define OF_ERROR_TYPE_BUNDLE_FAILED_BY_VERSION(version) (0x11)
#define OF_ERROR_TYPE_BUNDLE_FAILED_GENERIC 355

/*
 * Defines for OF_ERROR_TYPE_EXPERIMENTER
 * Original name OFPET_EXPERIMENTER
 */
#define OF_ERROR_TYPE_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_EXPERIMENTER (0xffff)
#define OF_ERROR_TYPE_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_ERROR_TYPE_EXPERIMENTER_GENERIC 356

/*
 * Defines for OF_ERROR_TYPE_FLOW_MOD_FAILED
 * Original name OFPET_FLOW_MOD_FAILED
 */
#define OF_ERROR_TYPE_FLOW_MOD_FAILED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_FLOW_MOD_FAILED_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x3, 0x5, 0x5, 0x5, 0x5)
#define OF_ERROR_TYPE_FLOW_MOD_FAILED_GENERIC 357

/*
 * Defines for OF_ERROR_TYPE_FLOW_MONITOR_FAILED
 * Original name OFPET_FLOW_MONITOR_FAILED
 */
#define OF_ERROR_TYPE_FLOW_MONITOR_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_FLOW_MONITOR_FAILED (0x10)
#define OF_ERROR_TYPE_FLOW_MONITOR_FAILED_BY_VERSION(version) (0x10)
#define OF_ERROR_TYPE_FLOW_MONITOR_FAILED_GENERIC 358

/*
 * Defines for OF_ERROR_TYPE_GROUP_MOD_FAILED
 * Original name OFPET_GROUP_MOD_FAILED
 */
#define OF_ERROR_TYPE_GROUP_MOD_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_GROUP_MOD_FAILED (0x6)
#define OF_ERROR_TYPE_GROUP_MOD_FAILED_BY_VERSION(version) (0x6)
#define OF_ERROR_TYPE_GROUP_MOD_FAILED_GENERIC 359

/*
 * Defines for OF_ERROR_TYPE_HELLO_FAILED
 * Original name OFPET_HELLO_FAILED
 */
#define OF_ERROR_TYPE_HELLO_FAILED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_HELLO_FAILED (0x0)
#define OF_ERROR_TYPE_HELLO_FAILED_BY_VERSION(version) (0x0)
#define OF_ERROR_TYPE_HELLO_FAILED_GENERIC 360

/*
 * Defines for OF_ERROR_TYPE_METER_MOD_FAILED
 * Original name OFPET_METER_MOD_FAILED
 */
#define OF_ERROR_TYPE_METER_MOD_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_METER_MOD_FAILED (0xc)
#define OF_ERROR_TYPE_METER_MOD_FAILED_BY_VERSION(version) (0xc)
#define OF_ERROR_TYPE_METER_MOD_FAILED_GENERIC 361

/*
 * Defines for OF_ERROR_TYPE_PORT_MOD_FAILED
 * Original name OFPET_PORT_MOD_FAILED
 */
#define OF_ERROR_TYPE_PORT_MOD_FAILED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_PORT_MOD_FAILED_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x4, 0x7, 0x7, 0x7, 0x7)
#define OF_ERROR_TYPE_PORT_MOD_FAILED_GENERIC 362

/*
 * Defines for OF_ERROR_TYPE_QUEUE_OP_FAILED
 * Original name OFPET_QUEUE_OP_FAILED
 */
#define OF_ERROR_TYPE_QUEUE_OP_FAILED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_ERROR_TYPE_QUEUE_OP_FAILED_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x5, 0x9, 0x9, 0x9, 0x9)
#define OF_ERROR_TYPE_QUEUE_OP_FAILED_GENERIC 363

/*
 * Defines for OF_ERROR_TYPE_ROLE_REQUEST_FAILED
 * Original name OFPET_ROLE_REQUEST_FAILED
 */
#define OF_ERROR_TYPE_ROLE_REQUEST_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_ROLE_REQUEST_FAILED (0xb)
#define OF_ERROR_TYPE_ROLE_REQUEST_FAILED_BY_VERSION(version) (0xb)
#define OF_ERROR_TYPE_ROLE_REQUEST_FAILED_GENERIC 364

/*
 * Defines for OF_ERROR_TYPE_SWITCH_CONFIG_FAILED
 * Original name OFPET_SWITCH_CONFIG_FAILED
 */
#define OF_ERROR_TYPE_SWITCH_CONFIG_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_SWITCH_CONFIG_FAILED (0xa)
#define OF_ERROR_TYPE_SWITCH_CONFIG_FAILED_BY_VERSION(version) (0xa)
#define OF_ERROR_TYPE_SWITCH_CONFIG_FAILED_GENERIC 365

/*
 * Defines for OF_ERROR_TYPE_TABLE_FEATURES_FAILED
 * Original name OFPET_TABLE_FEATURES_FAILED
 */
#define OF_ERROR_TYPE_TABLE_FEATURES_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_TABLE_FEATURES_FAILED (0xd)
#define OF_ERROR_TYPE_TABLE_FEATURES_FAILED_BY_VERSION(version) (0xd)
#define OF_ERROR_TYPE_TABLE_FEATURES_FAILED_GENERIC 366

/*
 * Defines for OF_ERROR_TYPE_TABLE_MOD_FAILED
 * Original name OFPET_TABLE_MOD_FAILED
 */
#define OF_ERROR_TYPE_TABLE_MOD_FAILED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ERROR_TYPE_TABLE_MOD_FAILED (0x8)
#define OF_ERROR_TYPE_TABLE_MOD_FAILED_BY_VERSION(version) (0x8)
#define OF_ERROR_TYPE_TABLE_MOD_FAILED_GENERIC 367

/****************************************************************
 * Identifiers from ofp_flow_mod_command
 *****************************************************************/

/*
 * Defines for OF_FLOW_MOD_COMMAND_ADD
 * Original name OFPFC_ADD
 */
#define OF_FLOW_MOD_COMMAND_ADD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_COMMAND_ADD (0x0)
#define OF_FLOW_MOD_COMMAND_ADD_BY_VERSION(version) (0x0)
#define OF_FLOW_MOD_COMMAND_ADD_GENERIC 368

/*
 * Defines for OF_FLOW_MOD_COMMAND_DELETE
 * Original name OFPFC_DELETE
 */
#define OF_FLOW_MOD_COMMAND_DELETE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_COMMAND_DELETE (0x3)
#define OF_FLOW_MOD_COMMAND_DELETE_BY_VERSION(version) (0x3)
#define OF_FLOW_MOD_COMMAND_DELETE_GENERIC 369

/*
 * Defines for OF_FLOW_MOD_COMMAND_DELETE_STRICT
 * Original name OFPFC_DELETE_STRICT
 */
#define OF_FLOW_MOD_COMMAND_DELETE_STRICT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_COMMAND_DELETE_STRICT (0x4)
#define OF_FLOW_MOD_COMMAND_DELETE_STRICT_BY_VERSION(version) (0x4)
#define OF_FLOW_MOD_COMMAND_DELETE_STRICT_GENERIC 370

/*
 * Defines for OF_FLOW_MOD_COMMAND_MODIFY
 * Original name OFPFC_MODIFY
 */
#define OF_FLOW_MOD_COMMAND_MODIFY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_COMMAND_MODIFY (0x1)
#define OF_FLOW_MOD_COMMAND_MODIFY_BY_VERSION(version) (0x1)
#define OF_FLOW_MOD_COMMAND_MODIFY_GENERIC 371

/*
 * Defines for OF_FLOW_MOD_COMMAND_MODIFY_STRICT
 * Original name OFPFC_MODIFY_STRICT
 */
#define OF_FLOW_MOD_COMMAND_MODIFY_STRICT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_COMMAND_MODIFY_STRICT (0x2)
#define OF_FLOW_MOD_COMMAND_MODIFY_STRICT_BY_VERSION(version) (0x2)
#define OF_FLOW_MOD_COMMAND_MODIFY_STRICT_GENERIC 372

/****************************************************************
 * Identifiers from ofp_flow_mod_failed_code
 *****************************************************************/

/*
 * Defines for OF_FLOW_MOD_FAILED_ALL_TABLES_FULL
 * Original name OFPFMFC_ALL_TABLES_FULL
 */
#define OF_FLOW_MOD_FAILED_ALL_TABLES_FULL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_MOD_FAILED_ALL_TABLES_FULL (0x0)
#define OF_FLOW_MOD_FAILED_ALL_TABLES_FULL_BY_VERSION(version) (0x0)
#define OF_FLOW_MOD_FAILED_ALL_TABLES_FULL_GENERIC 373

/*
 * Defines for OF_FLOW_MOD_FAILED_BAD_COMMAND
 * Original name OFPFMFC_BAD_COMMAND
 */
#define OF_FLOW_MOD_FAILED_BAD_COMMAND_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_FAILED_BAD_COMMAND_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x4, 0x6, 0x6, 0x6, 0x6)
#define OF_FLOW_MOD_FAILED_BAD_COMMAND_GENERIC 374

/*
 * Defines for OF_FLOW_MOD_FAILED_BAD_EMERG_TIMEOUT
 * Original name OFPFMFC_BAD_EMERG_TIMEOUT
 */
#define OF_FLOW_MOD_FAILED_BAD_EMERG_TIMEOUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_MOD_FAILED_BAD_EMERG_TIMEOUT (0x3)
#define OF_FLOW_MOD_FAILED_BAD_EMERG_TIMEOUT_BY_VERSION(version) (0x3)
#define OF_FLOW_MOD_FAILED_BAD_EMERG_TIMEOUT_GENERIC 375

/*
 * Defines for OF_FLOW_MOD_FAILED_BAD_FLAGS
 * Original name OFPFMFC_BAD_FLAGS
 */
#define OF_FLOW_MOD_FAILED_BAD_FLAGS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_FLOW_MOD_FAILED_BAD_FLAGS (0x7)
#define OF_FLOW_MOD_FAILED_BAD_FLAGS_BY_VERSION(version) (0x7)
#define OF_FLOW_MOD_FAILED_BAD_FLAGS_GENERIC 376

/*
 * Defines for OF_FLOW_MOD_FAILED_BAD_PRIORITY
 * Original name OFPFMFC_BAD_PRIORITY
 */
#define OF_FLOW_MOD_FAILED_BAD_PRIORITY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_FLOW_MOD_FAILED_BAD_PRIORITY (0x9)
#define OF_FLOW_MOD_FAILED_BAD_PRIORITY_BY_VERSION(version) (0x9)
#define OF_FLOW_MOD_FAILED_BAD_PRIORITY_GENERIC 377

/*
 * Defines for OF_FLOW_MOD_FAILED_BAD_TABLE_ID
 * Original name OFPFMFC_BAD_TABLE_ID
 */
#define OF_FLOW_MOD_FAILED_BAD_TABLE_ID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_FLOW_MOD_FAILED_BAD_TABLE_ID (0x2)
#define OF_FLOW_MOD_FAILED_BAD_TABLE_ID_BY_VERSION(version) (0x2)
#define OF_FLOW_MOD_FAILED_BAD_TABLE_ID_GENERIC 378

/*
 * Defines for OF_FLOW_MOD_FAILED_BAD_TIMEOUT
 * Original name OFPFMFC_BAD_TIMEOUT
 */
#define OF_FLOW_MOD_FAILED_BAD_TIMEOUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_FLOW_MOD_FAILED_BAD_TIMEOUT (0x5)
#define OF_FLOW_MOD_FAILED_BAD_TIMEOUT_BY_VERSION(version) (0x5)
#define OF_FLOW_MOD_FAILED_BAD_TIMEOUT_GENERIC 379

/*
 * Defines for OF_FLOW_MOD_FAILED_CANT_SYNC
 * Original name OFPFMFC_CANT_SYNC
 */
#define OF_FLOW_MOD_FAILED_CANT_SYNC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_FLOW_MOD_FAILED_CANT_SYNC (0x8)
#define OF_FLOW_MOD_FAILED_CANT_SYNC_BY_VERSION(version) (0x8)
#define OF_FLOW_MOD_FAILED_CANT_SYNC_GENERIC 380

/*
 * Defines for OF_FLOW_MOD_FAILED_EPERM
 * Original name OFPFMFC_EPERM
 */
#define OF_FLOW_MOD_FAILED_EPERM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_FAILED_EPERM_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x2, 0x4, 0x4, 0x4, 0x4)
#define OF_FLOW_MOD_FAILED_EPERM_GENERIC 381

/*
 * Defines for OF_FLOW_MOD_FAILED_OVERLAP
 * Original name OFPFMFC_OVERLAP
 */
#define OF_FLOW_MOD_FAILED_OVERLAP_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_FAILED_OVERLAP_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x1, 0x3, 0x3, 0x3, 0x3)
#define OF_FLOW_MOD_FAILED_OVERLAP_GENERIC 382

/*
 * Defines for OF_FLOW_MOD_FAILED_TABLE_FULL
 * Original name OFPFMFC_TABLE_FULL
 */
#define OF_FLOW_MOD_FAILED_TABLE_FULL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_FLOW_MOD_FAILED_TABLE_FULL (0x1)
#define OF_FLOW_MOD_FAILED_TABLE_FULL_BY_VERSION(version) (0x1)
#define OF_FLOW_MOD_FAILED_TABLE_FULL_GENERIC 383

/*
 * Defines for OF_FLOW_MOD_FAILED_UNKNOWN
 * Original name OFPFMFC_UNKNOWN
 */
#define OF_FLOW_MOD_FAILED_UNKNOWN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_FLOW_MOD_FAILED_UNKNOWN (0x0)
#define OF_FLOW_MOD_FAILED_UNKNOWN_BY_VERSION(version) (0x0)
#define OF_FLOW_MOD_FAILED_UNKNOWN_GENERIC 384

/*
 * Defines for OF_FLOW_MOD_FAILED_UNSUPPORTED
 * Original name OFPFMFC_UNSUPPORTED
 */
#define OF_FLOW_MOD_FAILED_UNSUPPORTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_MOD_FAILED_UNSUPPORTED (0x5)
#define OF_FLOW_MOD_FAILED_UNSUPPORTED_BY_VERSION(version) (0x5)
#define OF_FLOW_MOD_FAILED_UNSUPPORTED_GENERIC 385

/****************************************************************
 * Identifiers from ofp_flow_mod_flags
 *****************************************************************/

/*
 * Defines for OF_FLOW_MOD_FLAG_BSN_SEND_IDLE
 * Original name OFPFF_BSN_SEND_IDLE
 */
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE (0x80)
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_BY_VERSION(version) (0x80)

#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_BSN_SEND_IDLE_GENERIC 386

/*
 * Defines for OF_FLOW_MOD_FLAG_CHECK_OVERLAP
 * Original name OFPFF_CHECK_OVERLAP
 */
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP (0x2)
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_BY_VERSION(version) (0x2)

#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_CHECK_OVERLAP_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_CHECK_OVERLAP_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_CHECK_OVERLAP_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_CHECK_OVERLAP_GENERIC 387

/*
 * Defines for OF_FLOW_MOD_FLAG_EMERG
 * Original name OFPFF_EMERG
 */
#define OF_FLOW_MOD_FLAG_EMERG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_MOD_FLAG_EMERG (0x4)
#define OF_FLOW_MOD_FLAG_EMERG_BY_VERSION(version) (0x4)

#define OF_FLOW_MOD_FLAG_EMERG_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_EMERG_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_EMERG_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_EMERG_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_EMERG_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_EMERG_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_EMERG_GENERIC 388

/*
 * Defines for OF_FLOW_MOD_FLAG_NO_BYT_COUNTS
 * Original name OFPFF_NO_BYT_COUNTS
 */
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS (0x10)
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_BY_VERSION(version) (0x10)

#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_BYT_COUNTS_GENERIC 389

/*
 * Defines for OF_FLOW_MOD_FLAG_NO_PKT_COUNTS
 * Original name OFPFF_NO_PKT_COUNTS
 */
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS (0x8)
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_BY_VERSION(version) (0x8)

#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_NO_PKT_COUNTS_GENERIC 390

/*
 * Defines for OF_FLOW_MOD_FLAG_RESET_COUNTS
 * Original name OFPFF_RESET_COUNTS
 */
#define OF_FLOW_MOD_FLAG_RESET_COUNTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_FLOW_MOD_FLAG_RESET_COUNTS (0x4)
#define OF_FLOW_MOD_FLAG_RESET_COUNTS_BY_VERSION(version) (0x4)

#define OF_FLOW_MOD_FLAG_RESET_COUNTS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_RESET_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_RESET_COUNTS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_RESET_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_RESET_COUNTS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_RESET_COUNTS_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_RESET_COUNTS_GENERIC 391

/*
 * Defines for OF_FLOW_MOD_FLAG_SEND_FLOW_REM
 * Original name OFPFF_SEND_FLOW_REM
 */
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM (0x1)
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_BY_VERSION(version) (0x1)

#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_FLOW_MOD_FLAG_SEND_FLOW_REM_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_FLOW_MOD_FLAG_SEND_FLOW_REM_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_FLOW_MOD_FLAG_SEND_FLOW_REM_BY_VERSION(version))
#define OF_FLOW_MOD_FLAG_SEND_FLOW_REM_GENERIC 392

/****************************************************************
 * Identifiers from ofp_flow_monitor_failed_code
 *****************************************************************/

/*
 * Defines for OFPMOFC_BAD_COMMAND
 * Original name OFPMOFC_BAD_COMMAND
 */
#define OFPMOFC_BAD_COMMAND_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPMOFC_BAD_COMMAND (0x4)
#define OFPMOFC_BAD_COMMAND_BY_VERSION(version) (0x4)
#define OFPMOFC_BAD_COMMAND_GENERIC 393

/*
 * Defines for OFPMOFC_BAD_FLAGS
 * Original name OFPMOFC_BAD_FLAGS
 */
#define OFPMOFC_BAD_FLAGS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPMOFC_BAD_FLAGS (0x5)
#define OFPMOFC_BAD_FLAGS_BY_VERSION(version) (0x5)

#define OFPMOFC_BAD_FLAGS_SET(flags, version)     \
    OF_FLAG_SET(flags, OFPMOFC_BAD_FLAGS_BY_VERSION(version))
#define OFPMOFC_BAD_FLAGS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OFPMOFC_BAD_FLAGS_BY_VERSION(version))
#define OFPMOFC_BAD_FLAGS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OFPMOFC_BAD_FLAGS_BY_VERSION(version))
#define OFPMOFC_BAD_FLAGS_GENERIC 394

/*
 * Defines for OFPMOFC_BAD_OUT
 * Original name OFPMOFC_BAD_OUT
 */
#define OFPMOFC_BAD_OUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPMOFC_BAD_OUT (0x7)
#define OFPMOFC_BAD_OUT_BY_VERSION(version) (0x7)
#define OFPMOFC_BAD_OUT_GENERIC 395

/*
 * Defines for OFPMOFC_BAD_TABLE_ID
 * Original name OFPMOFC_BAD_TABLE_ID
 */
#define OFPMOFC_BAD_TABLE_ID_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPMOFC_BAD_TABLE_ID (0x6)
#define OFPMOFC_BAD_TABLE_ID_BY_VERSION(version) (0x6)
#define OFPMOFC_BAD_TABLE_ID_GENERIC 396

/*
 * Defines for OFPMOFC_INVALID_MONITOR
 * Original name OFPMOFC_INVALID_MONITOR
 */
#define OFPMOFC_INVALID_MONITOR_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPMOFC_INVALID_MONITOR (0x2)
#define OFPMOFC_INVALID_MONITOR_BY_VERSION(version) (0x2)
#define OFPMOFC_INVALID_MONITOR_GENERIC 397

/*
 * Defines for OFPMOFC_MONITOR_EXISTS
 * Original name OFPMOFC_MONITOR_EXISTS
 */
#define OFPMOFC_MONITOR_EXISTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPMOFC_MONITOR_EXISTS (0x1)
#define OFPMOFC_MONITOR_EXISTS_BY_VERSION(version) (0x1)
#define OFPMOFC_MONITOR_EXISTS_GENERIC 398

/*
 * Defines for OFPMOFC_UNKNOWN
 * Original name OFPMOFC_UNKNOWN
 */
#define OFPMOFC_UNKNOWN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPMOFC_UNKNOWN (0x0)
#define OFPMOFC_UNKNOWN_BY_VERSION(version) (0x0)
#define OFPMOFC_UNKNOWN_GENERIC 399

/*
 * Defines for OFPMOFC_UNKNOWN_MONITOR
 * Original name OFPMOFC_UNKNOWN_MONITOR
 */
#define OFPMOFC_UNKNOWN_MONITOR_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPMOFC_UNKNOWN_MONITOR (0x3)
#define OFPMOFC_UNKNOWN_MONITOR_BY_VERSION(version) (0x3)
#define OFPMOFC_UNKNOWN_MONITOR_GENERIC 400

/****************************************************************
 * Identifiers from ofp_flow_removed_reason
 *****************************************************************/

/*
 * Defines for OF_FLOW_REMOVED_REASON_DELETE
 * Original name OFPRR_DELETE
 */
#define OF_FLOW_REMOVED_REASON_DELETE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_REMOVED_REASON_DELETE (0x2)
#define OF_FLOW_REMOVED_REASON_DELETE_BY_VERSION(version) (0x2)
#define OF_FLOW_REMOVED_REASON_DELETE_GENERIC 401

/*
 * Defines for OF_FLOW_REMOVED_REASON_EVICTION
 * Original name OFPRR_EVICTION
 */
#define OF_FLOW_REMOVED_REASON_EVICTION_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_FLOW_REMOVED_REASON_EVICTION (0x5)
#define OF_FLOW_REMOVED_REASON_EVICTION_BY_VERSION(version) (0x5)
#define OF_FLOW_REMOVED_REASON_EVICTION_GENERIC 402

/*
 * Defines for OF_FLOW_REMOVED_REASON_GROUP_DELETE
 * Original name OFPRR_GROUP_DELETE
 */
#define OF_FLOW_REMOVED_REASON_GROUP_DELETE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_FLOW_REMOVED_REASON_GROUP_DELETE (0x3)
#define OF_FLOW_REMOVED_REASON_GROUP_DELETE_BY_VERSION(version) (0x3)
#define OF_FLOW_REMOVED_REASON_GROUP_DELETE_GENERIC 403

/*
 * Defines for OF_FLOW_REMOVED_REASON_HARD_TIMEOUT
 * Original name OFPRR_HARD_TIMEOUT
 */
#define OF_FLOW_REMOVED_REASON_HARD_TIMEOUT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_REMOVED_REASON_HARD_TIMEOUT (0x1)
#define OF_FLOW_REMOVED_REASON_HARD_TIMEOUT_BY_VERSION(version) (0x1)
#define OF_FLOW_REMOVED_REASON_HARD_TIMEOUT_GENERIC 404

/*
 * Defines for OF_FLOW_REMOVED_REASON_IDLE_TIMEOUT
 * Original name OFPRR_IDLE_TIMEOUT
 */
#define OF_FLOW_REMOVED_REASON_IDLE_TIMEOUT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_FLOW_REMOVED_REASON_IDLE_TIMEOUT (0x0)
#define OF_FLOW_REMOVED_REASON_IDLE_TIMEOUT_BY_VERSION(version) (0x0)
#define OF_FLOW_REMOVED_REASON_IDLE_TIMEOUT_GENERIC 405

/*
 * Defines for OF_FLOW_REMOVED_REASON_METER_DELETE
 * Original name OFPRR_METER_DELETE
 */
#define OF_FLOW_REMOVED_REASON_METER_DELETE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_FLOW_REMOVED_REASON_METER_DELETE (0x4)
#define OF_FLOW_REMOVED_REASON_METER_DELETE_BY_VERSION(version) (0x4)
#define OF_FLOW_REMOVED_REASON_METER_DELETE_GENERIC 406

/****************************************************************
 * Identifiers from ofp_flow_wildcards
 *****************************************************************/

/*
 * Defines for OF_FLOW_WC_V1_ALL
 * Original name OFPFW_ALL
 */
#define OF_FLOW_WC_V1_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_ALL_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x3fffff, 0x3ff, 0x0, 0x0, 0x0)
#define OF_FLOW_WC_V1_ALL_GENERIC 407

/*
 * Defines for OF_FLOW_WC_V1_DL_DST
 * Original name OFPFW_DL_DST
 */
#define OF_FLOW_WC_V1_DL_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_DL_DST (0x8)
#define OF_FLOW_WC_V1_DL_DST_BY_VERSION(version) (0x8)
#define OF_FLOW_WC_V1_DL_DST_GENERIC 408

/*
 * Defines for OF_FLOW_WC_V1_DL_SRC
 * Original name OFPFW_DL_SRC
 */
#define OF_FLOW_WC_V1_DL_SRC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_DL_SRC (0x4)
#define OF_FLOW_WC_V1_DL_SRC_BY_VERSION(version) (0x4)
#define OF_FLOW_WC_V1_DL_SRC_GENERIC 409

/*
 * Defines for OF_FLOW_WC_V1_DL_TYPE
 * Original name OFPFW_DL_TYPE
 */
#define OF_FLOW_WC_V1_DL_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_DL_TYPE_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x10, 0x8, 0x0, 0x0, 0x0)
#define OF_FLOW_WC_V1_DL_TYPE_GENERIC 410

/*
 * Defines for OF_FLOW_WC_V1_DL_VLAN
 * Original name OFPFW_DL_VLAN
 */
#define OF_FLOW_WC_V1_DL_VLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_DL_VLAN (0x2)
#define OF_FLOW_WC_V1_DL_VLAN_BY_VERSION(version) (0x2)
#define OF_FLOW_WC_V1_DL_VLAN_GENERIC 411

/*
 * Defines for OF_FLOW_WC_V1_DL_VLAN_PCP
 * Original name OFPFW_DL_VLAN_PCP
 */
#define OF_FLOW_WC_V1_DL_VLAN_PCP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_DL_VLAN_PCP_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x100000, 0x4, 0x0, 0x0, 0x0)
#define OF_FLOW_WC_V1_DL_VLAN_PCP_GENERIC 412

/*
 * Defines for OF_FLOW_WC_V1_IN_PORT
 * Original name OFPFW_IN_PORT
 */
#define OF_FLOW_WC_V1_IN_PORT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_IN_PORT (0x1)
#define OF_FLOW_WC_V1_IN_PORT_BY_VERSION(version) (0x1)
#define OF_FLOW_WC_V1_IN_PORT_GENERIC 413

/*
 * Defines for OF_FLOW_WC_V1_MPLS_LABEL
 * Original name OFPFW_MPLS_LABEL
 */
#define OF_FLOW_WC_V1_MPLS_LABEL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_MPLS_LABEL (0x100)
#define OF_FLOW_WC_V1_MPLS_LABEL_BY_VERSION(version) (0x100)
#define OF_FLOW_WC_V1_MPLS_LABEL_GENERIC 414

/*
 * Defines for OF_FLOW_WC_V1_MPLS_TC
 * Original name OFPFW_MPLS_TC
 */
#define OF_FLOW_WC_V1_MPLS_TC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_MPLS_TC (0x200)
#define OF_FLOW_WC_V1_MPLS_TC_BY_VERSION(version) (0x200)
#define OF_FLOW_WC_V1_MPLS_TC_GENERIC 415

/*
 * Defines for OF_FLOW_WC_V1_NW_DST_ALL
 * Original name OFPFW_NW_DST_ALL
 */
#define OF_FLOW_WC_V1_NW_DST_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_DST_ALL (0x80000)
#define OF_FLOW_WC_V1_NW_DST_ALL_BY_VERSION(version) (0x80000)
#define OF_FLOW_WC_V1_NW_DST_ALL_GENERIC 416

/*
 * Defines for OF_FLOW_WC_V1_NW_DST_BITS
 * Original name OFPFW_NW_DST_BITS
 */
#define OF_FLOW_WC_V1_NW_DST_BITS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_DST_BITS (0x6)
#define OF_FLOW_WC_V1_NW_DST_BITS_BY_VERSION(version) (0x6)
#define OF_FLOW_WC_V1_NW_DST_BITS_GENERIC 417

/*
 * Defines for OF_FLOW_WC_V1_NW_DST_MASK
 * Original name OFPFW_NW_DST_MASK
 */
#define OF_FLOW_WC_V1_NW_DST_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_DST_MASK (0xfc000)
#define OF_FLOW_WC_V1_NW_DST_MASK_BY_VERSION(version) (0xfc000)
#define OF_FLOW_WC_V1_NW_DST_MASK_GENERIC 418

/*
 * Defines for OF_FLOW_WC_V1_NW_DST_SHIFT
 * Original name OFPFW_NW_DST_SHIFT
 */
#define OF_FLOW_WC_V1_NW_DST_SHIFT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_DST_SHIFT (0xe)
#define OF_FLOW_WC_V1_NW_DST_SHIFT_BY_VERSION(version) (0xe)
#define OF_FLOW_WC_V1_NW_DST_SHIFT_GENERIC 419

/*
 * Defines for OF_FLOW_WC_V1_NW_PROTO
 * Original name OFPFW_NW_PROTO
 */
#define OF_FLOW_WC_V1_NW_PROTO_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_NW_PROTO (0x20)
#define OF_FLOW_WC_V1_NW_PROTO_BY_VERSION(version) (0x20)
#define OF_FLOW_WC_V1_NW_PROTO_GENERIC 420

/*
 * Defines for OF_FLOW_WC_V1_NW_SRC_ALL
 * Original name OFPFW_NW_SRC_ALL
 */
#define OF_FLOW_WC_V1_NW_SRC_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_SRC_ALL (0x2000)
#define OF_FLOW_WC_V1_NW_SRC_ALL_BY_VERSION(version) (0x2000)
#define OF_FLOW_WC_V1_NW_SRC_ALL_GENERIC 421

/*
 * Defines for OF_FLOW_WC_V1_NW_SRC_BITS
 * Original name OFPFW_NW_SRC_BITS
 */
#define OF_FLOW_WC_V1_NW_SRC_BITS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_SRC_BITS (0x6)
#define OF_FLOW_WC_V1_NW_SRC_BITS_BY_VERSION(version) (0x6)
#define OF_FLOW_WC_V1_NW_SRC_BITS_GENERIC 422

/*
 * Defines for OF_FLOW_WC_V1_NW_SRC_MASK
 * Original name OFPFW_NW_SRC_MASK
 */
#define OF_FLOW_WC_V1_NW_SRC_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_SRC_MASK (0x3f00)
#define OF_FLOW_WC_V1_NW_SRC_MASK_BY_VERSION(version) (0x3f00)
#define OF_FLOW_WC_V1_NW_SRC_MASK_GENERIC 423

/*
 * Defines for OF_FLOW_WC_V1_NW_SRC_SHIFT
 * Original name OFPFW_NW_SRC_SHIFT
 */
#define OF_FLOW_WC_V1_NW_SRC_SHIFT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_FLOW_WC_V1_NW_SRC_SHIFT (0x8)
#define OF_FLOW_WC_V1_NW_SRC_SHIFT_BY_VERSION(version) (0x8)
#define OF_FLOW_WC_V1_NW_SRC_SHIFT_GENERIC 424

/*
 * Defines for OF_FLOW_WC_V1_NW_TOS
 * Original name OFPFW_NW_TOS
 */
#define OF_FLOW_WC_V1_NW_TOS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_NW_TOS_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x200000, 0x10, 0x0, 0x0, 0x0)
#define OF_FLOW_WC_V1_NW_TOS_GENERIC 425

/*
 * Defines for OF_FLOW_WC_V1_TP_DST
 * Original name OFPFW_TP_DST
 */
#define OF_FLOW_WC_V1_TP_DST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_TP_DST (0x80)
#define OF_FLOW_WC_V1_TP_DST_BY_VERSION(version) (0x80)
#define OF_FLOW_WC_V1_TP_DST_GENERIC 426

/*
 * Defines for OF_FLOW_WC_V1_TP_SRC
 * Original name OFPFW_TP_SRC
 */
#define OF_FLOW_WC_V1_TP_SRC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_FLOW_WC_V1_TP_SRC (0x40)
#define OF_FLOW_WC_V1_TP_SRC_BY_VERSION(version) (0x40)
#define OF_FLOW_WC_V1_TP_SRC_GENERIC 427

/****************************************************************
 * Identifiers from ofp_group
 *****************************************************************/

/*
 * Defines for OF_GROUP_ALL
 * Original name OFPG_ALL
 */
#define OF_GROUP_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_ALL (0xfffffffc)
#define OF_GROUP_ALL_BY_VERSION(version) (0xfffffffc)
#define OF_GROUP_ALL_GENERIC 428

/*
 * Defines for OF_GROUP_ANY
 * Original name OFPG_ANY
 */
#define OF_GROUP_ANY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_ANY (0xffffffff)
#define OF_GROUP_ANY_BY_VERSION(version) (0xffffffff)
#define OF_GROUP_ANY_GENERIC 429

/*
 * Defines for OF_GROUP_MAX
 * Original name OFPG_MAX
 */
#define OF_GROUP_MAX_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MAX (0xffffff00)
#define OF_GROUP_MAX_BY_VERSION(version) (0xffffff00)
#define OF_GROUP_MAX_GENERIC 430

/****************************************************************
 * Identifiers from ofp_group_capabilities
 *****************************************************************/

/*
 * Defines for OF_GROUP_CAPABILITIES_CHAINING
 * Original name OFPGFC_CHAINING
 */
#define OF_GROUP_CAPABILITIES_CHAINING_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_CAPABILITIES_CHAINING (0x4)
#define OF_GROUP_CAPABILITIES_CHAINING_BY_VERSION(version) (0x4)
#define OF_GROUP_CAPABILITIES_CHAINING_GENERIC 431

/*
 * Defines for OF_GROUP_CAPABILITIES_CHAINING_CHECKS
 * Original name OFPGFC_CHAINING_CHECKS
 */
#define OF_GROUP_CAPABILITIES_CHAINING_CHECKS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_CAPABILITIES_CHAINING_CHECKS (0x8)
#define OF_GROUP_CAPABILITIES_CHAINING_CHECKS_BY_VERSION(version) (0x8)
#define OF_GROUP_CAPABILITIES_CHAINING_CHECKS_GENERIC 432

/*
 * Defines for OF_GROUP_CAPABILITIES_SELECT_LIVENESS
 * Original name OFPGFC_SELECT_LIVENESS
 */
#define OF_GROUP_CAPABILITIES_SELECT_LIVENESS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_CAPABILITIES_SELECT_LIVENESS (0x2)
#define OF_GROUP_CAPABILITIES_SELECT_LIVENESS_BY_VERSION(version) (0x2)
#define OF_GROUP_CAPABILITIES_SELECT_LIVENESS_GENERIC 433

/*
 * Defines for OF_GROUP_CAPABILITIES_SELECT_WEIGHT
 * Original name OFPGFC_SELECT_WEIGHT
 */
#define OF_GROUP_CAPABILITIES_SELECT_WEIGHT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_CAPABILITIES_SELECT_WEIGHT (0x1)
#define OF_GROUP_CAPABILITIES_SELECT_WEIGHT_BY_VERSION(version) (0x1)
#define OF_GROUP_CAPABILITIES_SELECT_WEIGHT_GENERIC 434

/****************************************************************
 * Identifiers from ofp_group_mod_command
 *****************************************************************/

/*
 * Defines for OF_GROUP_MOD_COMMAND_ADD
 * Original name OFPGC_ADD
 */
#define OF_GROUP_MOD_COMMAND_ADD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_COMMAND_ADD (0x0)
#define OF_GROUP_MOD_COMMAND_ADD_BY_VERSION(version) (0x0)
#define OF_GROUP_MOD_COMMAND_ADD_GENERIC 435

/*
 * Defines for OF_GROUP_MOD_COMMAND_DELETE
 * Original name OFPGC_DELETE
 */
#define OF_GROUP_MOD_COMMAND_DELETE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_COMMAND_DELETE (0x2)
#define OF_GROUP_MOD_COMMAND_DELETE_BY_VERSION(version) (0x2)
#define OF_GROUP_MOD_COMMAND_DELETE_GENERIC 436

/*
 * Defines for OF_GROUP_MOD_COMMAND_MODIFY
 * Original name OFPGC_MODIFY
 */
#define OF_GROUP_MOD_COMMAND_MODIFY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_COMMAND_MODIFY (0x1)
#define OF_GROUP_MOD_COMMAND_MODIFY_BY_VERSION(version) (0x1)
#define OF_GROUP_MOD_COMMAND_MODIFY_GENERIC 437

/****************************************************************
 * Identifiers from ofp_group_mod_failed_code
 *****************************************************************/

/*
 * Defines for OF_GROUP_MOD_FAILED_BAD_BUCKET
 * Original name OFPGMFC_BAD_BUCKET
 */
#define OF_GROUP_MOD_FAILED_BAD_BUCKET_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_BAD_BUCKET (0xc)
#define OF_GROUP_MOD_FAILED_BAD_BUCKET_BY_VERSION(version) (0xc)
#define OF_GROUP_MOD_FAILED_BAD_BUCKET_GENERIC 438

/*
 * Defines for OF_GROUP_MOD_FAILED_BAD_COMMAND
 * Original name OFPGMFC_BAD_COMMAND
 */
#define OF_GROUP_MOD_FAILED_BAD_COMMAND_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_BAD_COMMAND (0xb)
#define OF_GROUP_MOD_FAILED_BAD_COMMAND_BY_VERSION(version) (0xb)
#define OF_GROUP_MOD_FAILED_BAD_COMMAND_GENERIC 439

/*
 * Defines for OF_GROUP_MOD_FAILED_BAD_TYPE
 * Original name OFPGMFC_BAD_TYPE
 */
#define OF_GROUP_MOD_FAILED_BAD_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_BAD_TYPE (0xa)
#define OF_GROUP_MOD_FAILED_BAD_TYPE_BY_VERSION(version) (0xa)
#define OF_GROUP_MOD_FAILED_BAD_TYPE_GENERIC 440

/*
 * Defines for OF_GROUP_MOD_FAILED_BAD_WATCH
 * Original name OFPGMFC_BAD_WATCH
 */
#define OF_GROUP_MOD_FAILED_BAD_WATCH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_BAD_WATCH (0xd)
#define OF_GROUP_MOD_FAILED_BAD_WATCH_BY_VERSION(version) (0xd)
#define OF_GROUP_MOD_FAILED_BAD_WATCH_GENERIC 441

/*
 * Defines for OF_GROUP_MOD_FAILED_CHAINED_GROUP
 * Original name OFPGMFC_CHAINED_GROUP
 */
#define OF_GROUP_MOD_FAILED_CHAINED_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_CHAINED_GROUP (0x9)
#define OF_GROUP_MOD_FAILED_CHAINED_GROUP_BY_VERSION(version) (0x9)
#define OF_GROUP_MOD_FAILED_CHAINED_GROUP_GENERIC 442

/*
 * Defines for OF_GROUP_MOD_FAILED_CHAINING_UNSUPPORTED
 * Original name OFPGMFC_CHAINING_UNSUPPORTED
 */
#define OF_GROUP_MOD_FAILED_CHAINING_UNSUPPORTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_CHAINING_UNSUPPORTED (0x5)
#define OF_GROUP_MOD_FAILED_CHAINING_UNSUPPORTED_BY_VERSION(version) (0x5)
#define OF_GROUP_MOD_FAILED_CHAINING_UNSUPPORTED_GENERIC 443

/*
 * Defines for OF_GROUP_MOD_FAILED_EPERM
 * Original name OFPGMFC_EPERM
 */
#define OF_GROUP_MOD_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_EPERM (0xe)
#define OF_GROUP_MOD_FAILED_EPERM_BY_VERSION(version) (0xe)
#define OF_GROUP_MOD_FAILED_EPERM_GENERIC 444

/*
 * Defines for OF_GROUP_MOD_FAILED_GROUP_EXISTS
 * Original name OFPGMFC_GROUP_EXISTS
 */
#define OF_GROUP_MOD_FAILED_GROUP_EXISTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_GROUP_EXISTS (0x0)
#define OF_GROUP_MOD_FAILED_GROUP_EXISTS_BY_VERSION(version) (0x0)
#define OF_GROUP_MOD_FAILED_GROUP_EXISTS_GENERIC 445

/*
 * Defines for OF_GROUP_MOD_FAILED_INVALID_GROUP
 * Original name OFPGMFC_INVALID_GROUP
 */
#define OF_GROUP_MOD_FAILED_INVALID_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_INVALID_GROUP (0x1)
#define OF_GROUP_MOD_FAILED_INVALID_GROUP_BY_VERSION(version) (0x1)
#define OF_GROUP_MOD_FAILED_INVALID_GROUP_GENERIC 446

/*
 * Defines for OF_GROUP_MOD_FAILED_LOOP
 * Original name OFPGMFC_LOOP
 */
#define OF_GROUP_MOD_FAILED_LOOP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_LOOP (0x7)
#define OF_GROUP_MOD_FAILED_LOOP_BY_VERSION(version) (0x7)
#define OF_GROUP_MOD_FAILED_LOOP_GENERIC 447

/*
 * Defines for OF_GROUP_MOD_FAILED_OUT_OF_BUCKETS
 * Original name OFPGMFC_OUT_OF_BUCKETS
 */
#define OF_GROUP_MOD_FAILED_OUT_OF_BUCKETS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_OUT_OF_BUCKETS (0x4)
#define OF_GROUP_MOD_FAILED_OUT_OF_BUCKETS_BY_VERSION(version) (0x4)
#define OF_GROUP_MOD_FAILED_OUT_OF_BUCKETS_GENERIC 448

/*
 * Defines for OF_GROUP_MOD_FAILED_OUT_OF_GROUPS
 * Original name OFPGMFC_OUT_OF_GROUPS
 */
#define OF_GROUP_MOD_FAILED_OUT_OF_GROUPS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_OUT_OF_GROUPS (0x3)
#define OF_GROUP_MOD_FAILED_OUT_OF_GROUPS_BY_VERSION(version) (0x3)
#define OF_GROUP_MOD_FAILED_OUT_OF_GROUPS_GENERIC 449

/*
 * Defines for OF_GROUP_MOD_FAILED_UNKNOWN_GROUP
 * Original name OFPGMFC_UNKNOWN_GROUP
 */
#define OF_GROUP_MOD_FAILED_UNKNOWN_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_UNKNOWN_GROUP (0x8)
#define OF_GROUP_MOD_FAILED_UNKNOWN_GROUP_BY_VERSION(version) (0x8)
#define OF_GROUP_MOD_FAILED_UNKNOWN_GROUP_GENERIC 450

/*
 * Defines for OF_GROUP_MOD_FAILED_WATCH_UNSUPPORTED
 * Original name OFPGMFC_WATCH_UNSUPPORTED
 */
#define OF_GROUP_MOD_FAILED_WATCH_UNSUPPORTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_WATCH_UNSUPPORTED (0x6)
#define OF_GROUP_MOD_FAILED_WATCH_UNSUPPORTED_BY_VERSION(version) (0x6)
#define OF_GROUP_MOD_FAILED_WATCH_UNSUPPORTED_GENERIC 451

/*
 * Defines for OF_GROUP_MOD_FAILED_WEIGHT_UNSUPPORTED
 * Original name OFPGMFC_WEIGHT_UNSUPPORTED
 */
#define OF_GROUP_MOD_FAILED_WEIGHT_UNSUPPORTED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_MOD_FAILED_WEIGHT_UNSUPPORTED (0x2)
#define OF_GROUP_MOD_FAILED_WEIGHT_UNSUPPORTED_BY_VERSION(version) (0x2)
#define OF_GROUP_MOD_FAILED_WEIGHT_UNSUPPORTED_GENERIC 452

/****************************************************************
 * Identifiers from ofp_group_type
 *****************************************************************/

/*
 * Defines for OF_GROUP_TYPE_ALL
 * Original name OFPGT_ALL
 */
#define OF_GROUP_TYPE_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_TYPE_ALL (0x0)
#define OF_GROUP_TYPE_ALL_BY_VERSION(version) (0x0)
#define OF_GROUP_TYPE_ALL_GENERIC 453

/*
 * Defines for OF_GROUP_TYPE_FF
 * Original name OFPGT_FF
 */
#define OF_GROUP_TYPE_FF_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_TYPE_FF (0x3)
#define OF_GROUP_TYPE_FF_BY_VERSION(version) (0x3)
#define OF_GROUP_TYPE_FF_GENERIC 454

/*
 * Defines for OF_GROUP_TYPE_INDIRECT
 * Original name OFPGT_INDIRECT
 */
#define OF_GROUP_TYPE_INDIRECT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_TYPE_INDIRECT (0x2)
#define OF_GROUP_TYPE_INDIRECT_BY_VERSION(version) (0x2)
#define OF_GROUP_TYPE_INDIRECT_GENERIC 455

/*
 * Defines for OF_GROUP_TYPE_SELECT
 * Original name OFPGT_SELECT
 */
#define OF_GROUP_TYPE_SELECT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_GROUP_TYPE_SELECT (0x1)
#define OF_GROUP_TYPE_SELECT_BY_VERSION(version) (0x1)
#define OF_GROUP_TYPE_SELECT_GENERIC 456

/****************************************************************
 * Identifiers from ofp_hello_elem_type
 *****************************************************************/

/*
 * Defines for OF_HELLO_ELEM_TYPE__VERSIONBITMAP
 * Original name OFPHET_VERSIONBITMAP
 */
#define OF_HELLO_ELEM_TYPE__VERSIONBITMAP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_HELLO_ELEM_TYPE__VERSIONBITMAP (0x1)
#define OF_HELLO_ELEM_TYPE__VERSIONBITMAP_BY_VERSION(version) (0x1)
#define OF_HELLO_ELEM_TYPE__VERSIONBITMAP_GENERIC 457

/****************************************************************
 * Identifiers from ofp_hello_failed_code
 *****************************************************************/

/*
 * Defines for OF_HELLO_FAILED_EPERM
 * Original name OFPHFC_EPERM
 */
#define OF_HELLO_FAILED_EPERM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_HELLO_FAILED_EPERM (0x1)
#define OF_HELLO_FAILED_EPERM_BY_VERSION(version) (0x1)
#define OF_HELLO_FAILED_EPERM_GENERIC 458

/*
 * Defines for OF_HELLO_FAILED_INCOMPATIBLE
 * Original name OFPHFC_INCOMPATIBLE
 */
#define OF_HELLO_FAILED_INCOMPATIBLE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_HELLO_FAILED_INCOMPATIBLE (0x0)
#define OF_HELLO_FAILED_INCOMPATIBLE_BY_VERSION(version) (0x0)
#define OF_HELLO_FAILED_INCOMPATIBLE_GENERIC 459

/****************************************************************
 * Identifiers from ofp_instruction_type
 *****************************************************************/

/*
 * Defines for OF_INSTRUCTION_TYPE_APPLY_ACTIONS
 * Original name OFPIT_APPLY_ACTIONS
 */
#define OF_INSTRUCTION_TYPE_APPLY_ACTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_TYPE_APPLY_ACTIONS (0x4)
#define OF_INSTRUCTION_TYPE_APPLY_ACTIONS_BY_VERSION(version) (0x4)
#define OF_INSTRUCTION_TYPE_APPLY_ACTIONS_GENERIC 460

/*
 * Defines for OF_INSTRUCTION_TYPE_CLEAR_ACTIONS
 * Original name OFPIT_CLEAR_ACTIONS
 */
#define OF_INSTRUCTION_TYPE_CLEAR_ACTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_TYPE_CLEAR_ACTIONS (0x5)
#define OF_INSTRUCTION_TYPE_CLEAR_ACTIONS_BY_VERSION(version) (0x5)
#define OF_INSTRUCTION_TYPE_CLEAR_ACTIONS_GENERIC 461

/*
 * Defines for OF_INSTRUCTION_TYPE_EXPERIMENTER
 * Original name OFPIT_EXPERIMENTER
 */
#define OF_INSTRUCTION_TYPE_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_TYPE_EXPERIMENTER (0xffff)
#define OF_INSTRUCTION_TYPE_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_INSTRUCTION_TYPE_EXPERIMENTER_GENERIC 462

/*
 * Defines for OF_INSTRUCTION_TYPE_GOTO_TABLE
 * Original name OFPIT_GOTO_TABLE
 */
#define OF_INSTRUCTION_TYPE_GOTO_TABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_TYPE_GOTO_TABLE (0x1)
#define OF_INSTRUCTION_TYPE_GOTO_TABLE_BY_VERSION(version) (0x1)
#define OF_INSTRUCTION_TYPE_GOTO_TABLE_GENERIC 463

/*
 * Defines for OF_INSTRUCTION_TYPE_METER
 * Original name OFPIT_METER
 */
#define OF_INSTRUCTION_TYPE_METER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_TYPE_METER (0x6)
#define OF_INSTRUCTION_TYPE_METER_BY_VERSION(version) (0x6)
#define OF_INSTRUCTION_TYPE_METER_GENERIC 464

/*
 * Defines for OF_INSTRUCTION_TYPE_WRITE_ACTIONS
 * Original name OFPIT_WRITE_ACTIONS
 */
#define OF_INSTRUCTION_TYPE_WRITE_ACTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_TYPE_WRITE_ACTIONS (0x3)
#define OF_INSTRUCTION_TYPE_WRITE_ACTIONS_BY_VERSION(version) (0x3)
#define OF_INSTRUCTION_TYPE_WRITE_ACTIONS_GENERIC 465

/*
 * Defines for OF_INSTRUCTION_TYPE_WRITE_METADATA
 * Original name OFPIT_WRITE_METADATA
 */
#define OF_INSTRUCTION_TYPE_WRITE_METADATA_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_INSTRUCTION_TYPE_WRITE_METADATA (0x2)
#define OF_INSTRUCTION_TYPE_WRITE_METADATA_BY_VERSION(version) (0x2)
#define OF_INSTRUCTION_TYPE_WRITE_METADATA_GENERIC 466

/****************************************************************
 * Identifiers from ofp_ipv6exthdr_flags
 *****************************************************************/

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_AUTH
 * Original name OFPIEH_AUTH
 */
#define OF_IPV6_EXT_HDR_FLAG_AUTH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_IPV6_EXT_HDR_FLAG_AUTH (0x4)
#define OF_IPV6_EXT_HDR_FLAG_AUTH_BY_VERSION(version) (0x4)

#define OF_IPV6_EXT_HDR_FLAG_AUTH_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_AUTH_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_AUTH_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_AUTH_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_AUTH_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_AUTH_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_AUTH_GENERIC 467

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_DEST
 * Original name OFPIEH_DEST
 */
#define OF_IPV6_EXT_HDR_FLAG_DEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_IPV6_EXT_HDR_FLAG_DEST (0x8)
#define OF_IPV6_EXT_HDR_FLAG_DEST_BY_VERSION(version) (0x8)

#define OF_IPV6_EXT_HDR_FLAG_DEST_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_DEST_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_DEST_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_DEST_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_DEST_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_DEST_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_DEST_GENERIC 468

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_ESP
 * Original name OFPIEH_ESP
 */
#define OF_IPV6_EXT_HDR_FLAG_ESP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_IPV6_EXT_HDR_FLAG_ESP (0x2)
#define OF_IPV6_EXT_HDR_FLAG_ESP_BY_VERSION(version) (0x2)

#define OF_IPV6_EXT_HDR_FLAG_ESP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_ESP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ESP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_ESP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ESP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_ESP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ESP_GENERIC 469

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_FRAG
 * Original name OFPIEH_FRAG
 */
#define OF_IPV6_EXT_HDR_FLAG_FRAG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_IPV6_EXT_HDR_FLAG_FRAG (0x10)
#define OF_IPV6_EXT_HDR_FLAG_FRAG_BY_VERSION(version) (0x10)

#define OF_IPV6_EXT_HDR_FLAG_FRAG_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_FRAG_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_FRAG_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_FRAG_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_FRAG_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_FRAG_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_FRAG_GENERIC 470

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_HOP
 * Original name OFPIEH_HOP
 */
#define OF_IPV6_EXT_HDR_FLAG_HOP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_IPV6_EXT_HDR_FLAG_HOP (0x40)
#define OF_IPV6_EXT_HDR_FLAG_HOP_BY_VERSION(version) (0x40)

#define OF_IPV6_EXT_HDR_FLAG_HOP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_HOP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_HOP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_HOP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_HOP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_HOP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_HOP_GENERIC 471

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_NONEXT
 * Original name OFPIEH_NONEXT
 */
#define OF_IPV6_EXT_HDR_FLAG_NONEXT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_IPV6_EXT_HDR_FLAG_NONEXT (0x1)
#define OF_IPV6_EXT_HDR_FLAG_NONEXT_BY_VERSION(version) (0x1)

#define OF_IPV6_EXT_HDR_FLAG_NONEXT_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_NONEXT_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_NONEXT_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_NONEXT_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_NONEXT_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_NONEXT_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_NONEXT_GENERIC 472

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_ROUTER
 * Original name OFPIEH_ROUTER
 */
#define OF_IPV6_EXT_HDR_FLAG_ROUTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_IPV6_EXT_HDR_FLAG_ROUTER (0x20)
#define OF_IPV6_EXT_HDR_FLAG_ROUTER_BY_VERSION(version) (0x20)

#define OF_IPV6_EXT_HDR_FLAG_ROUTER_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_ROUTER_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ROUTER_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_ROUTER_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ROUTER_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_ROUTER_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_ROUTER_GENERIC 473

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_UNREP
 * Original name OFPIEH_UNREP
 */
#define OF_IPV6_EXT_HDR_FLAG_UNREP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_IPV6_EXT_HDR_FLAG_UNREP (0x80)
#define OF_IPV6_EXT_HDR_FLAG_UNREP_BY_VERSION(version) (0x80)

#define OF_IPV6_EXT_HDR_FLAG_UNREP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_UNREP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNREP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_UNREP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNREP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_UNREP_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNREP_GENERIC 474

/*
 * Defines for OF_IPV6_EXT_HDR_FLAG_UNSEQ
 * Original name OFPIEH_UNSEQ
 */
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ (0x100)
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_BY_VERSION(version) (0x100)

#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_IPV6_EXT_HDR_FLAG_UNSEQ_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_IPV6_EXT_HDR_FLAG_UNSEQ_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_IPV6_EXT_HDR_FLAG_UNSEQ_BY_VERSION(version))
#define OF_IPV6_EXT_HDR_FLAG_UNSEQ_GENERIC 475

/****************************************************************
 * Identifiers from ofp_match_type
 *****************************************************************/

/*
 * Defines for OF_MATCH_TYPE_OXM
 * Original name OFPMT_OXM
 */
#define OF_MATCH_TYPE_OXM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_TYPE_OXM (0x1)
#define OF_MATCH_TYPE_OXM_BY_VERSION(version) (0x1)
#define OF_MATCH_TYPE_OXM_GENERIC 476

/*
 * Defines for OF_MATCH_TYPE_STANDARD
 * Original name OFPMT_STANDARD
 */
#define OF_MATCH_TYPE_STANDARD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_MATCH_TYPE_STANDARD (0x0)
#define OF_MATCH_TYPE_STANDARD_BY_VERSION(version) (0x0)
#define OF_MATCH_TYPE_STANDARD_GENERIC 477

/****************************************************************
 * Identifiers from ofp_meter
 *****************************************************************/

/*
 * Defines for OF_METER_ALL
 * Original name OFPM_ALL
 */
#define OF_METER_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_ALL (0xffffffff)
#define OF_METER_ALL_BY_VERSION(version) (0xffffffff)
#define OF_METER_ALL_GENERIC 478

/*
 * Defines for OF_METER_CONTROLLER
 * Original name OFPM_CONTROLLER
 */
#define OF_METER_CONTROLLER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_CONTROLLER (0xfffffffe)
#define OF_METER_CONTROLLER_BY_VERSION(version) (0xfffffffe)
#define OF_METER_CONTROLLER_GENERIC 479

/*
 * Defines for OF_METER_MAX
 * Original name OFPM_MAX
 */
#define OF_METER_MAX_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MAX (0xffff0000)
#define OF_METER_MAX_BY_VERSION(version) (0xffff0000)
#define OF_METER_MAX_GENERIC 480

/*
 * Defines for OF_METER_SLOWPATH
 * Original name OFPM_SLOWPATH
 */
#define OF_METER_SLOWPATH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_SLOWPATH (0xfffffffd)
#define OF_METER_SLOWPATH_BY_VERSION(version) (0xfffffffd)
#define OF_METER_SLOWPATH_GENERIC 481

/****************************************************************
 * Identifiers from ofp_meter_band_type
 *****************************************************************/

/*
 * Defines for OF_METER_BAND_TYPE_DROP
 * Original name OFPMBT_DROP
 */
#define OF_METER_BAND_TYPE_DROP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_BAND_TYPE_DROP (0x1)
#define OF_METER_BAND_TYPE_DROP_BY_VERSION(version) (0x1)
#define OF_METER_BAND_TYPE_DROP_GENERIC 482

/*
 * Defines for OF_METER_BAND_TYPE_DSCP_REMARK
 * Original name OFPMBT_DSCP_REMARK
 */
#define OF_METER_BAND_TYPE_DSCP_REMARK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_BAND_TYPE_DSCP_REMARK (0x2)
#define OF_METER_BAND_TYPE_DSCP_REMARK_BY_VERSION(version) (0x2)
#define OF_METER_BAND_TYPE_DSCP_REMARK_GENERIC 483

/*
 * Defines for OF_METER_BAND_TYPE_EXPERIMENTER
 * Original name OFPMBT_EXPERIMENTER
 */
#define OF_METER_BAND_TYPE_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_BAND_TYPE_EXPERIMENTER (0xffff)
#define OF_METER_BAND_TYPE_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_METER_BAND_TYPE_EXPERIMENTER_GENERIC 484

/****************************************************************
 * Identifiers from ofp_meter_flags
 *****************************************************************/

/*
 * Defines for OF_METER_FLAG_BURST
 * Original name OFPMF_BURST
 */
#define OF_METER_FLAG_BURST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_FLAG_BURST (0x4)
#define OF_METER_FLAG_BURST_BY_VERSION(version) (0x4)

#define OF_METER_FLAG_BURST_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_METER_FLAG_BURST_BY_VERSION(version))
#define OF_METER_FLAG_BURST_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_METER_FLAG_BURST_BY_VERSION(version))
#define OF_METER_FLAG_BURST_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_METER_FLAG_BURST_BY_VERSION(version))
#define OF_METER_FLAG_BURST_GENERIC 485

/*
 * Defines for OF_METER_FLAG_KBPS
 * Original name OFPMF_KBPS
 */
#define OF_METER_FLAG_KBPS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_FLAG_KBPS (0x1)
#define OF_METER_FLAG_KBPS_BY_VERSION(version) (0x1)

#define OF_METER_FLAG_KBPS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_METER_FLAG_KBPS_BY_VERSION(version))
#define OF_METER_FLAG_KBPS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_METER_FLAG_KBPS_BY_VERSION(version))
#define OF_METER_FLAG_KBPS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_METER_FLAG_KBPS_BY_VERSION(version))
#define OF_METER_FLAG_KBPS_GENERIC 486

/*
 * Defines for OF_METER_FLAG_PKTPS
 * Original name OFPMF_PKTPS
 */
#define OF_METER_FLAG_PKTPS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_FLAG_PKTPS (0x2)
#define OF_METER_FLAG_PKTPS_BY_VERSION(version) (0x2)

#define OF_METER_FLAG_PKTPS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_METER_FLAG_PKTPS_BY_VERSION(version))
#define OF_METER_FLAG_PKTPS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_METER_FLAG_PKTPS_BY_VERSION(version))
#define OF_METER_FLAG_PKTPS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_METER_FLAG_PKTPS_BY_VERSION(version))
#define OF_METER_FLAG_PKTPS_GENERIC 487

/*
 * Defines for OF_METER_FLAG_STATS
 * Original name OFPMF_STATS
 */
#define OF_METER_FLAG_STATS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_FLAG_STATS (0x8)
#define OF_METER_FLAG_STATS_BY_VERSION(version) (0x8)

#define OF_METER_FLAG_STATS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_METER_FLAG_STATS_BY_VERSION(version))
#define OF_METER_FLAG_STATS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_METER_FLAG_STATS_BY_VERSION(version))
#define OF_METER_FLAG_STATS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_METER_FLAG_STATS_BY_VERSION(version))
#define OF_METER_FLAG_STATS_GENERIC 488

/****************************************************************
 * Identifiers from ofp_meter_mod_command
 *****************************************************************/

/*
 * Defines for OF_METER_MOD_COMMAND_ADD
 * Original name OFPMC_ADD
 */
#define OF_METER_MOD_COMMAND_ADD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_COMMAND_ADD (0x0)
#define OF_METER_MOD_COMMAND_ADD_BY_VERSION(version) (0x0)
#define OF_METER_MOD_COMMAND_ADD_GENERIC 489

/*
 * Defines for OF_METER_MOD_COMMAND_DELETE
 * Original name OFPMC_DELETE
 */
#define OF_METER_MOD_COMMAND_DELETE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_COMMAND_DELETE (0x2)
#define OF_METER_MOD_COMMAND_DELETE_BY_VERSION(version) (0x2)
#define OF_METER_MOD_COMMAND_DELETE_GENERIC 490

/*
 * Defines for OF_METER_MOD_COMMAND_MODIFY
 * Original name OFPMC_MODIFY
 */
#define OF_METER_MOD_COMMAND_MODIFY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_COMMAND_MODIFY (0x1)
#define OF_METER_MOD_COMMAND_MODIFY_BY_VERSION(version) (0x1)
#define OF_METER_MOD_COMMAND_MODIFY_GENERIC 491

/****************************************************************
 * Identifiers from ofp_meter_mod_failed_code
 *****************************************************************/

/*
 * Defines for OF_METER_MOD_FAILED_BAD_BAND
 * Original name OFPMMFC_BAD_BAND
 */
#define OF_METER_MOD_FAILED_BAD_BAND_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_BAD_BAND (0x8)
#define OF_METER_MOD_FAILED_BAD_BAND_BY_VERSION(version) (0x8)
#define OF_METER_MOD_FAILED_BAD_BAND_GENERIC 492

/*
 * Defines for OF_METER_MOD_FAILED_BAD_BAND_VALUE
 * Original name OFPMMFC_BAD_BAND_VALUE
 */
#define OF_METER_MOD_FAILED_BAD_BAND_VALUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_BAD_BAND_VALUE (0x9)
#define OF_METER_MOD_FAILED_BAD_BAND_VALUE_BY_VERSION(version) (0x9)
#define OF_METER_MOD_FAILED_BAD_BAND_VALUE_GENERIC 493

/*
 * Defines for OF_METER_MOD_FAILED_BAD_BURST
 * Original name OFPMMFC_BAD_BURST
 */
#define OF_METER_MOD_FAILED_BAD_BURST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_BAD_BURST (0x7)
#define OF_METER_MOD_FAILED_BAD_BURST_BY_VERSION(version) (0x7)
#define OF_METER_MOD_FAILED_BAD_BURST_GENERIC 494

/*
 * Defines for OF_METER_MOD_FAILED_BAD_COMMAND
 * Original name OFPMMFC_BAD_COMMAND
 */
#define OF_METER_MOD_FAILED_BAD_COMMAND_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_BAD_COMMAND (0x4)
#define OF_METER_MOD_FAILED_BAD_COMMAND_BY_VERSION(version) (0x4)
#define OF_METER_MOD_FAILED_BAD_COMMAND_GENERIC 495

/*
 * Defines for OF_METER_MOD_FAILED_BAD_FLAGS
 * Original name OFPMMFC_BAD_FLAGS
 */
#define OF_METER_MOD_FAILED_BAD_FLAGS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_BAD_FLAGS (0x5)
#define OF_METER_MOD_FAILED_BAD_FLAGS_BY_VERSION(version) (0x5)

#define OF_METER_MOD_FAILED_BAD_FLAGS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_METER_MOD_FAILED_BAD_FLAGS_BY_VERSION(version))
#define OF_METER_MOD_FAILED_BAD_FLAGS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_METER_MOD_FAILED_BAD_FLAGS_BY_VERSION(version))
#define OF_METER_MOD_FAILED_BAD_FLAGS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_METER_MOD_FAILED_BAD_FLAGS_BY_VERSION(version))
#define OF_METER_MOD_FAILED_BAD_FLAGS_GENERIC 496

/*
 * Defines for OF_METER_MOD_FAILED_BAD_RATE
 * Original name OFPMMFC_BAD_RATE
 */
#define OF_METER_MOD_FAILED_BAD_RATE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_BAD_RATE (0x6)
#define OF_METER_MOD_FAILED_BAD_RATE_BY_VERSION(version) (0x6)
#define OF_METER_MOD_FAILED_BAD_RATE_GENERIC 497

/*
 * Defines for OF_METER_MOD_FAILED_INVALID_METER
 * Original name OFPMMFC_INVALID_METER
 */
#define OF_METER_MOD_FAILED_INVALID_METER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_INVALID_METER (0x2)
#define OF_METER_MOD_FAILED_INVALID_METER_BY_VERSION(version) (0x2)
#define OF_METER_MOD_FAILED_INVALID_METER_GENERIC 498

/*
 * Defines for OF_METER_MOD_FAILED_METER_EXISTS
 * Original name OFPMMFC_METER_EXISTS
 */
#define OF_METER_MOD_FAILED_METER_EXISTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_METER_EXISTS (0x1)
#define OF_METER_MOD_FAILED_METER_EXISTS_BY_VERSION(version) (0x1)
#define OF_METER_MOD_FAILED_METER_EXISTS_GENERIC 499

/*
 * Defines for OF_METER_MOD_FAILED_OUT_OF_BANDS
 * Original name OFPMMFC_OUT_OF_BANDS
 */
#define OF_METER_MOD_FAILED_OUT_OF_BANDS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_OUT_OF_BANDS (0xb)
#define OF_METER_MOD_FAILED_OUT_OF_BANDS_BY_VERSION(version) (0xb)
#define OF_METER_MOD_FAILED_OUT_OF_BANDS_GENERIC 500

/*
 * Defines for OF_METER_MOD_FAILED_OUT_OF_METERS
 * Original name OFPMMFC_OUT_OF_METERS
 */
#define OF_METER_MOD_FAILED_OUT_OF_METERS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_OUT_OF_METERS (0xa)
#define OF_METER_MOD_FAILED_OUT_OF_METERS_BY_VERSION(version) (0xa)
#define OF_METER_MOD_FAILED_OUT_OF_METERS_GENERIC 501

/*
 * Defines for OF_METER_MOD_FAILED_UNKNOWN
 * Original name OFPMMFC_UNKNOWN
 */
#define OF_METER_MOD_FAILED_UNKNOWN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_UNKNOWN (0x0)
#define OF_METER_MOD_FAILED_UNKNOWN_BY_VERSION(version) (0x0)
#define OF_METER_MOD_FAILED_UNKNOWN_GENERIC 502

/*
 * Defines for OF_METER_MOD_FAILED_UNKNOWN_METER
 * Original name OFPMMFC_UNKNOWN_METER
 */
#define OF_METER_MOD_FAILED_UNKNOWN_METER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_METER_MOD_FAILED_UNKNOWN_METER (0x3)
#define OF_METER_MOD_FAILED_UNKNOWN_METER_BY_VERSION(version) (0x3)
#define OF_METER_MOD_FAILED_UNKNOWN_METER_GENERIC 503

/****************************************************************
 * Identifiers from ofp_nicira_controller_role
 *****************************************************************/

/*
 * Defines for OF_NICIRA_CONTROLLER_ROLE_MASTER
 * Original name NX_ROLE_MASTER
 */
#define OF_NICIRA_CONTROLLER_ROLE_MASTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_NICIRA_CONTROLLER_ROLE_MASTER (0x1)
#define OF_NICIRA_CONTROLLER_ROLE_MASTER_BY_VERSION(version) (0x1)
#define OF_NICIRA_CONTROLLER_ROLE_MASTER_GENERIC 504

/*
 * Defines for OF_NICIRA_CONTROLLER_ROLE_OTHER
 * Original name NX_ROLE_OTHER
 */
#define OF_NICIRA_CONTROLLER_ROLE_OTHER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_NICIRA_CONTROLLER_ROLE_OTHER (0x0)
#define OF_NICIRA_CONTROLLER_ROLE_OTHER_BY_VERSION(version) (0x0)
#define OF_NICIRA_CONTROLLER_ROLE_OTHER_GENERIC 505

/*
 * Defines for OF_NICIRA_CONTROLLER_ROLE_SLAVE
 * Original name NX_ROLE_SLAVE
 */
#define OF_NICIRA_CONTROLLER_ROLE_SLAVE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_NICIRA_CONTROLLER_ROLE_SLAVE (0x2)
#define OF_NICIRA_CONTROLLER_ROLE_SLAVE_BY_VERSION(version) (0x2)
#define OF_NICIRA_CONTROLLER_ROLE_SLAVE_GENERIC 506

/****************************************************************
 * Identifiers from ofp_optical_port_features
 *****************************************************************/

/*
 * Defines for OFPOPF_RX_TUNE
 * Original name OFPOPF_RX_TUNE
 */
#define OFPOPF_RX_TUNE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPOPF_RX_TUNE (0x1)
#define OFPOPF_RX_TUNE_BY_VERSION(version) (0x1)
#define OFPOPF_RX_TUNE_GENERIC 507

/*
 * Defines for OFPOPF_TX_PWR
 * Original name OFPOPF_TX_PWR
 */
#define OFPOPF_TX_PWR_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPOPF_TX_PWR (0x4)
#define OFPOPF_TX_PWR_BY_VERSION(version) (0x4)
#define OFPOPF_TX_PWR_GENERIC 508

/*
 * Defines for OFPOPF_TX_TUNE
 * Original name OFPOPF_TX_TUNE
 */
#define OFPOPF_TX_TUNE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPOPF_TX_TUNE (0x2)
#define OFPOPF_TX_TUNE_BY_VERSION(version) (0x2)
#define OFPOPF_TX_TUNE_GENERIC 509

/*
 * Defines for OFPOPF_USE_FREQ
 * Original name OFPOPF_USE_FREQ
 */
#define OFPOPF_USE_FREQ_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPOPF_USE_FREQ (0x8)
#define OFPOPF_USE_FREQ_BY_VERSION(version) (0x8)
#define OFPOPF_USE_FREQ_GENERIC 510

/****************************************************************
 * Identifiers from ofp_oxm_class
 *****************************************************************/

/*
 * Defines for OF_OXM_CLASS_EXPERIMENTER
 * Original name OFPXMC_EXPERIMENTER
 */
#define OF_OXM_CLASS_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OXM_CLASS_EXPERIMENTER (0xffff)
#define OF_OXM_CLASS_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_OXM_CLASS_EXPERIMENTER_GENERIC 511

/*
 * Defines for OF_OXM_CLASS_NXM_0
 * Original name OFPXMC_NXM_0
 */
#define OF_OXM_CLASS_NXM_0_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OXM_CLASS_NXM_0 (0x0)
#define OF_OXM_CLASS_NXM_0_BY_VERSION(version) (0x0)
#define OF_OXM_CLASS_NXM_0_GENERIC 512

/*
 * Defines for OF_OXM_CLASS_NXM_1
 * Original name OFPXMC_NXM_1
 */
#define OF_OXM_CLASS_NXM_1_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OXM_CLASS_NXM_1 (0x1)
#define OF_OXM_CLASS_NXM_1_BY_VERSION(version) (0x1)
#define OF_OXM_CLASS_NXM_1_GENERIC 513

/*
 * Defines for OF_OXM_CLASS_OPENFLOW_BASIC
 * Original name OFPXMC_OPENFLOW_BASIC
 */
#define OF_OXM_CLASS_OPENFLOW_BASIC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OXM_CLASS_OPENFLOW_BASIC (0x8000)
#define OF_OXM_CLASS_OPENFLOW_BASIC_BY_VERSION(version) (0x8000)
#define OF_OXM_CLASS_OPENFLOW_BASIC_GENERIC 514

/****************************************************************
 * Identifiers from ofp_packet_in_reason
 *****************************************************************/

/*
 * Defines for OF_PACKET_IN_REASON_ACTION
 * Original name OFPR_ACTION
 */
#define OF_PACKET_IN_REASON_ACTION_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PACKET_IN_REASON_ACTION (0x1)
#define OF_PACKET_IN_REASON_ACTION_BY_VERSION(version) (0x1)
#define OF_PACKET_IN_REASON_ACTION_GENERIC 515

/*
 * Defines for OF_PACKET_IN_REASON_ACTION_SET
 * Original name OFPR_ACTION_SET
 */
#define OF_PACKET_IN_REASON_ACTION_SET_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_ACTION_SET (0x3)
#define OF_PACKET_IN_REASON_ACTION_SET_BY_VERSION(version) (0x3)
#define OF_PACKET_IN_REASON_ACTION_SET_GENERIC 516

/*
 * Defines for OF_PACKET_IN_REASON_BSN_ARP
 * Original name OFPR_BSN_ARP
 */
#define OF_PACKET_IN_REASON_BSN_ARP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_ARP (0x8b)
#define OF_PACKET_IN_REASON_BSN_ARP_BY_VERSION(version) (0x8b)
#define OF_PACKET_IN_REASON_BSN_ARP_GENERIC 517

/*
 * Defines for OF_PACKET_IN_REASON_BSN_BAD_VLAN
 * Original name OFPR_BSN_BAD_VLAN
 */
#define OF_PACKET_IN_REASON_BSN_BAD_VLAN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_BAD_VLAN (0x82)
#define OF_PACKET_IN_REASON_BSN_BAD_VLAN_BY_VERSION(version) (0x82)
#define OF_PACKET_IN_REASON_BSN_BAD_VLAN_GENERIC 518

/*
 * Defines for OF_PACKET_IN_REASON_BSN_DEBUG
 * Original name OFPR_BSN_DEBUG
 */
#define OF_PACKET_IN_REASON_BSN_DEBUG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_DEBUG (0x8d)
#define OF_PACKET_IN_REASON_BSN_DEBUG_BY_VERSION(version) (0x8d)
#define OF_PACKET_IN_REASON_BSN_DEBUG_GENERIC 519

/*
 * Defines for OF_PACKET_IN_REASON_BSN_DESTINATION_LOOKUP_FAILURE
 * Original name OFPR_BSN_DESTINATION_LOOKUP_FAILURE
 */
#define OF_PACKET_IN_REASON_BSN_DESTINATION_LOOKUP_FAILURE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_DESTINATION_LOOKUP_FAILURE (0x83)
#define OF_PACKET_IN_REASON_BSN_DESTINATION_LOOKUP_FAILURE_BY_VERSION(version) (0x83)
#define OF_PACKET_IN_REASON_BSN_DESTINATION_LOOKUP_FAILURE_GENERIC 520

/*
 * Defines for OF_PACKET_IN_REASON_BSN_DEST_HOST_UNREACHABLE
 * Original name OFPR_BSN_DEST_HOST_UNREACHABLE
 */
#define OF_PACKET_IN_REASON_BSN_DEST_HOST_UNREACHABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_DEST_HOST_UNREACHABLE (0x87)
#define OF_PACKET_IN_REASON_BSN_DEST_HOST_UNREACHABLE_BY_VERSION(version) (0x87)
#define OF_PACKET_IN_REASON_BSN_DEST_HOST_UNREACHABLE_GENERIC 521

/*
 * Defines for OF_PACKET_IN_REASON_BSN_DEST_NETWORK_UNREACHABLE
 * Original name OFPR_BSN_DEST_NETWORK_UNREACHABLE
 */
#define OF_PACKET_IN_REASON_BSN_DEST_NETWORK_UNREACHABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_DEST_NETWORK_UNREACHABLE (0x86)
#define OF_PACKET_IN_REASON_BSN_DEST_NETWORK_UNREACHABLE_BY_VERSION(version) (0x86)
#define OF_PACKET_IN_REASON_BSN_DEST_NETWORK_UNREACHABLE_GENERIC 522

/*
 * Defines for OF_PACKET_IN_REASON_BSN_DEST_PORT_UNREACHABLE
 * Original name OFPR_BSN_DEST_PORT_UNREACHABLE
 */
#define OF_PACKET_IN_REASON_BSN_DEST_PORT_UNREACHABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_DEST_PORT_UNREACHABLE (0x88)
#define OF_PACKET_IN_REASON_BSN_DEST_PORT_UNREACHABLE_BY_VERSION(version) (0x88)
#define OF_PACKET_IN_REASON_BSN_DEST_PORT_UNREACHABLE_GENERIC 523

/*
 * Defines for OF_PACKET_IN_REASON_BSN_DHCP
 * Original name OFPR_BSN_DHCP
 */
#define OF_PACKET_IN_REASON_BSN_DHCP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_DHCP (0x8c)
#define OF_PACKET_IN_REASON_BSN_DHCP_BY_VERSION(version) (0x8c)
#define OF_PACKET_IN_REASON_BSN_DHCP_GENERIC 524

/*
 * Defines for OF_PACKET_IN_REASON_BSN_FRAGMENTATION_REQUIRED
 * Original name OFPR_BSN_FRAGMENTATION_REQUIRED
 */
#define OF_PACKET_IN_REASON_BSN_FRAGMENTATION_REQUIRED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_FRAGMENTATION_REQUIRED (0x89)
#define OF_PACKET_IN_REASON_BSN_FRAGMENTATION_REQUIRED_BY_VERSION(version) (0x89)
#define OF_PACKET_IN_REASON_BSN_FRAGMENTATION_REQUIRED_GENERIC 525

/*
 * Defines for OF_PACKET_IN_REASON_BSN_ICMP_ECHO_REQUEST
 * Original name OFPR_BSN_ICMP_ECHO_REQUEST
 */
#define OF_PACKET_IN_REASON_BSN_ICMP_ECHO_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_ICMP_ECHO_REQUEST (0x85)
#define OF_PACKET_IN_REASON_BSN_ICMP_ECHO_REQUEST_BY_VERSION(version) (0x85)
#define OF_PACKET_IN_REASON_BSN_ICMP_ECHO_REQUEST_GENERIC 526

/*
 * Defines for OF_PACKET_IN_REASON_BSN_NEW_HOST
 * Original name OFPR_BSN_NEW_HOST
 */
#define OF_PACKET_IN_REASON_BSN_NEW_HOST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_NEW_HOST (0x80)
#define OF_PACKET_IN_REASON_BSN_NEW_HOST_BY_VERSION(version) (0x80)
#define OF_PACKET_IN_REASON_BSN_NEW_HOST_GENERIC 527

/*
 * Defines for OF_PACKET_IN_REASON_BSN_NO_ROUTE
 * Original name OFPR_BSN_NO_ROUTE
 */
#define OF_PACKET_IN_REASON_BSN_NO_ROUTE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_NO_ROUTE (0x84)
#define OF_PACKET_IN_REASON_BSN_NO_ROUTE_BY_VERSION(version) (0x84)
#define OF_PACKET_IN_REASON_BSN_NO_ROUTE_GENERIC 528

/*
 * Defines for OF_PACKET_IN_REASON_BSN_PACKET_OF_DEATH
 * Original name OFPR_BSN_PACKET_OF_DEATH
 */
#define OF_PACKET_IN_REASON_BSN_PACKET_OF_DEATH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_PACKET_OF_DEATH (0x8e)
#define OF_PACKET_IN_REASON_BSN_PACKET_OF_DEATH_BY_VERSION(version) (0x8e)
#define OF_PACKET_IN_REASON_BSN_PACKET_OF_DEATH_GENERIC 529

/*
 * Defines for OF_PACKET_IN_REASON_BSN_STATION_MOVE
 * Original name OFPR_BSN_STATION_MOVE
 */
#define OF_PACKET_IN_REASON_BSN_STATION_MOVE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_BSN_STATION_MOVE (0x81)
#define OF_PACKET_IN_REASON_BSN_STATION_MOVE_BY_VERSION(version) (0x81)
#define OF_PACKET_IN_REASON_BSN_STATION_MOVE_GENERIC 530

/*
 * Defines for OF_PACKET_IN_REASON_GROUP
 * Original name OFPR_GROUP
 */
#define OF_PACKET_IN_REASON_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_GROUP (0x4)
#define OF_PACKET_IN_REASON_GROUP_BY_VERSION(version) (0x4)
#define OF_PACKET_IN_REASON_GROUP_GENERIC 531

/*
 * Defines for OF_PACKET_IN_REASON_INVALID_TTL
 * Original name OFPR_INVALID_TTL
 */
#define OF_PACKET_IN_REASON_INVALID_TTL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_INVALID_TTL (0x2)
#define OF_PACKET_IN_REASON_INVALID_TTL_BY_VERSION(version) (0x2)
#define OF_PACKET_IN_REASON_INVALID_TTL_GENERIC 532

/*
 * Defines for OF_PACKET_IN_REASON_NO_MATCH
 * Original name OFPR_NO_MATCH
 */
#define OF_PACKET_IN_REASON_NO_MATCH_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PACKET_IN_REASON_NO_MATCH (0x0)
#define OF_PACKET_IN_REASON_NO_MATCH_BY_VERSION(version) (0x0)
#define OF_PACKET_IN_REASON_NO_MATCH_GENERIC 533

/*
 * Defines for OF_PACKET_IN_REASON_PACKET_OUT
 * Original name OFPR_PACKET_OUT
 */
#define OF_PACKET_IN_REASON_PACKET_OUT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_PACKET_IN_REASON_PACKET_OUT (0x5)
#define OF_PACKET_IN_REASON_PACKET_OUT_BY_VERSION(version) (0x5)
#define OF_PACKET_IN_REASON_PACKET_OUT_GENERIC 534

/****************************************************************
 * Identifiers from ofp_port
 *****************************************************************/

/*
 * Defines for OF_PORT_DEST_ALL
 * Original name OFPP_ALL
 */
#define OF_PORT_DEST_ALL_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_ALL (0xfffffffc)
#define OF_PORT_DEST_ALL_BY_VERSION(version) (0xfffffffc)
#define OF_PORT_DEST_ALL_GENERIC 535

/*
 * Defines for OF_PORT_DEST_CONTROLLER
 * Original name OFPP_CONTROLLER
 */
#define OF_PORT_DEST_CONTROLLER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_CONTROLLER (0xfffffffd)
#define OF_PORT_DEST_CONTROLLER_BY_VERSION(version) (0xfffffffd)
#define OF_PORT_DEST_CONTROLLER_GENERIC 536

/*
 * Defines for OF_PORT_DEST_FLOOD
 * Original name OFPP_FLOOD
 */
#define OF_PORT_DEST_FLOOD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_FLOOD (0xfffffffb)
#define OF_PORT_DEST_FLOOD_BY_VERSION(version) (0xfffffffb)
#define OF_PORT_DEST_FLOOD_GENERIC 537

/*
 * Defines for OF_PORT_DEST_IN_PORT
 * Original name OFPP_IN_PORT
 */
#define OF_PORT_DEST_IN_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_IN_PORT (0xfffffff8)
#define OF_PORT_DEST_IN_PORT_BY_VERSION(version) (0xfffffff8)
#define OF_PORT_DEST_IN_PORT_GENERIC 538

/*
 * Defines for OF_PORT_DEST_LOCAL
 * Original name OFPP_LOCAL
 */
#define OF_PORT_DEST_LOCAL_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_LOCAL (0xfffffffe)
#define OF_PORT_DEST_LOCAL_BY_VERSION(version) (0xfffffffe)
#define OF_PORT_DEST_LOCAL_GENERIC 539

/*
 * Defines for OF_PORT_DEST_NONE
 * Original name OFPP_NONE
 */
#define OF_PORT_DEST_NONE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_DEST_NONE (0xffffffff)
#define OF_PORT_DEST_NONE_BY_VERSION(version) (0xffffffff)
#define OF_PORT_DEST_NONE_GENERIC 540

/*
 * Defines for OF_PORT_DEST_NORMAL
 * Original name OFPP_NORMAL
 */
#define OF_PORT_DEST_NORMAL_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_NORMAL (0xfffffffa)
#define OF_PORT_DEST_NORMAL_BY_VERSION(version) (0xfffffffa)
#define OF_PORT_DEST_NORMAL_GENERIC 541

/*
 * Defines for OF_PORT_DEST_USE_TABLE
 * Original name OFPP_TABLE
 */
#define OF_PORT_DEST_USE_TABLE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_DEST_USE_TABLE (0xfffffff9)
#define OF_PORT_DEST_USE_TABLE_BY_VERSION(version) (0xfffffff9)
#define OF_PORT_DEST_USE_TABLE_GENERIC 542

/*
 * Defines for OF_PORT_DEST_WILDCARD
 * Original name OFPP_ANY
 */
#define OF_PORT_DEST_WILDCARD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PORT_DEST_WILDCARD (0xffffffff)
#define OF_PORT_DEST_WILDCARD_BY_VERSION(version) (0xffffffff)
#define OF_PORT_DEST_WILDCARD_GENERIC 543

/*
 * Defines for OF_PORT_NUMBER_MAX
 * Original name OFPP_MAX
 */
#define OF_PORT_NUMBER_MAX_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_NUMBER_MAX (0xffffff00)
#define OF_PORT_NUMBER_MAX_BY_VERSION(version) (0xffffff00)
#define OF_PORT_NUMBER_MAX_GENERIC 544

/****************************************************************
 * Identifiers from ofp_port_config
 *****************************************************************/

/*
 * Defines for OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST
 * Original name OFPPC_BSN_MIRROR_DEST
 */
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST (0x80000000)
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_BY_VERSION(version) (0x80000000)

#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_BSN_MIRROR_DEST_GENERIC 545

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_FLOOD
 * Original name OFPPC_NO_FLOOD
 */
#define OF_PORT_CONFIG_FLAG_NO_FLOOD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_CONFIG_FLAG_NO_FLOOD (0x10)
#define OF_PORT_CONFIG_FLAG_NO_FLOOD_BY_VERSION(version) (0x10)

#define OF_PORT_CONFIG_FLAG_NO_FLOOD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_FLOOD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FLOOD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_FLOOD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FLOOD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_FLOOD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FLOOD_GENERIC 546

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_FWD
 * Original name OFPPC_NO_FWD
 */
#define OF_PORT_CONFIG_FLAG_NO_FWD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CONFIG_FLAG_NO_FWD (0x20)
#define OF_PORT_CONFIG_FLAG_NO_FWD_BY_VERSION(version) (0x20)

#define OF_PORT_CONFIG_FLAG_NO_FWD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_FWD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FWD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_FWD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FWD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_FWD_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_FWD_GENERIC 547

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_PACKET_IN
 * Original name OFPPC_NO_PACKET_IN
 */
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN (0x40)
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_BY_VERSION(version) (0x40)

#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_PACKET_IN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_PACKET_IN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_PACKET_IN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_PACKET_IN_GENERIC 548

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_RECV
 * Original name OFPPC_NO_RECV
 */
#define OF_PORT_CONFIG_FLAG_NO_RECV_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CONFIG_FLAG_NO_RECV (0x4)
#define OF_PORT_CONFIG_FLAG_NO_RECV_BY_VERSION(version) (0x4)

#define OF_PORT_CONFIG_FLAG_NO_RECV_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_RECV_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_RECV_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_RECV_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_GENERIC 549

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_RECV_STP
 * Original name OFPPC_NO_RECV_STP
 */
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP (0x8)
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_BY_VERSION(version) (0x8)

#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_RECV_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_RECV_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_RECV_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_RECV_STP_GENERIC 550

/*
 * Defines for OF_PORT_CONFIG_FLAG_NO_STP
 * Original name OFPPC_NO_STP
 */
#define OF_PORT_CONFIG_FLAG_NO_STP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_CONFIG_FLAG_NO_STP (0x2)
#define OF_PORT_CONFIG_FLAG_NO_STP_BY_VERSION(version) (0x2)

#define OF_PORT_CONFIG_FLAG_NO_STP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_NO_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_STP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_NO_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_STP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_NO_STP_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_NO_STP_GENERIC 551

/*
 * Defines for OF_PORT_CONFIG_FLAG_PORT_DOWN
 * Original name OFPPC_PORT_DOWN
 */
#define OF_PORT_CONFIG_FLAG_PORT_DOWN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CONFIG_FLAG_PORT_DOWN (0x1)
#define OF_PORT_CONFIG_FLAG_PORT_DOWN_BY_VERSION(version) (0x1)

#define OF_PORT_CONFIG_FLAG_PORT_DOWN_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_CONFIG_FLAG_PORT_DOWN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_PORT_DOWN_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_CONFIG_FLAG_PORT_DOWN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_PORT_DOWN_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_CONFIG_FLAG_PORT_DOWN_BY_VERSION(version))
#define OF_PORT_CONFIG_FLAG_PORT_DOWN_GENERIC 552

/****************************************************************
 * Identifiers from ofp_port_features
 *****************************************************************/

/*
 * Defines for OF_PORT_FEATURE_FLAG_100GB_FD
 * Original name OFPPF_100GB_FD
 */
#define OF_PORT_FEATURE_FLAG_100GB_FD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PORT_FEATURE_FLAG_100GB_FD (0x100)
#define OF_PORT_FEATURE_FLAG_100GB_FD_BY_VERSION(version) (0x100)

#define OF_PORT_FEATURE_FLAG_100GB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_100GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100GB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_100GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100GB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_100GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100GB_FD_GENERIC 553

/*
 * Defines for OF_PORT_FEATURE_FLAG_100MB_FD
 * Original name OFPPF_100MB_FD
 */
#define OF_PORT_FEATURE_FLAG_100MB_FD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_100MB_FD (0x8)
#define OF_PORT_FEATURE_FLAG_100MB_FD_BY_VERSION(version) (0x8)

#define OF_PORT_FEATURE_FLAG_100MB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_100MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_100MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_100MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_FD_GENERIC 554

/*
 * Defines for OF_PORT_FEATURE_FLAG_100MB_HD
 * Original name OFPPF_100MB_HD
 */
#define OF_PORT_FEATURE_FLAG_100MB_HD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_100MB_HD (0x4)
#define OF_PORT_FEATURE_FLAG_100MB_HD_BY_VERSION(version) (0x4)

#define OF_PORT_FEATURE_FLAG_100MB_HD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_100MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_HD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_100MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_HD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_100MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_100MB_HD_GENERIC 555

/*
 * Defines for OF_PORT_FEATURE_FLAG_10GB_FD
 * Original name OFPPF_10GB_FD
 */
#define OF_PORT_FEATURE_FLAG_10GB_FD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_10GB_FD (0x40)
#define OF_PORT_FEATURE_FLAG_10GB_FD_BY_VERSION(version) (0x40)

#define OF_PORT_FEATURE_FLAG_10GB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_10GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10GB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_10GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10GB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_10GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10GB_FD_GENERIC 556

/*
 * Defines for OF_PORT_FEATURE_FLAG_10MB_FD
 * Original name OFPPF_10MB_FD
 */
#define OF_PORT_FEATURE_FLAG_10MB_FD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_10MB_FD (0x2)
#define OF_PORT_FEATURE_FLAG_10MB_FD_BY_VERSION(version) (0x2)

#define OF_PORT_FEATURE_FLAG_10MB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_10MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_10MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_10MB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_FD_GENERIC 557

/*
 * Defines for OF_PORT_FEATURE_FLAG_10MB_HD
 * Original name OFPPF_10MB_HD
 */
#define OF_PORT_FEATURE_FLAG_10MB_HD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_10MB_HD (0x1)
#define OF_PORT_FEATURE_FLAG_10MB_HD_BY_VERSION(version) (0x1)

#define OF_PORT_FEATURE_FLAG_10MB_HD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_10MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_HD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_10MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_HD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_10MB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_10MB_HD_GENERIC 558

/*
 * Defines for OF_PORT_FEATURE_FLAG_1GB_FD
 * Original name OFPPF_1GB_FD
 */
#define OF_PORT_FEATURE_FLAG_1GB_FD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_1GB_FD (0x20)
#define OF_PORT_FEATURE_FLAG_1GB_FD_BY_VERSION(version) (0x20)

#define OF_PORT_FEATURE_FLAG_1GB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_1GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_1GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_1GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_FD_GENERIC 559

/*
 * Defines for OF_PORT_FEATURE_FLAG_1GB_HD
 * Original name OFPPF_1GB_HD
 */
#define OF_PORT_FEATURE_FLAG_1GB_HD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_1GB_HD (0x10)
#define OF_PORT_FEATURE_FLAG_1GB_HD_BY_VERSION(version) (0x10)

#define OF_PORT_FEATURE_FLAG_1GB_HD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_1GB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_HD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_1GB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_HD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_1GB_HD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1GB_HD_GENERIC 560

/*
 * Defines for OF_PORT_FEATURE_FLAG_1TB_FD
 * Original name OFPPF_1TB_FD
 */
#define OF_PORT_FEATURE_FLAG_1TB_FD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PORT_FEATURE_FLAG_1TB_FD (0x200)
#define OF_PORT_FEATURE_FLAG_1TB_FD_BY_VERSION(version) (0x200)

#define OF_PORT_FEATURE_FLAG_1TB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_1TB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1TB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_1TB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1TB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_1TB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_1TB_FD_GENERIC 561

/*
 * Defines for OF_PORT_FEATURE_FLAG_40GB_FD
 * Original name OFPPF_40GB_FD
 */
#define OF_PORT_FEATURE_FLAG_40GB_FD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PORT_FEATURE_FLAG_40GB_FD (0x80)
#define OF_PORT_FEATURE_FLAG_40GB_FD_BY_VERSION(version) (0x80)

#define OF_PORT_FEATURE_FLAG_40GB_FD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_40GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_40GB_FD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_40GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_40GB_FD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_40GB_FD_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_40GB_FD_GENERIC 562

/*
 * Defines for OF_PORT_FEATURE_FLAG_AUTONEG
 * Original name OFPPF_AUTONEG
 */
#define OF_PORT_FEATURE_FLAG_AUTONEG_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_AUTONEG_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x200, 0x2000, 0x2000, 0x2000, 0x2000)

#define OF_PORT_FEATURE_FLAG_AUTONEG_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_AUTONEG_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_AUTONEG_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_AUTONEG_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_AUTONEG_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_AUTONEG_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_AUTONEG_GENERIC 563

/*
 * Defines for OF_PORT_FEATURE_FLAG_BSN_BREAKOUT_CAPABLE
 * Original name OFPPF_BSN_BREAKOUT_CAPABLE
 */
#define OF_PORT_FEATURE_FLAG_BSN_BREAKOUT_CAPABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PORT_FEATURE_FLAG_BSN_BREAKOUT_CAPABLE (0x80000000)
#define OF_PORT_FEATURE_FLAG_BSN_BREAKOUT_CAPABLE_BY_VERSION(version) (0x80000000)

#define OF_PORT_FEATURE_FLAG_BSN_BREAKOUT_CAPABLE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_BSN_BREAKOUT_CAPABLE_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_BSN_BREAKOUT_CAPABLE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_BSN_BREAKOUT_CAPABLE_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_BSN_BREAKOUT_CAPABLE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_BSN_BREAKOUT_CAPABLE_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_BSN_BREAKOUT_CAPABLE_GENERIC 564

/*
 * Defines for OF_PORT_FEATURE_FLAG_COPPER
 * Original name OFPPF_COPPER
 */
#define OF_PORT_FEATURE_FLAG_COPPER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_COPPER_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x80, 0x800, 0x800, 0x800, 0x800)

#define OF_PORT_FEATURE_FLAG_COPPER_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_COPPER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_COPPER_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_COPPER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_COPPER_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_COPPER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_COPPER_GENERIC 565

/*
 * Defines for OF_PORT_FEATURE_FLAG_FIBER
 * Original name OFPPF_FIBER
 */
#define OF_PORT_FEATURE_FLAG_FIBER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_FIBER_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x100, 0x1000, 0x1000, 0x1000, 0x1000)

#define OF_PORT_FEATURE_FLAG_FIBER_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_FIBER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_FIBER_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_FIBER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_FIBER_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_FIBER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_FIBER_GENERIC 566

/*
 * Defines for OF_PORT_FEATURE_FLAG_OTHER
 * Original name OFPPF_OTHER
 */
#define OF_PORT_FEATURE_FLAG_OTHER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PORT_FEATURE_FLAG_OTHER (0x400)
#define OF_PORT_FEATURE_FLAG_OTHER_BY_VERSION(version) (0x400)

#define OF_PORT_FEATURE_FLAG_OTHER_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_OTHER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_OTHER_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_OTHER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_OTHER_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_OTHER_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_OTHER_GENERIC 567

/*
 * Defines for OF_PORT_FEATURE_FLAG_PAUSE
 * Original name OFPPF_PAUSE
 */
#define OF_PORT_FEATURE_FLAG_PAUSE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_PAUSE_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x400, 0x4000, 0x4000, 0x4000, 0x4000)

#define OF_PORT_FEATURE_FLAG_PAUSE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_PAUSE_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_PAUSE_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_PAUSE_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_GENERIC 568

/*
 * Defines for OF_PORT_FEATURE_FLAG_PAUSE_ASYM
 * Original name OFPPF_PAUSE_ASYM
 */
#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x800, 0x8000, 0x8000, 0x8000, 0x8000)

#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_FEATURE_FLAG_PAUSE_ASYM_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_FEATURE_FLAG_PAUSE_ASYM_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_FEATURE_FLAG_PAUSE_ASYM_BY_VERSION(version))
#define OF_PORT_FEATURE_FLAG_PAUSE_ASYM_GENERIC 569

/****************************************************************
 * Identifiers from ofp_port_mod_failed_code
 *****************************************************************/

/*
 * Defines for OF_PORT_MOD_FAILED_BAD_ADVERTISE
 * Original name OFPPMFC_BAD_ADVERTISE
 */
#define OF_PORT_MOD_FAILED_BAD_ADVERTISE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PORT_MOD_FAILED_BAD_ADVERTISE (0x3)
#define OF_PORT_MOD_FAILED_BAD_ADVERTISE_BY_VERSION(version) (0x3)
#define OF_PORT_MOD_FAILED_BAD_ADVERTISE_GENERIC 570

/*
 * Defines for OF_PORT_MOD_FAILED_BAD_CONFIG
 * Original name OFPPMFC_BAD_CONFIG
 */
#define OF_PORT_MOD_FAILED_BAD_CONFIG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PORT_MOD_FAILED_BAD_CONFIG (0x2)
#define OF_PORT_MOD_FAILED_BAD_CONFIG_BY_VERSION(version) (0x2)
#define OF_PORT_MOD_FAILED_BAD_CONFIG_GENERIC 571

/*
 * Defines for OF_PORT_MOD_FAILED_BAD_HW_ADDR
 * Original name OFPPMFC_BAD_HW_ADDR
 */
#define OF_PORT_MOD_FAILED_BAD_HW_ADDR_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_MOD_FAILED_BAD_HW_ADDR (0x1)
#define OF_PORT_MOD_FAILED_BAD_HW_ADDR_BY_VERSION(version) (0x1)
#define OF_PORT_MOD_FAILED_BAD_HW_ADDR_GENERIC 572

/*
 * Defines for OF_PORT_MOD_FAILED_BAD_PORT
 * Original name OFPPMFC_BAD_PORT
 */
#define OF_PORT_MOD_FAILED_BAD_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_MOD_FAILED_BAD_PORT (0x0)
#define OF_PORT_MOD_FAILED_BAD_PORT_BY_VERSION(version) (0x0)
#define OF_PORT_MOD_FAILED_BAD_PORT_GENERIC 573

/*
 * Defines for OF_PORT_MOD_FAILED_EPERM
 * Original name OFPPMFC_EPERM
 */
#define OF_PORT_MOD_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PORT_MOD_FAILED_EPERM (0x4)
#define OF_PORT_MOD_FAILED_EPERM_BY_VERSION(version) (0x4)
#define OF_PORT_MOD_FAILED_EPERM_GENERIC 574

/****************************************************************
 * Identifiers from ofp_port_reason
 *****************************************************************/

/*
 * Defines for OF_PORT_CHANGE_REASON_ADD
 * Original name OFPPR_ADD
 */
#define OF_PORT_CHANGE_REASON_ADD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CHANGE_REASON_ADD (0x0)
#define OF_PORT_CHANGE_REASON_ADD_BY_VERSION(version) (0x0)
#define OF_PORT_CHANGE_REASON_ADD_GENERIC 575

/*
 * Defines for OF_PORT_CHANGE_REASON_DELETE
 * Original name OFPPR_DELETE
 */
#define OF_PORT_CHANGE_REASON_DELETE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CHANGE_REASON_DELETE (0x1)
#define OF_PORT_CHANGE_REASON_DELETE_BY_VERSION(version) (0x1)
#define OF_PORT_CHANGE_REASON_DELETE_GENERIC 576

/*
 * Defines for OF_PORT_CHANGE_REASON_MODIFY
 * Original name OFPPR_MODIFY
 */
#define OF_PORT_CHANGE_REASON_MODIFY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_CHANGE_REASON_MODIFY (0x2)
#define OF_PORT_CHANGE_REASON_MODIFY_BY_VERSION(version) (0x2)
#define OF_PORT_CHANGE_REASON_MODIFY_GENERIC 577

/****************************************************************
 * Identifiers from ofp_port_state
 *****************************************************************/

/*
 * Defines for OF_PORT_STATE_FLAG_BLOCKED
 * Original name OFPPS_BLOCKED
 */
#define OF_PORT_STATE_FLAG_BLOCKED_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PORT_STATE_FLAG_BLOCKED (0x2)
#define OF_PORT_STATE_FLAG_BLOCKED_BY_VERSION(version) (0x2)

#define OF_PORT_STATE_FLAG_BLOCKED_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_BLOCKED_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_BLOCKED_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_BLOCKED_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_BLOCKED_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_BLOCKED_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_BLOCKED_GENERIC 578

/*
 * Defines for OF_PORT_STATE_FLAG_LINK_DOWN
 * Original name OFPPS_LINK_DOWN
 */
#define OF_PORT_STATE_FLAG_LINK_DOWN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_PORT_STATE_FLAG_LINK_DOWN (0x1)
#define OF_PORT_STATE_FLAG_LINK_DOWN_BY_VERSION(version) (0x1)

#define OF_PORT_STATE_FLAG_LINK_DOWN_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_LINK_DOWN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LINK_DOWN_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_LINK_DOWN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LINK_DOWN_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_LINK_DOWN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LINK_DOWN_GENERIC 579

/*
 * Defines for OF_PORT_STATE_FLAG_LIVE
 * Original name OFPPS_LIVE
 */
#define OF_PORT_STATE_FLAG_LIVE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_PORT_STATE_FLAG_LIVE (0x4)
#define OF_PORT_STATE_FLAG_LIVE_BY_VERSION(version) (0x4)

#define OF_PORT_STATE_FLAG_LIVE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_LIVE_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LIVE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_LIVE_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LIVE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_LIVE_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_LIVE_GENERIC 580

/*
 * Defines for OF_PORT_STATE_FLAG_STP_BLOCK
 * Original name OFPPS_STP_BLOCK
 */
#define OF_PORT_STATE_FLAG_STP_BLOCK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_STATE_FLAG_STP_BLOCK (0x300)
#define OF_PORT_STATE_FLAG_STP_BLOCK_BY_VERSION(version) (0x300)

#define OF_PORT_STATE_FLAG_STP_BLOCK_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_STP_BLOCK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_BLOCK_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_STP_BLOCK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_BLOCK_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_STP_BLOCK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_BLOCK_GENERIC 581

/*
 * Defines for OF_PORT_STATE_FLAG_STP_FORWARD
 * Original name OFPPS_STP_FORWARD
 */
#define OF_PORT_STATE_FLAG_STP_FORWARD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_STATE_FLAG_STP_FORWARD (0x200)
#define OF_PORT_STATE_FLAG_STP_FORWARD_BY_VERSION(version) (0x200)

#define OF_PORT_STATE_FLAG_STP_FORWARD_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_STP_FORWARD_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_FORWARD_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_STP_FORWARD_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_FORWARD_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_STP_FORWARD_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_FORWARD_GENERIC 582

/*
 * Defines for OF_PORT_STATE_FLAG_STP_LEARN
 * Original name OFPPS_STP_LEARN
 */
#define OF_PORT_STATE_FLAG_STP_LEARN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_STATE_FLAG_STP_LEARN (0x100)
#define OF_PORT_STATE_FLAG_STP_LEARN_BY_VERSION(version) (0x100)

#define OF_PORT_STATE_FLAG_STP_LEARN_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_STP_LEARN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_LEARN_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_STP_LEARN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_LEARN_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_STP_LEARN_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_LEARN_GENERIC 583

/*
 * Defines for OF_PORT_STATE_FLAG_STP_LISTEN
 * Original name OFPPS_STP_LISTEN
 */
#define OF_PORT_STATE_FLAG_STP_LISTEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_STATE_FLAG_STP_LISTEN (0x0)
#define OF_PORT_STATE_FLAG_STP_LISTEN_BY_VERSION(version) (0x0)
#define OF_PORT_STATE_FLAG_STP_LISTEN_GENERIC 584

/*
 * Defines for OF_PORT_STATE_FLAG_STP_MASK
 * Original name OFPPS_STP_MASK
 */
#define OF_PORT_STATE_FLAG_STP_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0))
#define OF_PORT_STATE_FLAG_STP_MASK (0x300)
#define OF_PORT_STATE_FLAG_STP_MASK_BY_VERSION(version) (0x300)

#define OF_PORT_STATE_FLAG_STP_MASK_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_PORT_STATE_FLAG_STP_MASK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_MASK_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_PORT_STATE_FLAG_STP_MASK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_MASK_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_PORT_STATE_FLAG_STP_MASK_BY_VERSION(version))
#define OF_PORT_STATE_FLAG_STP_MASK_GENERIC 585

/****************************************************************
 * Identifiers from ofp_port_stats_optical_flags
 *****************************************************************/

/*
 * Defines for OFPOSF_RX_PWR
 * Original name OFPOSF_RX_PWR
 */
#define OFPOSF_RX_PWR_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPOSF_RX_PWR (0x10)
#define OFPOSF_RX_PWR_BY_VERSION(version) (0x10)
#define OFPOSF_RX_PWR_GENERIC 586

/*
 * Defines for OFPOSF_RX_TUNE
 * Original name OFPOSF_RX_TUNE
 */
#define OFPOSF_RX_TUNE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPOSF_RX_TUNE (0x1)
#define OFPOSF_RX_TUNE_BY_VERSION(version) (0x1)
#define OFPOSF_RX_TUNE_GENERIC 587

/*
 * Defines for OFPOSF_TX_BIAS
 * Original name OFPOSF_TX_BIAS
 */
#define OFPOSF_TX_BIAS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPOSF_TX_BIAS (0x20)
#define OFPOSF_TX_BIAS_BY_VERSION(version) (0x20)
#define OFPOSF_TX_BIAS_GENERIC 588

/*
 * Defines for OFPOSF_TX_PWR
 * Original name OFPOSF_TX_PWR
 */
#define OFPOSF_TX_PWR_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPOSF_TX_PWR (0x4)
#define OFPOSF_TX_PWR_BY_VERSION(version) (0x4)
#define OFPOSF_TX_PWR_GENERIC 589

/*
 * Defines for OFPOSF_TX_TEMP
 * Original name OFPOSF_TX_TEMP
 */
#define OFPOSF_TX_TEMP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPOSF_TX_TEMP (0x40)
#define OFPOSF_TX_TEMP_BY_VERSION(version) (0x40)
#define OFPOSF_TX_TEMP_GENERIC 590

/*
 * Defines for OFPOSF_TX_TUNE
 * Original name OFPOSF_TX_TUNE
 */
#define OFPOSF_TX_TUNE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPOSF_TX_TUNE (0x2)
#define OFPOSF_TX_TUNE_BY_VERSION(version) (0x2)
#define OFPOSF_TX_TUNE_GENERIC 591

/****************************************************************
 * Identifiers from ofp_port_stats_prop_type
 *****************************************************************/

/*
 * Defines for OFPPSPT_ETHERNET
 * Original name OFPPSPT_ETHERNET
 */
#define OFPPSPT_ETHERNET_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPPSPT_ETHERNET (0x0)
#define OFPPSPT_ETHERNET_BY_VERSION(version) (0x0)
#define OFPPSPT_ETHERNET_GENERIC 592

/*
 * Defines for OFPPSPT_EXPERIMENTER
 * Original name OFPPSPT_EXPERIMENTER
 */
#define OFPPSPT_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPPSPT_EXPERIMENTER (0xffff)
#define OFPPSPT_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OFPPSPT_EXPERIMENTER_GENERIC 593

/*
 * Defines for OFPPSPT_OPTICAL
 * Original name OFPPSPT_OPTICAL
 */
#define OFPPSPT_OPTICAL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPPSPT_OPTICAL (0x1)
#define OFPPSPT_OPTICAL_BY_VERSION(version) (0x1)
#define OFPPSPT_OPTICAL_GENERIC 594

/****************************************************************
 * Identifiers from ofp_queue_op_failed_code
 *****************************************************************/

/*
 * Defines for OF_QUEUE_OP_FAILED_BAD_PORT
 * Original name OFPQOFC_BAD_PORT
 */
#define OF_QUEUE_OP_FAILED_BAD_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_QUEUE_OP_FAILED_BAD_PORT (0x0)
#define OF_QUEUE_OP_FAILED_BAD_PORT_BY_VERSION(version) (0x0)
#define OF_QUEUE_OP_FAILED_BAD_PORT_GENERIC 595

/*
 * Defines for OF_QUEUE_OP_FAILED_BAD_QUEUE
 * Original name OFPQOFC_BAD_QUEUE
 */
#define OF_QUEUE_OP_FAILED_BAD_QUEUE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_QUEUE_OP_FAILED_BAD_QUEUE (0x1)
#define OF_QUEUE_OP_FAILED_BAD_QUEUE_BY_VERSION(version) (0x1)
#define OF_QUEUE_OP_FAILED_BAD_QUEUE_GENERIC 596

/*
 * Defines for OF_QUEUE_OP_FAILED_EPERM
 * Original name OFPQOFC_EPERM
 */
#define OF_QUEUE_OP_FAILED_EPERM_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_QUEUE_OP_FAILED_EPERM (0x2)
#define OF_QUEUE_OP_FAILED_EPERM_BY_VERSION(version) (0x2)
#define OF_QUEUE_OP_FAILED_EPERM_GENERIC 597

/****************************************************************
 * Identifiers from ofp_queue_properties
 *****************************************************************/

/*
 * Defines for OF_QUEUE_PROPERTY_EXPERIMENTER
 * Original name OFPQT_EXPERIMENTER
 */
#define OF_QUEUE_PROPERTY_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_QUEUE_PROPERTY_EXPERIMENTER (0xffff)
#define OF_QUEUE_PROPERTY_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_QUEUE_PROPERTY_EXPERIMENTER_GENERIC 598

/*
 * Defines for OF_QUEUE_PROPERTY_MAX_RATE
 * Original name OFPQT_MAX_RATE
 */
#define OF_QUEUE_PROPERTY_MAX_RATE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_QUEUE_PROPERTY_MAX_RATE (0x2)
#define OF_QUEUE_PROPERTY_MAX_RATE_BY_VERSION(version) (0x2)
#define OF_QUEUE_PROPERTY_MAX_RATE_GENERIC 599

/*
 * Defines for OF_QUEUE_PROPERTY_MIN_RATE
 * Original name OFPQT_MIN_RATE
 */
#define OF_QUEUE_PROPERTY_MIN_RATE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_QUEUE_PROPERTY_MIN_RATE (0x1)
#define OF_QUEUE_PROPERTY_MIN_RATE_BY_VERSION(version) (0x1)
#define OF_QUEUE_PROPERTY_MIN_RATE_GENERIC 600

/*
 * Defines for OF_QUEUE_PROPERTY_NONE
 * Original name OFPQT_NONE
 */
#define OF_QUEUE_PROPERTY_NONE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1))
#define OF_QUEUE_PROPERTY_NONE (0x0)
#define OF_QUEUE_PROPERTY_NONE_BY_VERSION(version) (0x0)
#define OF_QUEUE_PROPERTY_NONE_GENERIC 601

/****************************************************************
 * Identifiers from ofp_requestforward_reason
 *****************************************************************/

/*
 * Defines for OFPRFR_GROUP_MOD
 * Original name OFPRFR_GROUP_MOD
 */
#define OFPRFR_GROUP_MOD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPRFR_GROUP_MOD (0x0)
#define OFPRFR_GROUP_MOD_BY_VERSION(version) (0x0)
#define OFPRFR_GROUP_MOD_GENERIC 602

/*
 * Defines for OFPRFR_METER_MOD
 * Original name OFPRFR_METER_MOD
 */
#define OFPRFR_METER_MOD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPRFR_METER_MOD (0x1)
#define OFPRFR_METER_MOD_BY_VERSION(version) (0x1)
#define OFPRFR_METER_MOD_GENERIC 603

/****************************************************************
 * Identifiers from ofp_role_request_failed_code
 *****************************************************************/

/*
 * Defines for OF_ROLE_REQUEST_FAILED_BAD_ROLE
 * Original name OFPRRFC_BAD_ROLE
 */
#define OF_ROLE_REQUEST_FAILED_BAD_ROLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ROLE_REQUEST_FAILED_BAD_ROLE (0x2)
#define OF_ROLE_REQUEST_FAILED_BAD_ROLE_BY_VERSION(version) (0x2)
#define OF_ROLE_REQUEST_FAILED_BAD_ROLE_GENERIC 604

/*
 * Defines for OF_ROLE_REQUEST_FAILED_STALE
 * Original name OFPRRFC_STALE
 */
#define OF_ROLE_REQUEST_FAILED_STALE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ROLE_REQUEST_FAILED_STALE (0x0)
#define OF_ROLE_REQUEST_FAILED_STALE_BY_VERSION(version) (0x0)
#define OF_ROLE_REQUEST_FAILED_STALE_GENERIC 605

/*
 * Defines for OF_ROLE_REQUEST_FAILED_UNSUP
 * Original name OFPRRFC_UNSUP
 */
#define OF_ROLE_REQUEST_FAILED_UNSUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_ROLE_REQUEST_FAILED_UNSUP (0x1)
#define OF_ROLE_REQUEST_FAILED_UNSUP_BY_VERSION(version) (0x1)
#define OF_ROLE_REQUEST_FAILED_UNSUP_GENERIC 606

/****************************************************************
 * Identifiers from ofp_stats_reply_flags
 *****************************************************************/

/*
 * Defines for OF_STATS_REPLY_FLAG_REPLY_MORE
 * Original name OFPSF_REPLY_MORE
 */
#define OF_STATS_REPLY_FLAG_REPLY_MORE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_REPLY_FLAG_REPLY_MORE (0x1)
#define OF_STATS_REPLY_FLAG_REPLY_MORE_BY_VERSION(version) (0x1)

#define OF_STATS_REPLY_FLAG_REPLY_MORE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_STATS_REPLY_FLAG_REPLY_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REPLY_MORE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_STATS_REPLY_FLAG_REPLY_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REPLY_MORE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_STATS_REPLY_FLAG_REPLY_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REPLY_MORE_GENERIC 607

/****************************************************************
 * Identifiers from ofp_stats_request_flags
 *****************************************************************/

/*
 * Defines for OF_STATS_REPLY_FLAG_REQ_MORE
 * Original name OFPSF_REQ_MORE
 */
#define OF_STATS_REPLY_FLAG_REQ_MORE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_STATS_REPLY_FLAG_REQ_MORE (0x1)
#define OF_STATS_REPLY_FLAG_REQ_MORE_BY_VERSION(version) (0x1)

#define OF_STATS_REPLY_FLAG_REQ_MORE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_STATS_REPLY_FLAG_REQ_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REQ_MORE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_STATS_REPLY_FLAG_REQ_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REQ_MORE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_STATS_REPLY_FLAG_REQ_MORE_BY_VERSION(version))
#define OF_STATS_REPLY_FLAG_REQ_MORE_GENERIC 608

/****************************************************************
 * Identifiers from ofp_stats_type
 *****************************************************************/

/*
 * Defines for OF_MULTIPART_FLOW_MONITOR
 * Original name OFPMP_FLOW_MONITOR
 */
#define OF_MULTIPART_FLOW_MONITOR_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_MULTIPART_FLOW_MONITOR (0x10)
#define OF_MULTIPART_FLOW_MONITOR_BY_VERSION(version) (0x10)
#define OF_MULTIPART_FLOW_MONITOR_GENERIC 609

/*
 * Defines for OF_MULTIPART_QUEUE_DESC
 * Original name OFPMP_QUEUE_DESC
 */
#define OF_MULTIPART_QUEUE_DESC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_MULTIPART_QUEUE_DESC (0xf)
#define OF_MULTIPART_QUEUE_DESC_BY_VERSION(version) (0xf)
#define OF_MULTIPART_QUEUE_DESC_GENERIC 610

/*
 * Defines for OF_MULTIPART_TABLE_DESC
 * Original name OFPMP_TABLE_DESC
 */
#define OF_MULTIPART_TABLE_DESC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_MULTIPART_TABLE_DESC (0xe)
#define OF_MULTIPART_TABLE_DESC_BY_VERSION(version) (0xe)
#define OF_MULTIPART_TABLE_DESC_GENERIC 611

/*
 * Defines for OF_STATS_TYPE_AGGREGATE
 * Original name OFPST_AGGREGATE
 */
#define OF_STATS_TYPE_AGGREGATE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_AGGREGATE (0x2)
#define OF_STATS_TYPE_AGGREGATE_BY_VERSION(version) (0x2)
#define OF_STATS_TYPE_AGGREGATE_GENERIC 612

/*
 * Defines for OF_STATS_TYPE_DESC
 * Original name OFPST_DESC
 */
#define OF_STATS_TYPE_DESC_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_DESC (0x0)
#define OF_STATS_TYPE_DESC_BY_VERSION(version) (0x0)
#define OF_STATS_TYPE_DESC_GENERIC 613

/*
 * Defines for OF_STATS_TYPE_EXPERIMENTER
 * Original name OFPST_EXPERIMENTER
 */
#define OF_STATS_TYPE_EXPERIMENTER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_EXPERIMENTER (0xffff)
#define OF_STATS_TYPE_EXPERIMENTER_BY_VERSION(version) (0xffff)
#define OF_STATS_TYPE_EXPERIMENTER_GENERIC 614

/*
 * Defines for OF_STATS_TYPE_FLOW
 * Original name OFPST_FLOW
 */
#define OF_STATS_TYPE_FLOW_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_FLOW (0x1)
#define OF_STATS_TYPE_FLOW_BY_VERSION(version) (0x1)
#define OF_STATS_TYPE_FLOW_GENERIC 615

/*
 * Defines for OF_STATS_TYPE_GROUP
 * Original name OFPST_GROUP
 */
#define OF_STATS_TYPE_GROUP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_STATS_TYPE_GROUP (0x6)
#define OF_STATS_TYPE_GROUP_BY_VERSION(version) (0x6)
#define OF_STATS_TYPE_GROUP_GENERIC 616

/*
 * Defines for OF_STATS_TYPE_GROUP_DESC
 * Original name OFPST_GROUP_DESC
 */
#define OF_STATS_TYPE_GROUP_DESC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_STATS_TYPE_GROUP_DESC (0x7)
#define OF_STATS_TYPE_GROUP_DESC_BY_VERSION(version) (0x7)
#define OF_STATS_TYPE_GROUP_DESC_GENERIC 617

/*
 * Defines for OF_STATS_TYPE_GROUP_FEATURES
 * Original name OFPST_GROUP_FEATURES
 */
#define OF_STATS_TYPE_GROUP_FEATURES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_STATS_TYPE_GROUP_FEATURES (0x8)
#define OF_STATS_TYPE_GROUP_FEATURES_BY_VERSION(version) (0x8)
#define OF_STATS_TYPE_GROUP_FEATURES_GENERIC 618

/*
 * Defines for OF_STATS_TYPE_METER
 * Original name OFPST_METER
 */
#define OF_STATS_TYPE_METER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_STATS_TYPE_METER (0x9)
#define OF_STATS_TYPE_METER_BY_VERSION(version) (0x9)
#define OF_STATS_TYPE_METER_GENERIC 619

/*
 * Defines for OF_STATS_TYPE_METER_CONFIG
 * Original name OFPST_METER_CONFIG
 */
#define OF_STATS_TYPE_METER_CONFIG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_STATS_TYPE_METER_CONFIG (0xa)
#define OF_STATS_TYPE_METER_CONFIG_BY_VERSION(version) (0xa)
#define OF_STATS_TYPE_METER_CONFIG_GENERIC 620

/*
 * Defines for OF_STATS_TYPE_METER_FEATURES
 * Original name OFPST_METER_FEATURES
 */
#define OF_STATS_TYPE_METER_FEATURES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_STATS_TYPE_METER_FEATURES (0xb)
#define OF_STATS_TYPE_METER_FEATURES_BY_VERSION(version) (0xb)
#define OF_STATS_TYPE_METER_FEATURES_GENERIC 621

/*
 * Defines for OF_STATS_TYPE_PORT
 * Original name OFPST_PORT
 */
#define OF_STATS_TYPE_PORT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_PORT (0x4)
#define OF_STATS_TYPE_PORT_BY_VERSION(version) (0x4)
#define OF_STATS_TYPE_PORT_GENERIC 622

/*
 * Defines for OF_STATS_TYPE_PORT_DESC
 * Original name OFPST_PORT_DESC
 */
#define OF_STATS_TYPE_PORT_DESC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_STATS_TYPE_PORT_DESC (0xd)
#define OF_STATS_TYPE_PORT_DESC_BY_VERSION(version) (0xd)
#define OF_STATS_TYPE_PORT_DESC_GENERIC 623

/*
 * Defines for OF_STATS_TYPE_QUEUE
 * Original name OFPST_QUEUE
 */
#define OF_STATS_TYPE_QUEUE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_QUEUE (0x5)
#define OF_STATS_TYPE_QUEUE_BY_VERSION(version) (0x5)
#define OF_STATS_TYPE_QUEUE_GENERIC 624

/*
 * Defines for OF_STATS_TYPE_TABLE
 * Original name OFPST_TABLE
 */
#define OF_STATS_TYPE_TABLE_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_STATS_TYPE_TABLE (0x3)
#define OF_STATS_TYPE_TABLE_BY_VERSION(version) (0x3)
#define OF_STATS_TYPE_TABLE_GENERIC 625

/*
 * Defines for OF_STATS_TYPE_TABLE_FEATURES
 * Original name OFPST_TABLE_FEATURES
 */
#define OF_STATS_TYPE_TABLE_FEATURES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_STATS_TYPE_TABLE_FEATURES (0xc)
#define OF_STATS_TYPE_TABLE_FEATURES_BY_VERSION(version) (0xc)
#define OF_STATS_TYPE_TABLE_FEATURES_GENERIC 626

/****************************************************************
 * Identifiers from ofp_switch_config_failed_code
 *****************************************************************/

/*
 * Defines for OF_SWITCH_CONFIG_FAILED_BAD_FLAGS
 * Original name OFPSCFC_BAD_FLAGS
 */
#define OF_SWITCH_CONFIG_FAILED_BAD_FLAGS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_SWITCH_CONFIG_FAILED_BAD_FLAGS (0x0)
#define OF_SWITCH_CONFIG_FAILED_BAD_FLAGS_BY_VERSION(version) (0x0)
#define OF_SWITCH_CONFIG_FAILED_BAD_FLAGS_GENERIC 627

/*
 * Defines for OF_SWITCH_CONFIG_FAILED_BAD_LEN
 * Original name OFPSCFC_BAD_LEN
 */
#define OF_SWITCH_CONFIG_FAILED_BAD_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_SWITCH_CONFIG_FAILED_BAD_LEN (0x1)
#define OF_SWITCH_CONFIG_FAILED_BAD_LEN_BY_VERSION(version) (0x1)
#define OF_SWITCH_CONFIG_FAILED_BAD_LEN_GENERIC 628

/*
 * Defines for OF_SWITCH_CONFIG_FAILED_EPERM
 * Original name OFPSCFC_EPERM
 */
#define OF_SWITCH_CONFIG_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_SWITCH_CONFIG_FAILED_EPERM (0x2)
#define OF_SWITCH_CONFIG_FAILED_EPERM_BY_VERSION(version) (0x2)
#define OF_SWITCH_CONFIG_FAILED_EPERM_GENERIC 629

/****************************************************************
 * Identifiers from ofp_table
 *****************************************************************/

/*
 * Defines for OF_TABLE_ALL
 * Original name OFPTT_ALL
 */
#define OF_TABLE_ALL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_ALL (0xff)
#define OF_TABLE_ALL_BY_VERSION(version) (0xff)
#define OF_TABLE_ALL_GENERIC 630

/*
 * Defines for OF_TABLE_MAX
 * Original name OFPTT_MAX
 */
#define OF_TABLE_MAX_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_MAX (0xfe)
#define OF_TABLE_MAX_BY_VERSION(version) (0xfe)
#define OF_TABLE_MAX_GENERIC 631

/****************************************************************
 * Identifiers from ofp_table_config
 *****************************************************************/

/*
 * Defines for OF_TABLE_CONFIG_DEPRECATED_MASK
 * Original name OFPTC_DEPRECATED_MASK
 */
#define OF_TABLE_CONFIG_DEPRECATED_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_CONFIG_DEPRECATED_MASK (0x3)
#define OF_TABLE_CONFIG_DEPRECATED_MASK_BY_VERSION(version) (0x3)

#define OF_TABLE_CONFIG_DEPRECATED_MASK_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_TABLE_CONFIG_DEPRECATED_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_DEPRECATED_MASK_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_TABLE_CONFIG_DEPRECATED_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_DEPRECATED_MASK_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_TABLE_CONFIG_DEPRECATED_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_DEPRECATED_MASK_GENERIC 632

/*
 * Defines for OF_TABLE_CONFIG_EVICTION
 * Original name OFPTC_EVICTION
 */
#define OF_TABLE_CONFIG_EVICTION_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_TABLE_CONFIG_EVICTION (0x4)
#define OF_TABLE_CONFIG_EVICTION_BY_VERSION(version) (0x4)

#define OF_TABLE_CONFIG_EVICTION_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_TABLE_CONFIG_EVICTION_BY_VERSION(version))
#define OF_TABLE_CONFIG_EVICTION_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_TABLE_CONFIG_EVICTION_BY_VERSION(version))
#define OF_TABLE_CONFIG_EVICTION_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_TABLE_CONFIG_EVICTION_BY_VERSION(version))
#define OF_TABLE_CONFIG_EVICTION_GENERIC 633

/*
 * Defines for OF_TABLE_CONFIG_TABLE_MISS_CONTINUE
 * Original name OFPTC_TABLE_MISS_CONTINUE
 */
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2))
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE (0x1)
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_BY_VERSION(version) (0x1)

#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_CONTINUE_GENERIC 634

/*
 * Defines for OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER
 * Original name OFPTC_TABLE_MISS_CONTROLLER
 */
#define OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2))
#define OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER (0x0)
#define OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER_BY_VERSION(version) (0x0)
#define OF_TABLE_CONFIG_TABLE_MISS_CONTROLLER_GENERIC 635

/*
 * Defines for OF_TABLE_CONFIG_TABLE_MISS_DROP
 * Original name OFPTC_TABLE_MISS_DROP
 */
#define OF_TABLE_CONFIG_TABLE_MISS_DROP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2))
#define OF_TABLE_CONFIG_TABLE_MISS_DROP (0x2)
#define OF_TABLE_CONFIG_TABLE_MISS_DROP_BY_VERSION(version) (0x2)

#define OF_TABLE_CONFIG_TABLE_MISS_DROP_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_TABLE_CONFIG_TABLE_MISS_DROP_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_DROP_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_TABLE_CONFIG_TABLE_MISS_DROP_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_DROP_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_TABLE_CONFIG_TABLE_MISS_DROP_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_DROP_GENERIC 636

/*
 * Defines for OF_TABLE_CONFIG_TABLE_MISS_MASK
 * Original name OFPTC_TABLE_MISS_MASK
 */
#define OF_TABLE_CONFIG_TABLE_MISS_MASK_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2))
#define OF_TABLE_CONFIG_TABLE_MISS_MASK (0x3)
#define OF_TABLE_CONFIG_TABLE_MISS_MASK_BY_VERSION(version) (0x3)

#define OF_TABLE_CONFIG_TABLE_MISS_MASK_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_TABLE_CONFIG_TABLE_MISS_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_MASK_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_TABLE_CONFIG_TABLE_MISS_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_MASK_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_TABLE_CONFIG_TABLE_MISS_MASK_BY_VERSION(version))
#define OF_TABLE_CONFIG_TABLE_MISS_MASK_GENERIC 637

/*
 * Defines for OF_TABLE_CONFIG_VACANCY_EVENTS
 * Original name OFPTC_VACANCY_EVENTS
 */
#define OF_TABLE_CONFIG_VACANCY_EVENTS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_TABLE_CONFIG_VACANCY_EVENTS (0x8)
#define OF_TABLE_CONFIG_VACANCY_EVENTS_BY_VERSION(version) (0x8)

#define OF_TABLE_CONFIG_VACANCY_EVENTS_SET(flags, version)     \
    OF_FLAG_SET(flags, OF_TABLE_CONFIG_VACANCY_EVENTS_BY_VERSION(version))
#define OF_TABLE_CONFIG_VACANCY_EVENTS_TEST(flags, version)    \
    OF_FLAG_TEST(flags, OF_TABLE_CONFIG_VACANCY_EVENTS_BY_VERSION(version))
#define OF_TABLE_CONFIG_VACANCY_EVENTS_CLEAR(flags, version)   \
    OF_FLAG_CLEAR(flags, OF_TABLE_CONFIG_VACANCY_EVENTS_BY_VERSION(version))
#define OF_TABLE_CONFIG_VACANCY_EVENTS_GENERIC 638

/****************************************************************
 * Identifiers from ofp_table_feature_prop_type
 *****************************************************************/

/*
 * Defines for OF_TABLE_FEATURE_APPLY_ACTIONS
 * Original name OFPTFPT_APPLY_ACTIONS
 */
#define OF_TABLE_FEATURE_APPLY_ACTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_APPLY_ACTIONS (0x6)
#define OF_TABLE_FEATURE_APPLY_ACTIONS_BY_VERSION(version) (0x6)
#define OF_TABLE_FEATURE_APPLY_ACTIONS_GENERIC 639

/*
 * Defines for OF_TABLE_FEATURE_APPLY_ACTIONS_MISS
 * Original name OFPTFPT_APPLY_ACTIONS_MISS
 */
#define OF_TABLE_FEATURE_APPLY_ACTIONS_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_APPLY_ACTIONS_MISS (0x7)
#define OF_TABLE_FEATURE_APPLY_ACTIONS_MISS_BY_VERSION(version) (0x7)
#define OF_TABLE_FEATURE_APPLY_ACTIONS_MISS_GENERIC 640

/*
 * Defines for OF_TABLE_FEATURE_APPLY_SETFIELD
 * Original name OFPTFPT_APPLY_SETFIELD
 */
#define OF_TABLE_FEATURE_APPLY_SETFIELD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_APPLY_SETFIELD (0xe)
#define OF_TABLE_FEATURE_APPLY_SETFIELD_BY_VERSION(version) (0xe)
#define OF_TABLE_FEATURE_APPLY_SETFIELD_GENERIC 641

/*
 * Defines for OF_TABLE_FEATURE_APPLY_SETFIELD_MISS
 * Original name OFPTFPT_APPLY_SETFIELD_MISS
 */
#define OF_TABLE_FEATURE_APPLY_SETFIELD_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_APPLY_SETFIELD_MISS (0xf)
#define OF_TABLE_FEATURE_APPLY_SETFIELD_MISS_BY_VERSION(version) (0xf)
#define OF_TABLE_FEATURE_APPLY_SETFIELD_MISS_GENERIC 642

/*
 * Defines for OF_TABLE_FEATURE_EXPERIMENTER
 * Original name OFPTFPT_EXPERIMENTER
 */
#define OF_TABLE_FEATURE_EXPERIMENTER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_EXPERIMENTER (0xfffe)
#define OF_TABLE_FEATURE_EXPERIMENTER_BY_VERSION(version) (0xfffe)
#define OF_TABLE_FEATURE_EXPERIMENTER_GENERIC 643

/*
 * Defines for OF_TABLE_FEATURE_EXPERIMENTER_MISS
 * Original name OFPTFPT_EXPERIMENTER_MISS
 */
#define OF_TABLE_FEATURE_EXPERIMENTER_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_EXPERIMENTER_MISS (0xffff)
#define OF_TABLE_FEATURE_EXPERIMENTER_MISS_BY_VERSION(version) (0xffff)
#define OF_TABLE_FEATURE_EXPERIMENTER_MISS_GENERIC 644

/*
 * Defines for OF_TABLE_FEATURE_INSTRUCTIONS
 * Original name OFPTFPT_INSTRUCTIONS
 */
#define OF_TABLE_FEATURE_INSTRUCTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_INSTRUCTIONS (0x0)
#define OF_TABLE_FEATURE_INSTRUCTIONS_BY_VERSION(version) (0x0)
#define OF_TABLE_FEATURE_INSTRUCTIONS_GENERIC 645

/*
 * Defines for OF_TABLE_FEATURE_INSTRUCTIONS_MISS
 * Original name OFPTFPT_INSTRUCTIONS_MISS
 */
#define OF_TABLE_FEATURE_INSTRUCTIONS_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_INSTRUCTIONS_MISS (0x1)
#define OF_TABLE_FEATURE_INSTRUCTIONS_MISS_BY_VERSION(version) (0x1)
#define OF_TABLE_FEATURE_INSTRUCTIONS_MISS_GENERIC 646

/*
 * Defines for OF_TABLE_FEATURE_MATCH
 * Original name OFPTFPT_MATCH
 */
#define OF_TABLE_FEATURE_MATCH_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_MATCH (0x8)
#define OF_TABLE_FEATURE_MATCH_BY_VERSION(version) (0x8)
#define OF_TABLE_FEATURE_MATCH_GENERIC 647

/*
 * Defines for OF_TABLE_FEATURE_NEXT_TABLES
 * Original name OFPTFPT_NEXT_TABLES
 */
#define OF_TABLE_FEATURE_NEXT_TABLES_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_NEXT_TABLES (0x2)
#define OF_TABLE_FEATURE_NEXT_TABLES_BY_VERSION(version) (0x2)
#define OF_TABLE_FEATURE_NEXT_TABLES_GENERIC 648

/*
 * Defines for OF_TABLE_FEATURE_NEXT_TABLES_MISS
 * Original name OFPTFPT_NEXT_TABLES_MISS
 */
#define OF_TABLE_FEATURE_NEXT_TABLES_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_NEXT_TABLES_MISS (0x3)
#define OF_TABLE_FEATURE_NEXT_TABLES_MISS_BY_VERSION(version) (0x3)
#define OF_TABLE_FEATURE_NEXT_TABLES_MISS_GENERIC 649

/*
 * Defines for OF_TABLE_FEATURE_TABLE_SYNC_FROM
 * Original name OFPTFPT_TABLE_SYNC_FROM
 */
#define OF_TABLE_FEATURE_TABLE_SYNC_FROM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_TABLE_SYNC_FROM (0x10)
#define OF_TABLE_FEATURE_TABLE_SYNC_FROM_BY_VERSION(version) (0x10)
#define OF_TABLE_FEATURE_TABLE_SYNC_FROM_GENERIC 650

/*
 * Defines for OF_TABLE_FEATURE_WILDCARDS
 * Original name OFPTFPT_WILDCARDS
 */
#define OF_TABLE_FEATURE_WILDCARDS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_WILDCARDS (0xa)
#define OF_TABLE_FEATURE_WILDCARDS_BY_VERSION(version) (0xa)
#define OF_TABLE_FEATURE_WILDCARDS_GENERIC 651

/*
 * Defines for OF_TABLE_FEATURE_WRITE_ACTIONS
 * Original name OFPTFPT_WRITE_ACTIONS
 */
#define OF_TABLE_FEATURE_WRITE_ACTIONS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_WRITE_ACTIONS (0x4)
#define OF_TABLE_FEATURE_WRITE_ACTIONS_BY_VERSION(version) (0x4)
#define OF_TABLE_FEATURE_WRITE_ACTIONS_GENERIC 652

/*
 * Defines for OF_TABLE_FEATURE_WRITE_ACTIONS_MISS
 * Original name OFPTFPT_WRITE_ACTIONS_MISS
 */
#define OF_TABLE_FEATURE_WRITE_ACTIONS_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_WRITE_ACTIONS_MISS (0x5)
#define OF_TABLE_FEATURE_WRITE_ACTIONS_MISS_BY_VERSION(version) (0x5)
#define OF_TABLE_FEATURE_WRITE_ACTIONS_MISS_GENERIC 653

/*
 * Defines for OF_TABLE_FEATURE_WRITE_SETFIELD
 * Original name OFPTFPT_WRITE_SETFIELD
 */
#define OF_TABLE_FEATURE_WRITE_SETFIELD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_WRITE_SETFIELD (0xc)
#define OF_TABLE_FEATURE_WRITE_SETFIELD_BY_VERSION(version) (0xc)
#define OF_TABLE_FEATURE_WRITE_SETFIELD_GENERIC 654

/*
 * Defines for OF_TABLE_FEATURE_WRITE_SETFIELD_MISS
 * Original name OFPTFPT_WRITE_SETFIELD_MISS
 */
#define OF_TABLE_FEATURE_WRITE_SETFIELD_MISS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_FEATURE_WRITE_SETFIELD_MISS (0xd)
#define OF_TABLE_FEATURE_WRITE_SETFIELD_MISS_BY_VERSION(version) (0xd)
#define OF_TABLE_FEATURE_WRITE_SETFIELD_MISS_GENERIC 655

/****************************************************************
 * Identifiers from ofp_table_features_failed_code
 *****************************************************************/

/*
 * Defines for OF_TABLE_REQUEST_FAILED_BAD_ARGUMENT
 * Original name OFPTFFC_BAD_ARGUMENT
 */
#define OF_TABLE_REQUEST_FAILED_BAD_ARGUMENT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_REQUEST_FAILED_BAD_ARGUMENT (0x4)
#define OF_TABLE_REQUEST_FAILED_BAD_ARGUMENT_BY_VERSION(version) (0x4)
#define OF_TABLE_REQUEST_FAILED_BAD_ARGUMENT_GENERIC 656

/*
 * Defines for OF_TABLE_REQUEST_FAILED_BAD_LEN
 * Original name OFPTFFC_BAD_LEN
 */
#define OF_TABLE_REQUEST_FAILED_BAD_LEN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_REQUEST_FAILED_BAD_LEN (0x3)
#define OF_TABLE_REQUEST_FAILED_BAD_LEN_BY_VERSION(version) (0x3)
#define OF_TABLE_REQUEST_FAILED_BAD_LEN_GENERIC 657

/*
 * Defines for OF_TABLE_REQUEST_FAILED_BAD_METADATA
 * Original name OFPTFFC_BAD_METADATA
 */
#define OF_TABLE_REQUEST_FAILED_BAD_METADATA_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_REQUEST_FAILED_BAD_METADATA (0x1)
#define OF_TABLE_REQUEST_FAILED_BAD_METADATA_BY_VERSION(version) (0x1)
#define OF_TABLE_REQUEST_FAILED_BAD_METADATA_GENERIC 658

/*
 * Defines for OF_TABLE_REQUEST_FAILED_BAD_TABLE
 * Original name OFPTFFC_BAD_TABLE
 */
#define OF_TABLE_REQUEST_FAILED_BAD_TABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_REQUEST_FAILED_BAD_TABLE (0x0)
#define OF_TABLE_REQUEST_FAILED_BAD_TABLE_BY_VERSION(version) (0x0)
#define OF_TABLE_REQUEST_FAILED_BAD_TABLE_GENERIC 659

/*
 * Defines for OF_TABLE_REQUEST_FAILED_BAD_TYPE
 * Original name OFPTFFC_BAD_TYPE
 */
#define OF_TABLE_REQUEST_FAILED_BAD_TYPE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3))
#define OF_TABLE_REQUEST_FAILED_BAD_TYPE (0x2)
#define OF_TABLE_REQUEST_FAILED_BAD_TYPE_BY_VERSION(version) (0x2)
#define OF_TABLE_REQUEST_FAILED_BAD_TYPE_GENERIC 660

/*
 * Defines for OF_TABLE_REQUEST_FAILED_EPERM
 * Original name OFPTFFC_EPERM
 */
#define OF_TABLE_REQUEST_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_REQUEST_FAILED_EPERM (0x5)
#define OF_TABLE_REQUEST_FAILED_EPERM_BY_VERSION(version) (0x5)
#define OF_TABLE_REQUEST_FAILED_EPERM_GENERIC 661

/****************************************************************
 * Identifiers from ofp_table_mod_failed_code
 *****************************************************************/

/*
 * Defines for OF_TABLE_MOD_FAILED_BAD_CONFIG
 * Original name OFPTMFC_BAD_CONFIG
 */
#define OF_TABLE_MOD_FAILED_BAD_CONFIG_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_MOD_FAILED_BAD_CONFIG (0x1)
#define OF_TABLE_MOD_FAILED_BAD_CONFIG_BY_VERSION(version) (0x1)
#define OF_TABLE_MOD_FAILED_BAD_CONFIG_GENERIC 662

/*
 * Defines for OF_TABLE_MOD_FAILED_BAD_TABLE
 * Original name OFPTMFC_BAD_TABLE
 */
#define OF_TABLE_MOD_FAILED_BAD_TABLE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_MOD_FAILED_BAD_TABLE (0x0)
#define OF_TABLE_MOD_FAILED_BAD_TABLE_BY_VERSION(version) (0x0)
#define OF_TABLE_MOD_FAILED_BAD_TABLE_GENERIC 663

/*
 * Defines for OF_TABLE_MOD_FAILED_EPERM
 * Original name OFPTMFC_EPERM
 */
#define OF_TABLE_MOD_FAILED_EPERM_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_TABLE_MOD_FAILED_EPERM (0x2)
#define OF_TABLE_MOD_FAILED_EPERM_BY_VERSION(version) (0x2)
#define OF_TABLE_MOD_FAILED_EPERM_GENERIC 664

/****************************************************************
 * Identifiers from ofp_table_mod_prop_eviction_flag
 *****************************************************************/

/*
 * Defines for OFPTMPEF_IMPORTANCE
 * Original name OFPTMPEF_IMPORTANCE
 */
#define OFPTMPEF_IMPORTANCE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPTMPEF_IMPORTANCE (0x2)
#define OFPTMPEF_IMPORTANCE_BY_VERSION(version) (0x2)
#define OFPTMPEF_IMPORTANCE_GENERIC 665

/*
 * Defines for OFPTMPEF_LIFETIME
 * Original name OFPTMPEF_LIFETIME
 */
#define OFPTMPEF_LIFETIME_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPTMPEF_LIFETIME (0x4)
#define OFPTMPEF_LIFETIME_BY_VERSION(version) (0x4)
#define OFPTMPEF_LIFETIME_GENERIC 666

/*
 * Defines for OFPTMPEF_OTHER
 * Original name OFPTMPEF_OTHER
 */
#define OFPTMPEF_OTHER_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPTMPEF_OTHER (0x1)
#define OFPTMPEF_OTHER_BY_VERSION(version) (0x1)
#define OFPTMPEF_OTHER_GENERIC 667

/****************************************************************
 * Identifiers from ofp_table_reason
 *****************************************************************/

/*
 * Defines for OFPTR_VACANCY_DOWN
 * Original name OFPTR_VACANCY_DOWN
 */
#define OFPTR_VACANCY_DOWN_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPTR_VACANCY_DOWN (0x3)
#define OFPTR_VACANCY_DOWN_BY_VERSION(version) (0x3)
#define OFPTR_VACANCY_DOWN_GENERIC 668

/*
 * Defines for OFPTR_VACANCY_UP
 * Original name OFPTR_VACANCY_UP
 */
#define OFPTR_VACANCY_UP_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OFPTR_VACANCY_UP (0x4)
#define OFPTR_VACANCY_UP_BY_VERSION(version) (0x4)
#define OFPTR_VACANCY_UP_GENERIC 669

/****************************************************************
 * Identifiers from ofp_type
 *****************************************************************/

/*
 * Defines for OF_OBJ_TYPE_BARRIER_REPLY
 * Original name OFPT_BARRIER_REPLY
 */
#define OF_OBJ_TYPE_BARRIER_REPLY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_BARRIER_REPLY_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x13, 0x15, 0x15, 0x15, 0x15)
#define OF_OBJ_TYPE_BARRIER_REPLY_GENERIC 670

/*
 * Defines for OF_OBJ_TYPE_BARRIER_REQUEST
 * Original name OFPT_BARRIER_REQUEST
 */
#define OF_OBJ_TYPE_BARRIER_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_BARRIER_REQUEST_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x12, 0x14, 0x14, 0x14, 0x14)
#define OF_OBJ_TYPE_BARRIER_REQUEST_GENERIC 671

/*
 * Defines for OF_OBJ_TYPE_BUNDLE_ADD_MESSAGE
 * Original name OFPT_BUNDLE_ADD_MESSAGE
 */
#define OF_OBJ_TYPE_BUNDLE_ADD_MESSAGE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_BUNDLE_ADD_MESSAGE (0x22)
#define OF_OBJ_TYPE_BUNDLE_ADD_MESSAGE_BY_VERSION(version) (0x22)
#define OF_OBJ_TYPE_BUNDLE_ADD_MESSAGE_GENERIC 672

/*
 * Defines for OF_OBJ_TYPE_BUNDLE_CONTROL
 * Original name OFPT_BUNDLE_CONTROL
 */
#define OF_OBJ_TYPE_BUNDLE_CONTROL_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_BUNDLE_CONTROL (0x21)
#define OF_OBJ_TYPE_BUNDLE_CONTROL_BY_VERSION(version) (0x21)
#define OF_OBJ_TYPE_BUNDLE_CONTROL_GENERIC 673

/*
 * Defines for OF_OBJ_TYPE_ECHO_REPLY
 * Original name OFPT_ECHO_REPLY
 */
#define OF_OBJ_TYPE_ECHO_REPLY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_ECHO_REPLY (0x3)
#define OF_OBJ_TYPE_ECHO_REPLY_BY_VERSION(version) (0x3)
#define OF_OBJ_TYPE_ECHO_REPLY_GENERIC 674

/*
 * Defines for OF_OBJ_TYPE_ECHO_REQUEST
 * Original name OFPT_ECHO_REQUEST
 */
#define OF_OBJ_TYPE_ECHO_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_ECHO_REQUEST (0x2)
#define OF_OBJ_TYPE_ECHO_REQUEST_BY_VERSION(version) (0x2)
#define OF_OBJ_TYPE_ECHO_REQUEST_GENERIC 675

/*
 * Defines for OF_OBJ_TYPE_ERROR
 * Original name OFPT_ERROR
 */
#define OF_OBJ_TYPE_ERROR_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_ERROR (0x1)
#define OF_OBJ_TYPE_ERROR_BY_VERSION(version) (0x1)
#define OF_OBJ_TYPE_ERROR_GENERIC 676

/*
 * Defines for OF_OBJ_TYPE_EXPERIMENTER
 * Original name OFPT_EXPERIMENTER
 */
#define OF_OBJ_TYPE_EXPERIMENTER_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_EXPERIMENTER (0x4)
#define OF_OBJ_TYPE_EXPERIMENTER_BY_VERSION(version) (0x4)
#define OF_OBJ_TYPE_EXPERIMENTER_GENERIC 677

/*
 * Defines for OF_OBJ_TYPE_FEATURES_REPLY
 * Original name OFPT_FEATURES_REPLY
 */
#define OF_OBJ_TYPE_FEATURES_REPLY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_FEATURES_REPLY (0x6)
#define OF_OBJ_TYPE_FEATURES_REPLY_BY_VERSION(version) (0x6)
#define OF_OBJ_TYPE_FEATURES_REPLY_GENERIC 678

/*
 * Defines for OF_OBJ_TYPE_FEATURES_REQUEST
 * Original name OFPT_FEATURES_REQUEST
 */
#define OF_OBJ_TYPE_FEATURES_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_FEATURES_REQUEST (0x5)
#define OF_OBJ_TYPE_FEATURES_REQUEST_BY_VERSION(version) (0x5)
#define OF_OBJ_TYPE_FEATURES_REQUEST_GENERIC 679

/*
 * Defines for OF_OBJ_TYPE_FLOW_MOD
 * Original name OFPT_FLOW_MOD
 */
#define OF_OBJ_TYPE_FLOW_MOD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_FLOW_MOD (0xe)
#define OF_OBJ_TYPE_FLOW_MOD_BY_VERSION(version) (0xe)
#define OF_OBJ_TYPE_FLOW_MOD_GENERIC 680

/*
 * Defines for OF_OBJ_TYPE_FLOW_REMOVED
 * Original name OFPT_FLOW_REMOVED
 */
#define OF_OBJ_TYPE_FLOW_REMOVED_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_FLOW_REMOVED (0xb)
#define OF_OBJ_TYPE_FLOW_REMOVED_BY_VERSION(version) (0xb)
#define OF_OBJ_TYPE_FLOW_REMOVED_GENERIC 681

/*
 * Defines for OF_OBJ_TYPE_GET_ASYNC_REPLY
 * Original name OFPT_GET_ASYNC_REPLY
 */
#define OF_OBJ_TYPE_GET_ASYNC_REPLY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_GET_ASYNC_REPLY (0x1b)
#define OF_OBJ_TYPE_GET_ASYNC_REPLY_BY_VERSION(version) (0x1b)
#define OF_OBJ_TYPE_GET_ASYNC_REPLY_GENERIC 682

/*
 * Defines for OF_OBJ_TYPE_GET_ASYNC_REQUEST
 * Original name OFPT_GET_ASYNC_REQUEST
 */
#define OF_OBJ_TYPE_GET_ASYNC_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_GET_ASYNC_REQUEST (0x1a)
#define OF_OBJ_TYPE_GET_ASYNC_REQUEST_BY_VERSION(version) (0x1a)
#define OF_OBJ_TYPE_GET_ASYNC_REQUEST_GENERIC 683

/*
 * Defines for OF_OBJ_TYPE_GET_CONFIG_REPLY
 * Original name OFPT_GET_CONFIG_REPLY
 */
#define OF_OBJ_TYPE_GET_CONFIG_REPLY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_GET_CONFIG_REPLY (0x8)
#define OF_OBJ_TYPE_GET_CONFIG_REPLY_BY_VERSION(version) (0x8)
#define OF_OBJ_TYPE_GET_CONFIG_REPLY_GENERIC 684

/*
 * Defines for OF_OBJ_TYPE_GET_CONFIG_REQUEST
 * Original name OFPT_GET_CONFIG_REQUEST
 */
#define OF_OBJ_TYPE_GET_CONFIG_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_GET_CONFIG_REQUEST (0x7)
#define OF_OBJ_TYPE_GET_CONFIG_REQUEST_BY_VERSION(version) (0x7)
#define OF_OBJ_TYPE_GET_CONFIG_REQUEST_GENERIC 685

/*
 * Defines for OF_OBJ_TYPE_GROUP_MOD
 * Original name OFPT_GROUP_MOD
 */
#define OF_OBJ_TYPE_GROUP_MOD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_GROUP_MOD (0xf)
#define OF_OBJ_TYPE_GROUP_MOD_BY_VERSION(version) (0xf)
#define OF_OBJ_TYPE_GROUP_MOD_GENERIC 686

/*
 * Defines for OF_OBJ_TYPE_HELLO
 * Original name OFPT_HELLO
 */
#define OF_OBJ_TYPE_HELLO_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_HELLO (0x0)
#define OF_OBJ_TYPE_HELLO_BY_VERSION(version) (0x0)
#define OF_OBJ_TYPE_HELLO_GENERIC 687

/*
 * Defines for OF_OBJ_TYPE_METER_MOD
 * Original name OFPT_METER_MOD
 */
#define OF_OBJ_TYPE_METER_MOD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_METER_MOD (0x1d)
#define OF_OBJ_TYPE_METER_MOD_BY_VERSION(version) (0x1d)
#define OF_OBJ_TYPE_METER_MOD_GENERIC 688

/*
 * Defines for OF_OBJ_TYPE_PACKET_IN
 * Original name OFPT_PACKET_IN
 */
#define OF_OBJ_TYPE_PACKET_IN_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_PACKET_IN (0xa)
#define OF_OBJ_TYPE_PACKET_IN_BY_VERSION(version) (0xa)
#define OF_OBJ_TYPE_PACKET_IN_GENERIC 689

/*
 * Defines for OF_OBJ_TYPE_PACKET_OUT
 * Original name OFPT_PACKET_OUT
 */
#define OF_OBJ_TYPE_PACKET_OUT_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_PACKET_OUT (0xd)
#define OF_OBJ_TYPE_PACKET_OUT_BY_VERSION(version) (0xd)
#define OF_OBJ_TYPE_PACKET_OUT_GENERIC 690

/*
 * Defines for OF_OBJ_TYPE_PORT_MOD
 * Original name OFPT_PORT_MOD
 */
#define OF_OBJ_TYPE_PORT_MOD_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_PORT_MOD_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0xf, 0x10, 0x10, 0x10, 0x10)
#define OF_OBJ_TYPE_PORT_MOD_GENERIC 691

/*
 * Defines for OF_OBJ_TYPE_PORT_STATUS
 * Original name OFPT_PORT_STATUS
 */
#define OF_OBJ_TYPE_PORT_STATUS_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_PORT_STATUS (0xc)
#define OF_OBJ_TYPE_PORT_STATUS_BY_VERSION(version) (0xc)
#define OF_OBJ_TYPE_PORT_STATUS_GENERIC 692

/*
 * Defines for OF_OBJ_TYPE_QUEUE_GET_CONFIG_REPLY
 * Original name OFPT_QUEUE_GET_CONFIG_REPLY
 */
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REPLY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REPLY_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x15, 0x17, 0x17, 0x17, 0x0)
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REPLY_GENERIC 693

/*
 * Defines for OF_OBJ_TYPE_QUEUE_GET_CONFIG_REQUEST
 * Original name OFPT_QUEUE_GET_CONFIG_REQUEST
 */
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_0) || \
     ((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3))
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REQUEST_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x14, 0x16, 0x16, 0x16, 0x0)
#define OF_OBJ_TYPE_QUEUE_GET_CONFIG_REQUEST_GENERIC 694

/*
 * Defines for OF_OBJ_TYPE_REQUESTFORWARD
 * Original name OFPT_REQUESTFORWARD
 */
#define OF_OBJ_TYPE_REQUESTFORWARD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_REQUESTFORWARD (0x20)
#define OF_OBJ_TYPE_REQUESTFORWARD_BY_VERSION(version) (0x20)
#define OF_OBJ_TYPE_REQUESTFORWARD_GENERIC 695

/*
 * Defines for OF_OBJ_TYPE_ROLE_REPLY
 * Original name OFPT_ROLE_REPLY
 */
#define OF_OBJ_TYPE_ROLE_REPLY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_ROLE_REPLY (0x19)
#define OF_OBJ_TYPE_ROLE_REPLY_BY_VERSION(version) (0x19)
#define OF_OBJ_TYPE_ROLE_REPLY_GENERIC 696

/*
 * Defines for OF_OBJ_TYPE_ROLE_REQUEST
 * Original name OFPT_ROLE_REQUEST
 */
#define OF_OBJ_TYPE_ROLE_REQUEST_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_ROLE_REQUEST (0x18)
#define OF_OBJ_TYPE_ROLE_REQUEST_BY_VERSION(version) (0x18)
#define OF_OBJ_TYPE_ROLE_REQUEST_GENERIC 697

/*
 * Defines for OF_OBJ_TYPE_ROLE_STATUS
 * Original name OFPT_ROLE_STATUS
 */
#define OF_OBJ_TYPE_ROLE_STATUS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_ROLE_STATUS (0x1e)
#define OF_OBJ_TYPE_ROLE_STATUS_BY_VERSION(version) (0x1e)
#define OF_OBJ_TYPE_ROLE_STATUS_GENERIC 698

/*
 * Defines for OF_OBJ_TYPE_SET_ASYNC
 * Original name OFPT_SET_ASYNC
 */
#define OF_OBJ_TYPE_SET_ASYNC_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_SET_ASYNC (0x1c)
#define OF_OBJ_TYPE_SET_ASYNC_BY_VERSION(version) (0x1c)
#define OF_OBJ_TYPE_SET_ASYNC_GENERIC 699

/*
 * Defines for OF_OBJ_TYPE_SET_CONFIG
 * Original name OFPT_SET_CONFIG
 */
#define OF_OBJ_TYPE_SET_CONFIG_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_SET_CONFIG (0x9)
#define OF_OBJ_TYPE_SET_CONFIG_BY_VERSION(version) (0x9)
#define OF_OBJ_TYPE_SET_CONFIG_GENERIC 700

/*
 * Defines for OF_OBJ_TYPE_STATS_REPLY
 * Original name OFPT_STATS_REPLY
 */
#define OF_OBJ_TYPE_STATS_REPLY_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_STATS_REPLY_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x11, 0x13, 0x13, 0x13, 0x13)
#define OF_OBJ_TYPE_STATS_REPLY_GENERIC 701

/*
 * Defines for OF_OBJ_TYPE_STATS_REQUEST
 * Original name OFPT_STATS_REQUEST
 */
#define OF_OBJ_TYPE_STATS_REQUEST_SUPPORTED(version) OF_IDENT_IN_ALL_VERSIONS
#define OF_OBJ_TYPE_STATS_REQUEST_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x10, 0x12, 0x12, 0x12, 0x12)
#define OF_OBJ_TYPE_STATS_REQUEST_GENERIC 702

/*
 * Defines for OF_OBJ_TYPE_TABLE_MOD
 * Original name OFPT_TABLE_MOD
 */
#define OF_OBJ_TYPE_TABLE_MOD_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_TABLE_MOD (0x11)
#define OF_OBJ_TYPE_TABLE_MOD_BY_VERSION(version) (0x11)
#define OF_OBJ_TYPE_TABLE_MOD_GENERIC 703

/*
 * Defines for OF_OBJ_TYPE_TABLE_STATUS
 * Original name OFPT_TABLE_STATUS
 */
#define OF_OBJ_TYPE_TABLE_STATUS_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_4))
#define OF_OBJ_TYPE_TABLE_STATUS (0x1f)
#define OF_OBJ_TYPE_TABLE_STATUS_BY_VERSION(version) (0x1f)
#define OF_OBJ_TYPE_TABLE_STATUS_GENERIC 704

/****************************************************************
 * Identifiers from ofp_vlan_id
 *****************************************************************/

/*
 * Defines for OF_VLAN_TAG_ANY
 * Original name OFPVID_ANY
 */
#define OF_VLAN_TAG_ANY_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1))
#define OF_VLAN_TAG_ANY (0xfffe)
#define OF_VLAN_TAG_ANY_BY_VERSION(version) (0xfffe)
#define OF_VLAN_TAG_ANY_GENERIC 705

/*
 * Defines for OF_VLAN_TAG_NONE
 * Original name OFPVID_NONE
 */
#define OF_VLAN_TAG_NONE_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_1) || \
     ((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_VLAN_TAG_NONE_BY_VERSION(version)     \
    OF_VALUE_BY_VERSION(version, 0x0, 0xffff, 0x0, 0x0, 0x0)
#define OF_VLAN_TAG_NONE_GENERIC 706

/*
 * Defines for OF_VLAN_TAG_PRESENT
 * Original name OFPVID_PRESENT
 */
#define OF_VLAN_TAG_PRESENT_SUPPORTED(version)      \
    (((version) == OF_VERSION_1_2) || \
     ((version) == OF_VERSION_1_3) || \
     ((version) == OF_VERSION_1_4))
#define OF_VLAN_TAG_PRESENT (0x1000)
#define OF_VLAN_TAG_PRESENT_BY_VERSION(version) (0x1000)
#define OF_VLAN_TAG_PRESENT_GENERIC 707

#endif /* Loci identifiers header file */
